%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2004.i032.014.P.m005.c33.isometric online cinema set-06.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 12/21/2020
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 6 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Families singles dating couples watching cinema home online on led screen laptop tablet isometric set vector illustration</rdf:li>
               <rdf:li xml:lang="x-repair">Families singles dating couples watching cinema home online on led screen laptop tablet isometric set vector illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Families singles dating couples watching cinema home online on led screen laptop tablet isometric set vector illustration</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Families singles dating couples watching cinema home online on led screen laptop tablet isometric set vector illustration</rdf:li>
               <rdf:li xml:lang="x-repair">Families singles dating couples watching cinema home online on led screen laptop tablet isometric set vector illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>icon</rdf:li>
               <rdf:li>clipart</rdf:li>
               <rdf:li>clip-art</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>fast</rdf:li>
               <rdf:li>food</rdf:li>
               <rdf:li>equipment</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>home</rdf:li>
               <rdf:li>online</rdf:li>
               <rdf:li>date</rdf:li>
               <rdf:li>display</rdf:li>
               <rdf:li>tablet</rdf:li>
               <rdf:li>entertainment</rdf:li>
               <rdf:li>laptop</rdf:li>
               <rdf:li>leisure</rdf:li>
               <rdf:li>isometric</rdf:li>
               <rdf:li>together</rdf:li>
               <rdf:li>video</rdf:li>
               <rdf:li>couple</rdf:li>
               <rdf:li>control</rdf:li>
               <rdf:li>monitor</rdf:li>
               <rdf:li>relax</rdf:li>
               <rdf:li>film</rdf:li>
               <rdf:li>cinema</rdf:li>
               <rdf:li>movie</rdf:li>
               <rdf:li>pc</rdf:li>
               <rdf:li>tv</rdf:li>
               <rdf:li>seat</rdf:li>
               <rdf:li>interactive</rdf:li>
               <rdf:li>remote</rdf:li>
               <rdf:li>couch</rdf:li>
               <rdf:li>watching</rdf:li>
               <rdf:li>led</rdf:li>
               <rdf:li>isolation</rdf:li>
               <rdf:li>screen</rdf:li>
               <rdf:li>view</rdf:li>
               <rdf:li>family</rdf:li>
               <rdf:li>sitting</rdf:li>
               <rdf:li>sofa</rdf:li>
               <rdf:li>kid</rdf:li>
               <rdf:li>child</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>single</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>isolated</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
232.976 235.443 mo
249.417 225.221 li
249.417 157.469 li
232.976 167.691 li
232.976 235.443 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.498039 .521569 .937255 rgb
f
135.578 179.015 mo
233.003 235.443 li
233.003 167.691 li
135.578 111.263 li
135.578 179.015 li
.470588 .478431 .905882 rgb
f
232.925 167.645 mo
249.366 157.423 li
152.098 101.087 li
135.657 111.309 li
232.925 167.645 li
cp
.517647 .560784 .956863 rgb
f
170.68 263.675 mo
236.925 223.952 li
236.925 194.954 li
170.68 234.677 li
170.68 263.675 li
cp
.498039 .521569 .937255 rgb
f
109.525 227.692 mo
170.707 263.675 li
170.707 234.677 li
109.525 198.694 li
109.525 227.692 li
cp
.470588 .478431 .905882 rgb
f
170.629 234.632 mo
236.874 194.908 li
175.849 159.016 li
109.603 198.74 li
170.629 234.632 li
f
110.275 202.342 mo
176.521 162.618 li
154.912 84.3259 li
88.6665 124.049 li
110.275 202.342 li
f
82.1103 185.802 mo
110.303 202.342 li
88.6942 124.049 li
70.8799 120.241 li
82.1103 185.802 li
cp
f
88.6155 124.004 mo
154.861 84.2803 li
137.204 80.5632 li
70.9587 120.287 li
88.6155 124.004 li
cp
.517647 .560784 .956863 rgb
f
151.653 170.562 mo
149.13 175.191 146.436 178.652 143.811 179.992 cv
145.77 178.989 148.853 178.588 152.604 178.658 cv
154.214 179.164 156.459 179.691 159.517 180.254 cv
163.308 180.939 167.589 185.594 181.599 188.529 cv
189.846 190.259 194.847 190.876 198.023 191.473 cv
202.006 193.698 204.958 196.005 206.237 198.21 cv
204.917 195.957 204.439 192.265 204.609 187.793 cv
205.129 185.07 205.954 181.74 207.788 178.779 cv
211.463 172.839 214.126 155.619 215.45 149.011 cv
217.991 144.26 220.748 140.707 223.416 139.343 cv
220.23 140.977 214.124 141.007 206.933 139.989 cv
204.005 138.604 201.043 137.337 199.095 136.42 cv
195.936 134.949 187.212 133.85 180.105 132.856 cv
170.888 129.305 163.291 125.038 160.99 121.126 cv
161.923 122.698 162.432 124.97 162.597 127.728 cv
162.31 126.893 li
162.389 127.814 163.215 136.715 160.665 140.31 cv
157.949 144.095 153.925 155.498 153.078 162.355 cv
152.679 165.479 152.131 168.359 151.653 170.562 cv
1 .435294 .133333 rgb
f
204.451 213.563 mo
204.58 213.614 li
204.58 213.485 li
204.451 213.563 li
cp
.603922 .14902 .317647 rgb
f
166.913 112.591 mo
175.84 115.207 li
175.84 115.207 189.538 122.749 192.77 123.365 cv
196.002 123.98 202.466 124.442 203.852 128.598 cv
205.237 132.753 204.006 134.446 197.541 135.062 cv
191.077 135.678 172.761 126.443 172.761 126.443 cv
172.761 126.443 163.988 122.441 163.988 119.055 cv
163.988 115.669 166.913 112.591 166.913 112.591 cv
cp
1 .862745 .682353 rgb
f
141.671 89.8117 mo
138.747 88.8883 li
147.981 97.1994 li
149.213 107.204 li
149.213 107.204 152.753 96.5839 154.292 89.35 cv
155.831 82.1161 149.674 74.5743 142.748 70.7267 cv
135.822 66.8788 129.204 71.3422 129.204 71.3422 cv
129.204 71.3422 123.355 69.9571 121.201 78.1144 cv
119.046 86.2717 125.356 100.432 124.279 103.356 cv
123.202 106.28 116.583 114.13 114.736 116.131 cv
112.889 118.132 112.889 121.826 112.889 121.826 cv
121.662 123.057 li
133.514 122.287 li
133.514 122.287 138.593 122.133 138.285 119.517 cv
137.977 116.9 137.054 87.503 137.054 87.503 cv
141.671 89.8117 li
cp
.07451 .043137 .294118 rgb
f
163.296 159.688 mo
164.219 159.688 186.613 168.23 199.773 177.234 cv
212.932 186.238 229.555 199.628 231.864 206.092 cv
234.172 212.557 244.792 257.576 244.792 257.576 cv
244.792 257.576 239.251 259.654 237.635 258.961 cv
236.019 258.269 235.096 257.345 235.096 257.345 cv
235.096 257.345 216.626 227.101 215.703 221.561 cv
214.779 216.02 213.625 212.095 213.625 212.095 cv
213.625 212.095 166.759 196.627 161.911 191.548 cv
157.062 186.468 150.829 171.924 151.06 170.308 cv
151.291 168.692 163.296 159.688 163.296 159.688 cv
.243137 .227451 .521569 rgb
f
247.716 252.805 mo
247.716 252.805 250.718 250.111 254.181 252.42 cv
257.644 254.729 260.568 257.037 263.416 257.961 cv
266.263 258.884 276.19 259.577 278.191 261.655 cv
280.192 263.732 281.731 262.424 283.193 264.348 cv
284.655 266.272 283.886 267.965 282.962 268.273 cv
282.039 268.581 281.808 269.043 281.808 269.043 cv
281.808 269.043 281.731 270.043 281.038 270.12 cv
280.346 270.197 279.807 270.736 279.807 270.736 cv
279.807 270.736 279.038 271.736 278.576 271.736 cv
278.114 271.736 277.268 271.659 277.268 271.659 cv
277.268 271.659 275.267 273.044 274.036 272.89 cv
272.804 272.736 272.804 272.736 272.804 272.736 cv
272.804 272.736 273.882 273.506 271.265 273.198 cv
268.649 272.89 264.185 271.197 263.646 270.274 cv
263.108 269.35 256.336 265.041 252.796 263.886 cv
249.256 262.732 238.943 256.037 238.943 256.037 cv
247.716 252.805 li
cp
1 .862745 .682353 rgb
f
245.639 257.576 mo
245.639 257.576 245.706 257.645 245.83 257.773 cv
247.013 258.989 253.374 265.505 255.951 267.734 cv
258.798 270.197 263.492 272.582 263.8 275.122 cv
264.108 277.662 260.568 280.663 253.334 278.046 cv
246.1 275.43 245.562 270.428 242.483 269.043 cv
239.405 267.657 232.71 264.194 232.017 261.347 cv
231.325 258.499 235.019 255.729 234.865 253.42 cv
234.711 251.112 244.638 253.036 244.638 253.036 cv
245.639 257.576 li
cp
.917647 .756863 .560784 rgb
f
148.52 168.692 mo
148.52 168.692 150.367 164.998 159.14 175.849 cv
167.913 186.699 204.159 215.558 209.008 221.791 cv
213.856 228.025 245.947 249.957 248.486 251.343 cv
251.026 252.728 252.873 253.651 250.333 256.653 cv
247.793 259.654 245.254 259.423 243.638 259.192 cv
242.022 258.961 208.084 245.802 203.236 241.184 cv
198.388 236.567 198.388 233.797 194.694 231.95 cv
191 230.103 148.52 217.174 139.054 204.015 cv
129.589 190.855 125.664 183.929 125.664 177.926 cv
125.664 171.924 129.127 169.153 129.127 169.153 cv
148.52 168.692 li
.4 .396078 .741176 rgb
f
149.213 107.204 mo
149.213 107.204 164.912 132.445 166.605 138.448 cv
168.298 144.451 161.834 144.451 163.219 150.761 cv
164.604 157.071 181.073 167.537 181.073 167.537 cv
181.073 167.537 164.45 168.461 145.057 194.318 cv
135.872 206.565 127.665 171.231 127.665 171.231 cv
127.665 171.231 127.203 166.152 123.355 156.456 cv
119.508 146.759 116.583 148.144 115.66 139.525 cv
114.736 130.906 117.199 119.363 117.199 119.363 cv
117.199 119.363 126.742 108.897 131.82 106.28 cv
136.9 103.664 149.213 107.204 149.213 107.204 cv
.137255 .117647 .396078 rgb
f
159.217 127.674 mo
159.679 127.674 163.834 125.365 164.604 125.365 cv
165.374 125.365 172.761 126.443 172.761 126.443 cv
172.761 126.443 172.635 120.324 173.839 117.516 cv
174.3 116.438 175.84 115.207 175.84 115.207 cv
175.84 115.207 165.989 106.434 158.294 104.126 cv
153.494 102.686 145.827 107.05 145.827 107.05 cv
158.14 127.212 li
159.217 127.674 li
cp
f
174.146 109.666 mo
174.146 109.666 187.845 124.288 189.384 126.135 cv
190.923 127.982 193.578 133.715 198.041 134.177 cv
202.505 134.639 206.006 133.831 205.237 129.521 cv
204.467 125.211 196.464 117.978 191.693 114.745 cv
186.921 111.513 178.61 105.819 178.61 105.819 cv
178.61 105.819 176.455 98.5847 174.762 96.276 cv
173.069 93.9673 168.298 90.4274 164.912 91.6588 cv
161.526 92.89 157.986 94.583 157.986 94.583 cv
157.986 94.583 156.908 97.6613 156.754 98.123 cv
156.601 98.5847 158.447 99.3543 159.217 98.8926 cv
159.987 98.4309 160.294 97.0456 160.294 97.0456 cv
164.45 95.8143 li
164.45 95.8143 163.065 97.969 163.527 98.7386 cv
163.988 99.5082 165.22 101.355 165.22 101.355 cv
165.22 101.355 165.066 101.509 165.681 102.125 cv
166.297 102.74 167.528 103.972 167.528 103.972 cv
167.528 103.972 161.218 99.816 160.141 99.9698 cv
159.063 100.124 158.294 100.278 158.755 101.201 cv
159.217 102.125 160.602 101.817 161.834 103.202 cv
163.065 104.587 165.989 106.896 165.989 106.896 cv
174.146 109.666 li
cp
1 .862745 .682353 rgb
f
145.827 107.05 mo
145.827 107.05 143.826 110.744 144.595 114.592 cv
145.365 118.439 138.439 123.057 132.282 119.209 cv
126.126 115.361 125.048 112.745 125.048 112.745 cv
125.048 112.745 129.82 105.819 128.896 97.8152 cv
128.515 94.5146 141.979 103.972 145.827 107.05 cv
cp
.917647 .756863 .560784 rgb
f
150.752 83.3474 mo
150.752 83.3474 152.291 87.3491 151.521 89.5038 cv
150.752 91.6588 151.367 90.5813 151.521 93.5056 cv
151.675 96.4301 152.599 99.0464 151.521 101.201 cv
150.444 103.356 151.06 108.127 148.443 110.436 cv
145.827 112.745 138.285 110.898 135.053 108.435 cv
131.821 105.972 127.819 102.432 127.049 97.969 cv
126.28 93.5056 128.281 98.123 134.437 90.1196 cv
137.165 86.5733 136.592 80.731 137.515 81.1927 cv
138.439 81.6544 144.595 84.5787 146.135 85.0404 cv
147.674 85.5021 150.752 83.3474 150.752 83.3474 cv
cp
1 .862745 .682353 rgb
f
121.775 94.5923 mo
121.775 98.1522 124.274 102.481 127.357 104.261 cv
130.44 106.041 132.939 104.598 132.939 101.038 cv
132.939 97.4781 130.44 93.1493 127.357 91.3695 cv
124.274 89.5895 121.775 91.0325 121.775 94.5923 cv
cp
.4 .396078 .741176 rgb
f
120.812 95.8483 mo
120.812 99.041 123.053 102.923 125.818 104.519 cv
128.583 106.116 130.824 104.822 130.824 101.629 cv
130.824 98.4363 128.583 94.5543 125.818 92.9578 cv
123.053 91.3616 120.812 92.6556 120.812 95.8483 cv
cp
.666667 .662745 .952941 rgb
f
121.342 98.1206 mo
121.342 99.9933 122.657 102.271 124.279 103.207 cv
125.901 104.143 127.216 103.384 127.216 101.511 cv
127.216 99.6387 125.901 97.3613 124.279 96.425 cv
122.657 95.4886 121.342 96.2477 121.342 98.1206 cv
cp
.572549 .580392 .929412 rgb
f
149.232 75.7192 mo
149.232 75.7192 144.595 71.4963 136.284 76.8831 cv
128.617 81.8526 127.357 91.3695 127.357 91.3695 cv
124.433 90.5813 li
124.433 90.5813 125.972 78.2682 132.282 73.9588 cv
138.99 69.378 143.582 70.6052 145.98 71.9579 cv
149.136 73.7376 149.232 75.7192 149.232 75.7192 cv
cp
.4 .396078 .741176 rgb
f
148.549 74.1319 mo
148.549 74.1319 143.98 70.5726 135.668 75.9597 cv
128.001 80.929 126.588 91.5818 126.588 91.5818 cv
123.933 90.6582 li
123.933 90.6582 125.356 77.3448 131.667 73.0352 cv
138.374 68.4546 141.554 70.2417 144.249 70.8036 cv
146.741 71.323 148.549 74.1319 148.549 74.1319 cv
cp
.137255 .117647 .396078 rgb
f
154.417 280.126 mo
170.858 269.904 li
170.858 202.152 li
154.417 212.374 li
154.417 280.126 li
cp
.498039 .521569 .937255 rgb
f
57.0192 223.698 mo
154.445 280.126 li
154.445 212.374 li
57.0192 155.947 li
57.0192 223.698 li
cp
.470588 .478431 .905882 rgb
f
154.366 212.329 mo
170.807 202.106 li
73.5395 145.77 li
57.0982 155.992 li
154.366 212.329 li
.517647 .560784 .956863 rgb
f
147.9 191.302 mo
147.99 191.238 li
147.9 191.302 li
.998784 .998784 .998784 rgb
f
131.713 190.534 mo
131.633 190.46 li
131.713 190.534 li
.998941 .998941 .998941 rgb
f
131.496 190.323 mo
131.423 190.244 li
131.496 190.323 li
f
150.229 188.518 mo
150.19 188.636 li
150.229 188.518 li
cp
.996745 .996745 .996745 rgb
f
150.036 189.004 mo
149.979 189.12 li
150.036 189.004 li
cp
f
146.067 192.255 mo
145.959 192.298 li
146.067 192.255 li
f
149.912 189.244 mo
149.847 189.359 li
149.912 189.244 li
cp
f
148.352 190.977 mo
148.486 190.877 li
148.352 190.977 li
f
148.74 190.66 mo
148.608 190.775 li
148.74 190.66 li
f
147.545 191.522 mo
147.665 191.451 147.787 191.376 147.9 191.302 cv
147.787 191.376 147.665 191.451 147.545 191.522 cv
f
148.222 191.077 mo
147.99 191.238 li
148.222 191.077 li
f
150.315 188.2 mo
150.289 188.309 150.278 188.354 150.265 188.399 cv
150.315 188.2 li
cp
f
150.378 187.842 mo
150.348 188.037 150.341 188.079 150.333 188.12 cv
150.351 188.028 150.367 187.935 150.378 187.842 cv
cp
f
152.324 167.523 mo
149.23 190.18 li
152.324 167.523 li
f
148.413 184.006 mo
147.218 191.711 li
148.413 184.006 li
f
149.194 190.223 mo
149.093 190.332 li
149.194 190.223 li
f
150.142 188.761 mo
150.094 188.879 li
150.142 188.761 li
cp
f
148.868 190.547 mo
148.976 190.442 li
148.868 190.547 li
f
145.934 171.031 mo
144.516 192.771 li
145.934 171.031 li
.996902 .996902 .996902 rgb
f
144.352 192.81 mo
144.188 192.854 li
144.352 192.81 li
f
143.744 171.492 mo
142.902 193.108 li
143.744 171.492 li
.997059 .997059 .997059 rgb
f
141.47 193.267 mo
141.637 185.762 li
141.47 193.267 li
.997176 .997176 .997176 rgb
f
139.501 171.754 mo
139.775 193.298 li
139.501 171.754 li
.997451 .997451 .997451 rgb
f
137.541 171.612 mo
138.332 193.198 li
137.541 171.612 li
.997608 .997608 .997608 rgb
f
131.846 190.657 mo
131.769 190.588 li
131.868 190.677 li
131.846 190.657 li
f
131.713 190.534 mo
130.136 182.626 li
131.713 190.534 li
f
130.996 189.721 mo
130.916 189.609 li
130.996 189.721 li
.997451 .997451 .997451 rgb
f
148.269 191.04 mo
148.398 190.941 148.442 190.914 148.486 190.877 cv
148.608 190.775 li
148.74 190.66 li
148.822 190.588 li
148.976 190.442 li
149.093 190.332 li
149.194 190.223 li
152.324 167.523 li
152.186 167.664 152.167 167.693 152.14 167.72 cv
151.94 167.92 li
151.832 168.019 li
151.661 168.173 li
151.569 168.255 151.534 168.284 151.498 168.311 cv
151.316 168.463 li
151.204 168.555 151.169 168.572 151.142 168.599 cv
151.024 168.691 li
148.269 191.04 li
.94902 .964706 .968627 rgb
f
145.821 192.346 mo
145.966 192.291 146.022 192.274 146.067 192.255 cv
146.302 192.156 li
146.421 192.102 li
146.537 192.056 146.61 192.019 146.691 191.982 cv
146.919 191.877 147.002 191.827 147.084 191.782 cv
147.218 191.71 148.413 184.006 148.413 184.006 cv
149.611 169.59 li
149.516 169.638 149.455 169.669 149.41 169.696 cv
149.174 169.817 li
149.076 169.868 li
148.878 169.96 li
148.719 170.039 li
148.567 170.106 li
148.358 170.197 li
148.251 170.243 li
148.041 170.33 li
147.824 170.415 li
147.706 170.466 145.821 192.346 145.821 192.346 cv
f
142.902 193.108 mo
143.047 193.089 143.182 193.059 143.319 193.035 cv
143.499 193.003 143.626 192.978 143.754 192.953 cv
143.9 192.918 li
144 192.9 144.089 192.881 144.188 192.854 cv
144.352 192.81 li
144.516 192.771 li
145.934 171.031 li
145.831 171.055 145.765 171.078 145.711 171.087 cv
145.485 171.147 li
145.367 171.176 145.311 171.183 145.257 171.201 cv
145.033 171.246 144.97 171.268 144.897 171.277 cv
144.714 171.318 li
144.605 171.337 144.484 171.364 144.376 171.383 cv
144.094 171.433 143.961 171.458 143.825 171.476 cv
142.902 193.108 li
f
139.501 171.754 mo
139.775 193.298 li
139.884 193.306 li
140.535 193.306 li
140.626 193.306 140.726 193.298 140.816 193.298 cv
140.989 193.298 li
141.097 193.289 141.197 193.28 141.306 193.28 cv
141.47 193.267 li
141.798 171.709 li
141.703 171.71 141.64 171.72 141.577 171.72 cv
141.459 171.729 141.347 171.739 141.229 171.739 cv
140.909 171.748 li
140.714 171.756 li
140.525 171.756 li
140.274 171.763 li
140.043 171.763 li
139.91 171.758 li
139.501 171.754 li
f
135.312 171.247 mo
136.691 192.926 li
136.827 192.953 136.963 192.99 137.108 193.008 cv
137.307 193.054 137.426 193.069 137.543 193.089 cv
137.645 193.107 137.669 193.107 137.705 193.116 cv
137.796 193.125 137.897 193.143 137.987 193.153 cv
138.168 193.18 li
138.332 193.198 li
137.541 171.612 li
137.418 171.6 li
137.316 171.585 li
137.073 171.556 li
136.683 171.5 li
136.472 171.466 li
136.33 171.44 li
136.23 171.431 136.123 171.413 136.023 171.386 cv
135.874 171.358 li
135.732 171.326 135.66 171.319 135.587 171.302 cv
135.497 171.282 135.403 171.265 135.312 171.247 cv
f
131.532 169.969 mo
133.889 191.983 li
133.988 192.028 li
134.215 192.127 134.298 192.164 134.371 192.2 cv
134.479 192.245 li
134.614 192.292 134.696 192.328 134.778 192.355 cv
135.023 192.455 135.123 192.482 135.214 192.518 cv
135.337 192.558 133.49 170.749 133.49 170.749 cv
133.309 170.687 li
133.201 170.651 li
133.035 170.594 li
132.912 170.55 li
132.712 170.476 li
132.463 170.378 li
132.307 170.313 132.238 170.285 132.166 170.257 cv
132.075 170.212 131.994 170.18 131.904 170.143 cv
131.776 170.09 131.713 170.051 131.641 170.023 cv
131.532 169.969 li
f
128.555 168 mo
130.136 182.626 li
131.713 190.534 li
131.805 190.615 131.831 190.65 131.868 190.677 cv
132.004 190.796 li
132.13 190.895 li
132.275 191.006 li
132.774 191.358 129.991 169.117 129.991 169.117 cv
129.891 169.054 li
129.156 168.543 129.147 168.51 129.12 168.482 cv
128.835 168.249 128.794 168.22 128.767 168.192 cv
128.684 168.119 li
128.555 168 li
f
126.918 165.717 mo
130.498 188.828 li
130.536 188.918 130.552 188.956 130.57 188.992 cv
130.637 189.133 li
130.707 189.261 130.716 189.281 130.734 189.309 cv
130.857 189.505 130.869 189.544 130.896 189.572 cv
130.996 189.721 li
127.633 166.968 li
127.416 166.652 127.361 166.569 127.361 166.569 cv
127.233 166.352 127.216 166.316 127.198 166.289 cv
127.025 165.963 127.017 165.935 127.008 165.907 cv
126.952 165.789 126.918 165.717 126.918 165.717 cv
f
149.23 190.18 mo
149.321 190.079 li
149.437 189.942 149.503 189.871 149.556 189.798 cv
149.71 189.579 li
149.792 189.454 149.808 189.425 149.826 189.397 cv
153.135 166.459 li
153.04 166.598 li
152.922 166.788 152.848 166.885 152.783 166.975 cv
152.696 167.096 152.613 167.194 152.533 167.286 cv
152.408 167.43 152.369 167.478 152.324 167.523 cv
149.23 190.18 li
.956863 .427451 .011765 rgb
f
147.218 191.711 mo
147.336 191.648 147.445 191.586 147.545 191.522 cv
147.672 191.459 147.783 191.377 147.9 191.302 cv
147.99 191.238 li
148.082 191.184 148.15 191.133 148.222 191.077 cv
151.024 168.691 li
150.91 168.772 li
150.736 168.9 150.613 168.985 150.496 169.057 cv
150.308 169.183 150.172 169.262 150.045 169.342 cv
149.876 169.448 149.747 169.517 149.611 169.59 cv
148.413 184.006 li
147.218 191.711 li
f
144.516 192.771 mo
144.625 192.743 li
144.751 192.708 li
144.86 192.671 144.961 192.646 145.061 192.61 cv
145.277 192.544 145.414 192.499 145.542 192.454 cv
145.693 192.401 145.757 192.373 145.821 192.346 cv
147.706 170.466 li
147.51 170.533 li
147.397 170.577 147.362 170.586 147.317 170.604 cv
147.226 170.641 147.126 170.666 147.035 170.702 cv
146.864 170.758 li
146.755 170.795 146.71 170.801 146.673 170.819 cv
146.502 170.868 li
146.394 170.903 li
146.251 170.942 li
146.078 170.992 li
145.934 171.031 li
144.516 192.771 li
f
141.47 193.267 mo
141.47 193.267 141.741 193.244 141.877 193.235 cv
141.986 193.226 li
142.095 193.216 142.203 193.198 142.312 193.189 cv
142.448 193.171 li
142.557 193.162 142.675 193.143 142.784 193.126 cv
142.902 193.107 143.744 171.492 143.744 171.492 cv
143.581 171.513 li
143.466 171.53 li
143.254 171.561 li
143.119 171.576 li
142.938 171.601 li
142.805 171.617 li
142.674 171.629 li
142.492 171.648 li
142.336 171.664 li
142.187 171.675 li
142.057 171.681 141.976 171.693 141.894 171.701 cv
141.798 171.71 141.47 193.267 141.47 193.267 cv
f
137.541 171.612 mo
138.332 193.198 li
138.458 193.215 li
138.581 193.225 139.313 193.28 139.459 193.289 cv
139.574 193.289 li
139.775 193.298 li
139.501 171.754 li
139.363 171.747 li
139.219 171.74 li
139.067 171.736 li
138.879 171.726 li
138.789 171.717 138.687 171.719 138.596 171.71 cv
138.479 171.701 li
138.361 171.692 li
138.126 171.673 li
137.931 171.655 li
137.834 171.648 137.764 171.638 137.701 171.63 cv
137.541 171.612 li
f
133.49 170.749 mo
135.337 192.558 li
135.455 192.594 135.594 192.636 135.721 192.681 cv
135.757 192.691 136.029 192.763 136.129 192.79 cv
136.256 192.826 li
136.364 192.854 136.482 192.881 136.591 192.899 cv
136.691 192.926 135.312 171.247 135.312 171.247 cv
135.176 171.212 li
135.081 171.195 135.021 171.175 134.976 171.166 cv
134.885 171.148 134.803 171.121 134.722 171.103 cv
134.55 171.059 li
134.379 171.014 li
134.278 170.988 134.208 170.966 134.135 170.948 cv
133.996 170.904 li
133.792 170.847 li
133.642 170.796 li
133.49 170.749 li
f
129.991 169.117 mo
132.774 191.358 li
133.073 191.548 133.182 191.612 133.282 191.666 cv
133.634 191.856 li
133.743 191.91 li
133.889 191.983 li
131.513 169.961 li
131.341 169.879 li
131.16 169.788 li
130.996 169.707 130.842 169.626 130.688 169.535 cv
130.579 169.481 130.47 169.416 130.37 169.353 cv
130.28 169.298 li
130.12 169.195 130.081 169.171 130.045 169.153 cv
129.991 169.117 li
f
127.633 166.968 mo
131.033 189.772 li
131.205 189.998 131.224 190.025 131.251 190.052 cv
131.359 190.179 131.378 190.197 131.397 190.215 cv
131.496 190.323 li
131.66 190.487 131.686 190.507 131.713 190.534 cv
130.136 182.626 li
128.555 168 li
128.451 167.902 li
128.241 167.683 128.212 167.659 128.185 167.622 cv
128.051 167.484 li
127.941 167.35 li
127.813 167.196 li
127.668 167.015 127.651 166.986 127.633 166.968 cv
f
140.535 193.306 mo
139.884 193.306 li
139.775 193.298 li
139.574 193.289 li
139.459 193.289 li
139.313 193.28 138.581 193.225 138.458 193.215 cv
138.332 193.198 li
138.168 193.18 li
137.987 193.153 li
137.897 193.143 137.796 193.125 137.705 193.116 cv
137.669 193.107 137.645 193.107 137.543 193.089 cv
137.426 193.069 137.307 193.054 137.108 193.008 cv
137.103 193.007 137.099 193.007 137.095 193.006 cv
137.099 193.007 137.103 193.007 137.108 193.008 cv
137.307 193.054 137.426 193.069 137.543 193.089 cv
137.645 193.107 137.669 193.107 137.705 193.116 cv
137.796 193.125 137.897 193.143 137.987 193.153 cv
138.168 193.18 li
138.332 193.198 li
138.458 193.215 li
138.581 193.225 139.313 193.28 139.459 193.289 cv
139.574 193.289 li
139.775 193.298 li
139.749 191.26 li
139.749 191.26 li
139.775 193.298 li
139.884 193.306 li
140.535 193.306 li
140.626 193.306 140.726 193.298 140.816 193.298 cv
140.989 193.298 li
141.097 193.289 141.197 193.28 141.306 193.28 cv
141.47 193.267 li
141.47 193.267 li
141.47 193.267 141.741 193.244 141.877 193.235 cv
141.986 193.226 li
142.095 193.216 142.203 193.198 142.312 193.189 cv
142.448 193.171 li
142.448 193.171 li
142.448 193.171 li
142.312 193.189 li
142.203 193.198 142.095 193.216 141.986 193.226 cv
141.877 193.235 li
141.741 193.244 141.607 193.258 141.47 193.267 cv
141.306 193.28 li
141.197 193.28 141.097 193.289 140.989 193.298 cv
140.816 193.298 li
140.726 193.298 140.626 193.306 140.535 193.306 cv
141.47 193.253 mo
141.471 193.251 li
141.471 193.251 141.471 193.252 141.47 193.253 cv
141.471 193.244 mo
141.471 193.241 li
141.471 193.242 141.471 193.243 141.471 193.244 cv
141.471 193.24 mo
141.488 192.108 li
141.488 192.108 141.488 192.108 141.488 192.108 cv
141.478 192.732 141.472 193.134 141.471 193.24 cv
.490196 .541176 .92549 rgb
f
140.535 193.306 mo
139.884 193.306 li
139.775 193.298 li
139.749 191.26 li
140.307 191.665 140.884 191.963 141.488 192.108 cv
141.471 193.24 li
141.471 193.24 141.471 193.241 141.471 193.241 cv
141.471 193.244 li
141.471 193.247 141.471 193.249 141.471 193.251 cv
141.47 193.253 li
141.47 193.262 141.47 193.267 141.47 193.267 cv
141.47 193.267 li
141.306 193.28 li
141.197 193.28 141.097 193.289 140.989 193.298 cv
140.816 193.298 li
140.726 193.298 140.626 193.306 140.535 193.306 cv
.901961 .929412 .937255 rgb
f
142.784 193.126 mo
142.784 193.126 li
142.798 193.123 142.824 192.796 142.857 192.222 cv
142.884 192.221 142.911 192.22 142.937 192.219 cv
142.902 193.108 li
142.866 193.113 142.826 193.119 142.784 193.126 cv
142.784 193.126 li
142.902 193.108 mo
142.937 192.219 li
142.937 192.219 142.937 192.219 142.938 192.219 cv
142.939 192.219 142.939 192.219 142.94 192.219 cv
142.902 193.108 li
142.902 193.107 142.902 193.107 142.902 193.107 cv
.490196 .541176 .92549 rgb
f
142.902 193.108 mo
142.937 192.219 li
142.937 192.219 li
142.902 193.108 li
142.902 193.107 142.902 193.107 142.902 193.107 cv
.945098 .960784 .964706 rgb
f
142.902 193.108 mo
142.94 192.219 li
143.52 192.201 144.063 192.155 144.561 192.083 cv
144.561 192.083 144.561 192.083 144.561 192.083 cv
144.516 192.771 li
144.352 192.81 li
144.188 192.854 li
144.089 192.881 144 192.9 143.9 192.918 cv
143.754 192.953 li
143.626 192.978 143.499 193.003 143.319 193.035 cv
143.319 193.035 li
143.204 193.055 143.091 193.077 142.902 193.107 cv
.901961 .929412 .937255 rgb
f
137.094 193.006 mo
137.092 193.006 137.091 193.006 137.089 193.005 cv
137.091 193.006 137.092 193.006 137.094 193.006 cv
137.085 193.005 mo
137.085 193.005 137.084 193.005 137.083 193.005 cv
137.084 193.005 137.085 193.005 137.085 193.005 cv
136.691 192.922 mo
136.659 192.915 136.626 192.907 136.591 192.899 cv
136.482 192.881 136.364 192.854 136.256 192.826 cv
136.129 192.79 li
136.029 192.763 135.757 192.691 135.721 192.681 cv
135.721 192.681 li
135.721 192.681 li
135.757 192.691 136.029 192.763 136.129 192.79 cv
136.256 192.826 li
136.364 192.854 136.482 192.881 136.591 192.899 cv
136.591 192.899 136.591 192.899 136.591 192.899 cv
136.625 192.899 136.48 190.265 136.276 186.835 cv
136.287 186.853 136.297 186.872 136.307 186.891 cv
136.691 192.922 li
.490196 .541176 .92549 rgb
f
132.604 179.979 mo
132.593 179.973 li
132.061 175.039 li
132.063 175.048 132.065 175.056 132.067 175.065 cv
132.073 175.095 132.08 175.126 132.087 175.159 cv
132.604 179.979 li
.129412 .113725 .384314 rgb
f
135.717 192.68 mo
135.591 192.635 135.47 192.602 135.214 192.518 cv
135.123 192.482 135.023 192.455 134.778 192.355 cv
134.696 192.328 134.614 192.292 134.479 192.245 cv
134.371 192.2 li
134.298 192.164 134.215 192.127 133.988 192.028 cv
133.889 191.983 li
133.743 191.91 li
133.634 191.856 li
133.282 191.666 li
133.281 191.666 133.281 191.666 133.28 191.665 cv
133.281 191.666 133.281 191.666 133.282 191.666 cv
133.634 191.856 li
133.743 191.91 li
133.889 191.983 li
132.593 179.973 li
132.604 179.979 li
133.889 191.983 li
133.988 192.028 li
134.215 192.127 134.298 192.164 134.371 192.2 cv
134.479 192.245 li
134.614 192.292 134.696 192.328 134.778 192.355 cv
135.023 192.455 135.123 192.482 135.214 192.518 cv
135.214 192.518 135.214 192.518 135.214 192.518 cv
135.269 192.519 134.91 187.932 134.506 182.97 cv
134.514 182.99 134.522 183.011 134.53 183.031 cv
135.337 192.558 li
135.453 192.593 135.591 192.635 135.717 192.68 cv
145.822 192.331 mo
145.822 192.33 li
145.822 192.33 145.822 192.33 145.822 192.331 cv
145.823 192.326 mo
145.823 192.326 li
145.823 192.326 145.823 192.326 145.823 192.326 cv
145.823 192.322 mo
145.823 192.32 li
145.823 192.321 145.823 192.321 145.823 192.322 cv
145.823 192.317 mo
145.867 191.811 li
145.867 191.811 145.867 191.811 145.867 191.811 cv
145.844 192.078 145.829 192.252 145.823 192.317 cv
147.084 191.782 mo
147.084 191.782 li
147.103 191.772 147.144 191.607 147.199 191.332 cv
147.227 191.319 147.254 191.307 147.281 191.294 cv
147.282 191.294 147.282 191.294 147.283 191.293 cv
147.219 191.709 li
147.179 191.731 147.134 191.755 147.084 191.782 cv
147.084 191.782 li
.490196 .541176 .92549 rgb
f
147.219 191.709 mo
147.283 191.293 li
147.283 191.293 li
147.219 191.709 li
147.219 191.709 li
.945098 .960784 .964706 rgb
f
145.821 192.346 mo
145.822 192.331 li
145.822 192.33 145.822 192.33 145.822 192.33 cv
145.823 192.326 li
145.823 192.326 145.823 192.326 145.823 192.326 cv
145.823 192.322 li
145.823 192.321 145.823 192.321 145.823 192.32 cv
145.823 192.317 li
145.829 192.252 145.844 192.078 145.867 191.811 cv
146.359 191.675 146.796 191.515 147.199 191.332 cv
147.144 191.607 147.103 191.772 147.084 191.782 cv
147.084 191.782 li
147.004 191.826 146.923 191.875 146.707 191.975 cv
146.702 191.977 146.696 191.98 146.691 191.982 cv
146.61 192.019 146.537 192.056 146.421 192.102 cv
146.302 192.156 li
146.067 192.255 li
146.067 192.255 li
146.022 192.274 145.965 192.288 145.821 192.346 cv
145.821 192.346 li
.901961 .929412 .937255 rgb
f
133.279 191.664 mo
133.278 191.664 133.278 191.664 133.277 191.664 cv
133.278 191.664 133.278 191.664 133.279 191.664 cv
147.538 191.527 mo
147.54 191.525 147.542 191.524 147.545 191.522 cv
147.653 191.468 147.75 191.401 147.848 191.336 cv
147.848 191.336 li
147.75 191.401 147.653 191.468 147.545 191.522 cv
147.542 191.524 147.54 191.525 147.538 191.527 cv
.490196 .541176 .92549 rgb
f
147.848 191.336 mo
147.848 191.336 li
147.848 191.336 li
147.848 191.336 li
147.848 191.336 li
147.9 191.302 mo
147.9 191.302 li
147.9 191.302 li
147.9 191.302 li
147.9 191.302 li
.945098 .960784 .964706 rgb
f
131.252 179.196 mo
131.202 179.167 li
130.79 175.62 130.372 172.201 130.151 170.409 cv
130.152 170.409 130.152 170.41 130.153 170.41 cv
131.252 179.196 li
130.037 169.485 mo
130.037 169.485 li
130.01 169.267 129.994 169.14 129.991 169.12 cv
129.991 169.12 li
130.037 169.485 li
.129412 .113725 .384314 rgb
f
132.772 191.341 mo
132.645 191.257 132.484 191.148 132.275 191.006 cv
132.279 191.009 132.283 191.01 132.286 191.01 cv
132.52 191.011 131.869 184.922 131.202 179.167 cv
131.252 179.196 li
132.772 191.341 li
.490196 .541176 .92549 rgb
f
148.222 191.077 mo
148.222 191.077 li
148.262 190.76 li
148.276 190.751 148.291 190.741 148.305 190.732 cv
148.306 190.732 148.307 190.731 148.307 190.731 cv
148.269 191.04 li
148.398 190.941 148.442 190.914 148.486 190.877 cv
148.608 190.775 li
148.74 190.66 li
148.822 190.588 li
148.976 190.442 li
148.822 190.588 li
148.74 190.66 li
148.608 190.775 li
148.486 190.877 li
148.442 190.914 148.399 190.943 148.222 191.077 cv
148.222 191.077 li
148.976 190.442 mo
148.976 190.442 li
149.093 190.332 li
149.194 190.223 li
149.221 190.03 li
149.232 190.021 149.243 190.011 149.254 190.001 cv
149.23 190.18 li
149.254 190.001 li
149.254 190.001 li
149.23 190.18 li
149.321 190.079 li
149.437 189.942 149.503 189.871 149.556 189.798 cv
149.556 189.798 li
149.556 189.798 li
149.503 189.871 149.437 189.942 149.321 190.079 cv
149.194 190.223 li
149.093 190.332 li
148.976 190.442 li
f
149.23 190.18 mo
149.254 190.001 li
149.254 190.001 li
149.23 190.18 li
.945098 .960784 .964706 rgb
f
148.976 190.442 mo
148.976 190.442 li
f
148.269 191.04 mo
148.307 190.731 li
148.661 190.497 148.961 190.259 149.221 190.03 cv
149.194 190.223 li
149.093 190.332 li
148.976 190.442 li
148.822 190.588 li
148.74 190.66 li
148.608 190.775 li
148.486 190.877 li
148.442 190.914 148.398 190.941 148.269 191.04 cv
.901961 .929412 .937255 rgb
f
131.496 190.323 mo
131.496 190.323 li
131.397 190.215 li
131.389 190.208 131.38 190.201 131.345 190.161 cv
131.375 190.194 131.386 190.205 131.397 190.215 cv
131.496 190.323 li
.490196 .541176 .92549 rgb
f
127.518 171.09 mo
127.343 170.025 127.169 168.893 126.996 167.657 cv
126.997 167.663 126.998 167.669 127 167.675 cv
127.172 168.903 127.345 170.029 127.519 171.089 cv
127.518 171.089 127.518 171.09 127.518 171.09 cv
127.599 170.963 mo
127.292 168.997 li
127.297 169.018 127.301 169.04 127.305 169.061 cv
127.603 170.957 li
127.602 170.959 127.6 170.961 127.599 170.963 cv
.447059 .462745 .878431 rgb
f
129.286 178.058 mo
129.271 178.049 li
129.01 176.283 li
129.018 176.311 129.026 176.34 129.035 176.368 cv
129.286 178.058 li
128.653 177.691 mo
128.653 177.691 li
128.41 176.15 li
128.411 176.155 128.412 176.16 128.413 176.165 cv
128.653 177.691 li
128.346 175.697 mo
128.327 175.589 128.307 175.48 128.288 175.372 cv
127.599 170.963 li
127.6 170.961 127.602 170.959 127.603 170.957 cv
128.346 175.697 li
128.144 174.69 mo
127.935 173.541 127.726 172.363 127.518 171.09 cv
127.518 171.09 127.518 171.089 127.519 171.089 cv
127.727 172.361 127.936 173.54 128.144 174.69 cv
.380392 .380392 .717647 rgb
f
129.035 176.368 mo
129.026 176.34 129.018 176.311 129.01 176.283 cv
127.849 168.433 li
127.85 168.434 127.851 168.435 127.852 168.436 cv
129.035 176.368 li
127.305 169.061 mo
127.301 169.04 127.297 169.018 127.292 168.997 cv
126.971 166.937 li
126.972 166.939 126.973 166.942 126.973 166.944 cv
127.305 169.061 li
127 167.675 mo
126.998 167.669 126.997 167.663 126.996 167.657 cv
126.947 167.309 126.898 166.951 126.849 166.585 cv
126.85 166.589 126.851 166.593 126.852 166.597 cv
126.901 166.966 126.951 167.324 127 167.675 cv
126.652 165.059 mo
126.632 164.893 126.611 164.726 126.591 164.557 cv
126.591 164.557 126.593 164.569 126.596 164.588 cv
126.615 164.742 126.634 164.893 126.653 165.044 cv
126.653 165.049 126.652 165.054 126.652 165.059 cv
126.659 164.942 mo
126.636 164.792 li
126.636 164.792 126.636 164.792 126.636 164.792 cv
126.659 164.942 li
126.659 164.942 126.659 164.942 126.659 164.942 cv
.129412 .113725 .384314 rgb
f
131.033 189.768 mo
131.021 189.753 131.009 189.737 130.996 189.721 cv
130.996 189.721 li
129.271 178.049 li
129.286 178.058 li
131.033 189.768 li
130.996 189.721 mo
130.996 189.721 li
130.896 189.572 li
130.869 189.544 130.857 189.505 130.734 189.309 cv
130.716 189.281 130.707 189.261 130.637 189.133 cv
130.57 188.992 li
130.552 188.956 130.536 188.918 130.498 188.828 cv
130.489 188.801 130.481 188.773 130.426 188.656 cv
130.398 188.574 130.38 188.493 130.336 188.348 cv
130.327 188.293 130.308 188.236 130.273 188.04 cv
130.263 187.94 li
130.218 187.654 li
130.214 187.628 130.211 187.602 130.208 187.576 cv
130.248 187.83 li
130.247 187.819 130.245 187.808 130.244 187.797 cv
130.266 187.938 li
130.275 188.037 li
130.311 188.235 130.329 188.289 130.338 188.352 cv
130.383 188.496 130.401 188.577 130.428 188.658 cv
130.476 188.762 130.488 188.795 130.497 188.82 cv
130.498 188.828 li
130.536 188.918 130.552 188.956 130.57 188.992 cv
130.637 189.133 li
130.707 189.261 130.716 189.281 130.734 189.309 cv
130.857 189.505 130.869 189.544 130.896 189.572 cv
130.996 189.721 li
130.218 187.654 mo
128.653 177.691 li
128.653 177.691 li
130.208 187.576 li
130.211 187.602 130.214 187.628 130.218 187.654 cv
.490196 .541176 .92549 rgb
f
130.996 189.721 mo
130.996 189.721 li
130.996 189.721 mo
130.996 189.721 li
.945098 .960784 .964706 rgb
f
131.778 172.416 mo
131.647 171.205 li
131.648 171.205 131.649 171.206 131.65 171.206 cv
131.68 171.506 131.711 171.815 131.749 172.118 cv
131.759 172.218 131.768 172.318 131.778 172.416 cv
131.57 170.383 mo
131.566 170.382 131.561 170.379 131.558 170.378 cv
131.513 169.963 li
131.517 169.965 li
131.532 169.971 li
131.543 170.102 131.556 170.24 131.57 170.383 cv
131.431 169.922 mo
131.341 169.879 li
131.418 169.915 li
131.431 169.922 li
.129412 .113725 .384314 rgb
f
138.332 193.198 mo
138.168 193.18 li
137.987 193.153 li
137.897 193.143 137.796 193.125 137.705 193.116 cv
137.669 193.107 137.645 193.107 137.543 193.089 cv
137.426 193.069 137.307 193.054 137.108 193.008 cv
137.103 193.007 137.099 193.007 137.095 193.006 cv
137.094 193.006 137.094 193.006 137.094 193.006 cv
137.092 193.006 137.091 193.006 137.089 193.005 cv
137.088 193.005 137.086 193.005 137.085 193.005 cv
137.085 193.005 137.084 193.005 137.083 193.005 cv
136.969 192.989 136.856 192.961 136.691 192.922 cv
136.307 186.891 li
136.308 186.893 136.309 186.895 136.31 186.897 cv
136.89 187.958 137.525 188.937 138.205 189.762 cv
138.205 189.762 138.206 189.763 138.206 189.763 cv
138.332 193.198 li
.901961 .929412 .937255 rgb
f
135.214 192.518 mo
135.214 192.518 135.214 192.518 135.214 192.518 cv
135.123 192.482 135.023 192.455 134.778 192.355 cv
134.696 192.328 134.614 192.292 134.479 192.245 cv
134.371 192.2 li
134.298 192.164 134.215 192.127 133.988 192.028 cv
133.889 191.983 li
132.604 179.979 li
132.087 175.159 li
132.393 176.527 133.224 179.715 134.506 182.97 cv
134.91 187.932 135.269 192.519 135.214 192.518 cv
f
132.286 191.01 mo
132.283 191.01 132.279 191.009 132.275 191.006 cv
132.275 191.006 132.275 191.006 132.275 191.006 cv
132.275 191.006 li
132.13 190.895 li
132.004 190.796 li
131.868 190.677 li
131.831 190.65 131.805 190.615 131.713 190.534 cv
130.136 182.626 li
128.699 169.329 li
129.122 169.71 129.607 170.071 130.151 170.409 cv
130.372 172.201 130.79 175.62 131.202 179.167 cv
131.869 184.922 132.52 191.011 132.286 191.01 cv
130.037 169.485 mo
129.461 169.082 128.972 168.65 128.577 168.196 cv
128.555 168 li
128.684 168.119 li
128.767 168.192 li
128.794 168.22 128.835 168.249 129.12 168.482 cv
129.147 168.51 129.156 168.543 129.891 169.054 cv
129.912 169.068 129.933 169.084 129.991 169.12 cv
129.994 169.14 130.01 169.267 130.037 169.485 cv
f
130.996 189.721 mo
130.996 189.721 li
130.896 189.572 li
130.869 189.544 130.857 189.505 130.734 189.309 cv
130.716 189.281 130.707 189.261 130.637 189.133 cv
130.57 188.992 li
130.552 188.956 130.536 188.918 130.498 188.828 cv
130.497 188.82 li
130.498 188.823 130.499 188.826 130.5 188.829 cv
127.179 167.4 li
127.358 167.754 127.582 168.099 127.849 168.433 cv
129.01 176.283 li
129.271 178.049 li
130.996 189.721 li
f
149.23 190.18 mo
149.254 190.001 li
149.255 190 149.256 189.999 149.257 189.998 cv
149.444 189.831 149.611 189.661 149.71 189.579 cv
149.556 189.798 li
149.556 189.798 li
149.503 189.871 149.437 189.942 149.321 190.079 cv
149.23 190.18 li
.909804 .411765 .0117647 rgb
f
147.219 191.709 mo
147.283 191.293 li
147.645 191.129 147.966 190.949 148.262 190.76 cv
148.222 191.077 li
148.222 191.077 li
148.15 191.132 148.082 191.184 147.99 191.238 cv
147.99 191.238 li
147.9 191.302 li
147.9 191.302 li
147.9 191.302 li
147.882 191.313 147.865 191.324 147.848 191.336 cv
147.848 191.336 li
147.75 191.401 147.653 191.468 147.545 191.522 cv
147.542 191.524 147.54 191.525 147.538 191.527 cv
147.46 191.576 147.374 191.625 147.219 191.709 cv
f
144.516 192.771 mo
144.561 192.083 li
145.032 192.02 145.467 191.92 145.866 191.811 cv
145.867 191.811 145.867 191.811 145.867 191.811 cv
145.823 192.317 li
145.823 192.32 li
145.823 192.322 li
145.823 192.326 li
145.823 192.326 li
145.822 192.33 li
145.822 192.331 li
145.821 192.346 li
145.821 192.346 li
145.757 192.372 145.693 192.401 145.542 192.454 cv
145.542 192.454 li
145.414 192.499 145.277 192.544 145.061 192.61 cv
144.961 192.646 144.86 192.671 144.751 192.708 cv
144.625 192.743 li
144.516 192.771 li
f
141.47 193.267 mo
141.47 193.267 li
141.47 193.267 141.47 193.262 141.47 193.253 cv
141.471 193.252 141.471 193.251 141.471 193.251 cv
141.471 193.249 141.471 193.247 141.471 193.244 cv
141.471 193.243 141.471 193.242 141.471 193.241 cv
141.471 193.241 141.471 193.24 141.471 193.24 cv
141.472 193.134 141.478 192.732 141.488 192.108 cv
141.491 192.109 141.494 192.11 141.496 192.11 cv
141.759 192.174 142.031 192.21 142.303 192.219 cv
142.412 192.224 142.521 192.226 142.627 192.226 cv
142.705 192.226 142.782 192.225 142.857 192.222 cv
142.824 192.796 142.798 193.123 142.784 193.126 cv
142.784 193.126 li
142.675 193.142 142.557 193.162 142.448 193.171 cv
142.448 193.171 li
142.312 193.189 li
142.203 193.198 142.095 193.216 141.986 193.226 cv
141.877 193.235 li
141.741 193.244 141.47 193.267 141.47 193.267 cv
f
139.775 193.298 mo
139.574 193.289 li
139.459 193.289 li
139.313 193.28 138.581 193.225 138.458 193.215 cv
138.332 193.198 li
138.206 189.763 li
138.695 190.352 139.212 190.859 139.746 191.258 cv
139.747 191.259 139.748 191.259 139.749 191.26 cv
139.775 193.298 li
f
136.591 192.899 mo
136.591 192.899 136.591 192.899 136.591 192.899 cv
136.482 192.881 136.364 192.854 136.256 192.826 cv
136.129 192.79 li
136.029 192.763 135.757 192.691 135.721 192.681 cv
135.721 192.681 li
135.719 192.681 135.718 192.681 135.717 192.68 cv
135.591 192.635 135.453 192.593 135.337 192.558 cv
134.53 183.031 li
134.534 183.041 134.538 183.051 134.542 183.062 cv
135.05 184.345 135.628 185.637 136.276 186.835 cv
136.48 190.265 136.625 192.899 136.591 192.899 cv
f
133.889 191.983 mo
133.743 191.91 li
133.634 191.856 li
133.282 191.666 li
133.281 191.666 133.281 191.666 133.28 191.665 cv
133.28 191.665 133.279 191.665 133.279 191.664 cv
133.278 191.664 133.278 191.664 133.277 191.664 cv
133.205 191.624 133.123 191.576 132.772 191.341 cv
131.252 179.196 li
130.153 170.41 li
130.309 170.507 130.469 170.601 130.635 170.694 cv
130.96 170.876 131.298 171.046 131.647 171.205 cv
131.778 172.416 li
131.873 173.437 131.949 174.318 131.949 174.466 cv
131.949 174.502 131.983 174.709 132.061 175.039 cv
132.593 179.973 li
133.889 191.983 li
131.558 170.378 mo
131.36 170.28 131.166 170.179 130.977 170.073 cv
130.642 169.885 130.328 169.689 130.037 169.485 cv
129.991 169.12 li
130.007 169.13 130.024 169.14 130.045 169.153 cv
130.081 169.171 130.12 169.195 130.28 169.298 cv
130.37 169.353 li
130.47 169.416 130.579 169.481 130.688 169.535 cv
130.842 169.626 130.996 169.707 131.16 169.788 cv
131.341 169.879 li
131.431 169.922 li
131.513 169.963 li
131.558 170.378 li
f
131.713 190.534 mo
131.686 190.507 131.66 190.487 131.496 190.323 cv
131.496 190.323 li
131.397 190.215 li
131.386 190.205 131.375 190.194 131.345 190.161 cv
131.301 190.109 131.214 190.003 131.033 189.768 cv
129.286 178.058 li
129.035 176.368 li
127.852 168.436 li
128.098 168.743 128.381 169.041 128.699 169.329 cv
130.136 182.626 li
131.713 190.534 li
128.577 168.196 mo
128.365 167.953 128.179 167.703 128.022 167.449 cv
128.051 167.484 li
128.17 167.607 li
128.187 167.625 li
128.17 167.607 li
128.185 167.622 li
128.212 167.659 128.241 167.683 128.451 167.902 cv
128.555 168 li
128.577 168.196 li
f
133.239 170.664 mo
133.034 170.594 li
133.239 170.664 li
cp
.996902 .996902 .996902 rgb
f
135.816 171.349 mo
135.529 171.289 li
135.625 171.309 135.72 171.33 135.816 171.349 cv
cp
.997176 .997176 .997176 rgb
f
136.873 171.527 mo
136.683 171.5 li
136.873 171.527 li
cp
.997333 .997333 .997333 rgb
f
136.406 171.455 mo
136.023 171.386 li
136.153 171.41 136.275 171.433 136.406 171.455 cv
cp
f
137.023 171.548 mo
136.873 171.527 li
137.023 171.548 li
cp
.997451 .997451 .997451 rgb
f
137.701 171.63 mo
137.316 171.585 li
137.446 171.601 137.569 171.616 137.701 171.63 cv
cp
f
142.805 171.617 mo
142.492 171.648 li
142.641 171.633 142.789 171.618 142.938 171.601 cv
142.805 171.617 li
cp
.998235 .998235 .998235 rgb
f
143.466 171.53 mo
143.254 171.561 li
143.119 171.576 li
143.236 171.561 143.35 171.547 143.466 171.53 cv
cp
f
143.581 171.513 mo
143.466 171.53 li
143.581 171.513 li
cp
.998353 .998353 .998353 rgb
f
144.231 171.409 mo
144.098 171.433 143.701 171.495 143.701 171.495 cv
143.882 171.467 144.052 171.441 144.231 171.409 cv
cp
f
153.828 164.707 mo
153.809 164.805 153.787 164.901 153.762 164.999 cv
153.787 164.902 153.809 164.804 153.828 164.707 cv
cp
.996745 .996745 .996745 rgb
f
153.422 165.92 mo
153.5 165.751 li
153.422 165.92 li
cp
f
153.566 165.591 mo
153.63 165.421 li
153.566 165.591 li
cp
f
153.718 165.158 mo
153.684 165.259 li
153.747 165.055 li
153.718 165.158 li
cp
f
153.839 164.648 mo
153.856 164.557 153.87 164.465 153.881 164.373 cv
153.874 164.446 153.857 164.547 153.839 164.648 cv
cp
f
142.336 171.664 mo
142.187 171.675 li
142.336 171.664 li
cp
.997176 .997176 .997176 rgb
f
142.674 171.629 mo
142.805 171.617 li
142.674 171.629 li
cp
f
137.931 171.655 mo
138.126 171.673 li
137.931 171.655 li
cp
.997451 .997451 .997451 rgb
f
136.472 171.466 mo
136.33 171.44 li
136.428 171.458 136.45 171.462 136.472 171.466 cv
cp
.997608 .997608 .997608 rgb
f
137.073 171.556 mo
136.873 171.527 li
137.023 171.548 li
137.073 171.556 li
cp
f
137.541 171.612 mo
137.418 171.6 li
137.701 171.63 li
137.541 171.612 li
cp
f
133.034 170.594 mo
132.912 170.55 li
133.034 170.594 li
cp
.997764 .997764 .997764 rgb
f
133.309 170.687 mo
133.201 170.651 li
133.309 170.687 li
cp
f
130.585 169.57 mo
135.92 172.649 144.569 172.649 149.903 169.57 cv
155.238 166.49 155.238 161.496 149.903 158.416 cv
144.569 155.336 135.92 155.336 130.585 158.416 cv
125.251 161.496 125.251 166.49 130.585 169.57 cv
cp
.984314 .811765 .309804 rgb
f
130.763 158.724 mo
128.297 160.147 126.939 162.018 126.939 163.993 cv
126.939 165.967 128.297 167.839 130.763 169.262 cv
135.991 172.281 144.498 172.281 149.726 169.262 cv
152.191 167.839 153.549 165.967 153.549 163.993 cv
153.549 162.018 152.191 160.147 149.726 158.724 cv
147.111 157.214 143.678 156.46 140.244 156.46 cv
136.811 156.46 133.377 157.214 130.763 158.724 cv
cp
130.408 169.877 mo
127.713 168.321 126.229 166.232 126.229 163.993 cv
126.229 161.754 127.713 159.665 130.408 158.109 cv
135.832 154.977 144.657 154.977 150.081 158.109 cv
152.776 159.665 154.259 161.754 154.259 163.993 cv
154.259 166.232 152.776 168.321 150.081 169.877 cv
147.369 171.443 143.807 172.226 140.244 172.226 cv
136.682 172.226 133.12 171.443 130.408 169.877 cv
cp
.999882 .999882 .999882 rgb
f
145.396 154.63 mo
145.511 154.841 145.575 155.041 145.546 155.176 cv
145.432 155.706 144.68 155.751 144.562 156.3 cv
144.467 156.738 145.004 157.377 144.897 157.675 cv
144.772 158.024 144.507 158.238 144.808 158.612 cv
145.356 159.293 146.518 158.462 147.402 158.736 cv
147.557 158.785 147.877 158.917 148.216 159.089 cv
148.1 159.179 147.967 159.25 147.814 159.291 cv
147.504 159.374 146.865 159.055 146.67 159.145 cv
146.023 159.447 145.218 160.153 144.336 159.332 cv
143.929 158.953 144.458 158.62 144.314 158.351 cv
144.103 157.958 142.788 158.335 143.08 156.973 cv
143.218 156.33 143.946 156.099 144.427 155.948 cv
144.427 155.948 144.57 154.857 145.396 154.63 cv
cp
.964706 .686275 .00784302 rgb
f
145.613 154.591 mo
145.849 154.573 146.131 154.619 146.468 154.758 cv
146.725 154.865 147.093 155.013 147.208 155.281 cv
147.262 155.405 147.132 155.677 147.276 155.677 cv
147.888 155.677 148.348 155.088 148.98 155.824 cv
149.365 156.272 148.777 156.515 148.599 156.847 cv
148.556 157.079 li
148.618 157.206 148.779 157.746 148.779 157.849 cv
148.779 158.282 148.598 158.794 148.216 159.089 cv
147.877 158.917 147.557 158.785 147.402 158.736 cv
146.518 158.462 145.356 159.293 144.808 158.612 cv
144.507 158.238 144.772 158.024 144.897 157.675 cv
145.004 157.377 144.467 156.738 144.562 156.3 cv
144.68 155.751 145.432 155.706 145.546 155.176 cv
145.575 155.041 145.511 154.841 145.396 154.63 cv
145.613 154.591 li
cp
.972549 .74902 .098039 rgb
f
147.636 157.05 mo
147.463 156.809 147.508 157.868 147.2 157.82 cv
146.941 157.78 146.869 157.622 146.686 157.508 cv
145.925 157.925 144.864 157.524 145.031 156.592 cv
145.107 156.17 145.769 156.363 145.769 156.363 cv
145.831 156.247 145.897 155.225 146.507 155.509 cv
146.898 155.691 146.746 155.953 146.865 156.175 cv
146.876 156.195 147.59 156.186 147.715 156.279 cv
147.926 156.437 147.891 157.403 147.636 157.05 cv
cp
1 .87451 .560784 rgb
f
139.422 158.718 mo
139.756 158.835 140.027 158.988 140.137 159.16 cv
140.573 159.839 139.868 160.614 140.32 161.318 cv
140.68 161.879 141.879 162.046 142.081 162.469 cv
142.319 162.965 142.275 163.45 142.964 163.561 cv
144.218 163.762 144.517 161.748 145.686 161.189 cv
145.89 161.091 146.348 160.924 146.865 160.782 cv
146.842 160.989 146.784 161.195 146.673 161.387 cv
146.449 161.774 145.479 162.049 145.378 162.335 cv
145.044 163.284 144.972 164.82 143.24 164.79 cv
142.439 164.776 142.623 163.907 142.2 163.758 cv
141.581 163.54 140.658 165.215 139.537 163.47 cv
139.008 162.647 139.494 161.695 139.82 161.07 cv
139.82 161.07 138.832 159.761 139.422 158.718 cv
cp
.964706 .686275 .00784302 rgb
f
139.599 158.468 mo
139.815 158.221 140.145 157.997 140.626 157.821 cv
140.994 157.687 141.515 157.491 141.908 157.667 cv
142.09 157.749 142.242 158.166 142.386 158.027 cv
142.998 157.435 142.848 156.36 144.242 156.539 cv
145.092 156.648 144.756 157.476 144.923 158.005 cv
145.119 158.295 li
145.314 158.372 146.035 158.796 146.142 158.907 cv
146.591 159.371 146.941 160.096 146.865 160.782 cv
146.348 160.924 145.89 161.091 145.686 161.189 cv
144.517 161.748 144.218 163.762 142.964 163.561 cv
142.275 163.45 142.319 162.965 142.081 162.469 cv
141.879 162.046 140.68 161.879 140.32 161.318 cv
139.868 160.614 140.573 159.839 140.137 159.16 cv
140.027 158.988 139.756 158.835 139.422 158.718 cv
139.599 158.468 li
cp
.972549 .74902 .098039 rgb
f
144.171 159.153 mo
143.747 159.062 144.891 160.155 144.534 160.401 cv
144.233 160.608 143.997 160.507 143.696 160.562 cv
143.607 160.649 li
143.368 161.746 141.892 162.339 141.092 161.177 cv
140.73 160.652 141.592 160.218 141.592 160.218 cv
141.534 160.035 140.54 158.873 141.444 158.589 cv
142.023 158.407 142.143 158.836 142.493 158.959 cv
142.524 158.97 143.228 158.271 143.45 158.25 cv
143.825 158.215 144.791 159.286 144.171 159.153 cv
cp
1 .87451 .560784 rgb
f
136.466 157.324 mo
136.707 157.4 136.903 157.5 136.983 157.613 cv
137.297 158.055 136.788 158.561 137.114 159.021 cv
137.374 159.387 138.24 159.496 138.385 159.772 cv
138.557 160.095 138.525 160.413 139.022 160.485 cv
139.927 160.616 140.144 159.302 140.987 158.937 cv
141.134 158.873 141.464 158.764 141.838 158.671 cv
141.821 158.806 141.779 158.941 141.699 159.066 cv
141.538 159.318 140.838 159.498 140.765 159.684 cv
140.524 160.304 140.472 161.306 139.221 161.287 cv
138.644 161.278 138.776 160.711 138.471 160.613 cv
138.025 160.471 137.358 161.565 136.549 160.426 cv
136.168 159.888 136.519 159.267 136.754 158.859 cv
136.754 158.859 136.041 158.004 136.466 157.324 cv
cp
.964706 .686275 .00784302 rgb
f
136.594 157.161 mo
136.75 156.999 136.988 156.853 137.335 156.739 cv
137.601 156.651 137.977 156.523 138.26 156.638 cv
138.392 156.692 138.501 156.964 138.605 156.873 cv
139.047 156.487 138.939 155.785 139.945 155.902 cv
140.558 155.973 140.316 156.514 140.436 156.859 cv
140.578 157.048 li
140.719 157.098 141.239 157.375 141.316 157.447 cv
141.64 157.75 141.893 158.223 141.838 158.671 cv
141.464 158.764 141.134 158.873 140.987 158.937 cv
140.144 159.302 139.927 160.616 139.022 160.485 cv
138.525 160.413 138.557 160.095 138.385 159.772 cv
138.24 159.496 137.374 159.387 137.114 159.021 cv
136.788 158.561 137.297 158.055 136.983 157.613 cv
136.903 157.5 136.707 157.4 136.466 157.324 cv
136.594 157.161 li
cp
.972549 .74902 .098039 rgb
f
139.894 157.608 mo
139.588 157.548 140.413 158.262 140.156 158.422 cv
139.938 158.558 139.768 158.492 139.551 158.528 cv
139.314 159.3 138.249 159.687 137.671 158.929 cv
137.41 158.586 138.032 158.303 138.032 158.303 cv
137.991 158.183 137.273 157.426 137.925 157.24 cv
138.344 157.121 138.43 157.401 138.682 157.481 cv
138.705 157.488 139.213 157.032 139.373 157.018 cv
139.644 156.996 140.341 157.695 139.894 157.608 cv
cp
1 .87451 .560784 rgb
f
149.265 163.582 mo
149.502 163.663 149.694 163.768 149.773 163.888 cv
150.082 164.357 149.582 164.892 149.902 165.379 cv
150.158 165.766 151.008 165.882 151.151 166.174 cv
151.319 166.516 151.288 166.852 151.777 166.929 cv
152.666 167.068 152.878 165.676 153.707 165.29 cv
153.852 165.222 154.176 165.107 154.543 165.008 cv
154.527 165.152 154.486 165.294 154.407 165.427 cv
154.248 165.694 153.56 165.884 153.489 166.081 cv
153.252 166.737 153.201 167.798 151.973 167.778 cv
151.405 167.768 151.535 167.168 151.235 167.065 cv
150.797 166.914 150.142 168.072 149.347 166.866 cv
148.972 166.297 149.317 165.639 149.548 165.207 cv
149.548 165.207 148.847 164.303 149.265 163.582 cv
cp
.964706 .686275 .00784302 rgb
f
149.391 163.409 mo
149.544 163.238 149.778 163.084 150.119 162.962 cv
150.38 162.869 150.749 162.734 151.028 162.856 cv
151.157 162.912 151.265 163.201 151.367 163.105 cv
151.801 162.696 151.695 161.952 152.683 162.076 cv
153.286 162.152 153.048 162.724 153.166 163.09 cv
153.305 163.29 li
153.443 163.343 153.954 163.636 154.03 163.713 cv
154.348 164.034 154.597 164.534 154.543 165.008 cv
154.176 165.107 153.852 165.222 153.707 165.29 cv
152.878 165.676 152.666 167.068 151.777 166.929 cv
151.288 166.852 151.319 166.516 151.151 166.174 cv
151.008 165.882 150.158 165.766 149.902 165.379 cv
149.582 164.892 150.082 164.357 149.773 163.888 cv
149.694 163.768 149.502 163.663 149.265 163.582 cv
149.391 163.409 li
cp
.972549 .74902 .098039 rgb
f
152.633 163.882 mo
152.332 163.82 153.143 164.575 152.891 164.745 cv
152.677 164.888 152.51 164.818 152.296 164.857 cv
152.063 165.674 151.017 166.084 150.449 165.281 cv
150.193 164.918 150.804 164.619 150.804 164.619 cv
150.763 164.492 150.058 163.689 150.699 163.493 cv
151.11 163.367 151.195 163.664 151.443 163.749 cv
151.465 163.756 151.964 163.273 152.122 163.259 cv
152.388 163.234 153.072 163.974 152.633 163.882 cv
cp
1 .87451 .560784 rgb
f
148.214 157.373 mo
148.498 157.452 148.729 157.555 148.823 157.671 cv
149.193 158.129 148.594 158.653 148.978 159.127 cv
149.284 159.506 150.303 159.619 150.475 159.904 cv
150.677 160.239 150.64 160.567 151.225 160.641 cv
152.292 160.777 152.546 159.418 153.539 159.041 cv
153.713 158.974 154.102 158.862 154.542 158.766 cv
154.522 158.906 154.473 159.045 154.378 159.174 cv
154.188 159.435 153.363 159.621 153.278 159.814 cv
152.994 160.454 152.933 161.491 151.46 161.471 cv
150.779 161.461 150.935 160.875 150.576 160.774 cv
150.05 160.627 149.265 161.758 148.312 160.58 cv
147.863 160.024 148.276 159.382 148.553 158.96 cv
148.553 158.96 147.713 158.076 148.214 157.373 cv
cp
.964706 .686275 .00784302 rgb
f
148.365 157.204 mo
148.549 157.037 148.829 156.886 149.238 156.767 cv
149.55 156.677 149.994 156.545 150.328 156.664 cv
150.483 156.719 150.612 157 150.734 156.907 cv
151.255 156.507 151.127 155.781 152.312 155.902 cv
153.034 155.976 152.749 156.535 152.891 156.892 cv
153.058 157.088 li
153.223 157.14 153.836 157.426 153.927 157.5 cv
154.308 157.814 154.606 158.303 154.542 158.766 cv
154.102 158.862 153.713 158.974 153.539 159.041 cv
152.546 159.418 152.292 160.777 151.225 160.641 cv
150.64 160.567 150.677 160.239 150.475 159.904 cv
150.303 159.619 149.284 159.506 148.978 159.127 cv
148.594 158.653 149.193 158.129 148.823 157.671 cv
148.729 157.555 148.498 157.452 148.214 157.373 cv
148.365 157.204 li
cp
.972549 .74902 .098039 rgb
f
152.251 157.666 mo
151.891 157.605 152.864 158.343 152.56 158.509 cv
152.304 158.649 152.104 158.581 151.848 158.618 cv
151.569 159.416 150.314 159.816 149.634 159.032 cv
149.326 158.678 150.059 158.386 150.059 158.386 cv
150.01 158.261 149.165 157.478 149.933 157.286 cv
150.426 157.163 150.528 157.452 150.825 157.535 cv
150.852 157.543 151.45 157.071 151.639 157.057 cv
151.958 157.033 152.778 157.756 152.251 157.666 cv
cp
1 .87451 .560784 rgb
f
144.727 159.884 mo
145.005 160.07 145.211 160.257 145.26 160.4 cv
145.449 160.965 144.525 161.198 144.722 161.784 cv
144.879 162.251 145.96 162.765 146.012 163.093 cv
146.074 163.478 145.873 163.761 146.489 164.065 cv
147.612 164.619 148.56 163.488 149.852 163.547 cv
150.078 163.557 150.567 163.612 151.104 163.703 cv
151.014 163.822 150.891 163.927 150.722 164.007 cv
150.383 164.167 149.372 164.003 149.183 164.143 cv
148.553 164.609 147.979 165.525 146.346 164.912 cv
145.591 164.629 146.052 164.16 145.7 163.923 cv
145.185 163.578 143.758 164.287 143.27 162.833 cv
143.04 162.147 143.814 161.731 144.33 161.461 cv
144.33 161.461 143.824 160.32 144.727 159.884 cv
cp
.964706 .686275 .00784302 rgb
f
144.977 159.791 mo
145.264 159.714 145.65 159.69 146.164 159.748 cv
146.557 159.792 147.116 159.851 147.43 160.094 cv
147.576 160.206 147.583 160.514 147.765 160.478 cv
148.541 160.326 148.752 159.616 150.015 160.204 cv
150.785 160.562 150.194 160.955 150.177 161.336 cv
150.268 161.581 li
150.427 161.694 150.971 162.201 151.036 162.306 cv
151.309 162.744 151.402 163.308 151.104 163.703 cv
150.567 163.612 150.078 163.557 149.852 163.547 cv
148.56 163.488 147.612 164.619 146.489 164.065 cv
145.873 163.761 146.074 163.478 146.012 163.093 cv
145.96 162.765 144.879 162.251 144.722 161.784 cv
144.525 161.198 145.449 160.965 145.26 160.4 cv
145.211 160.257 145.005 160.07 144.727 159.884 cv
144.801 159.848 144.883 159.817 144.977 159.791 cv
cp
.972549 .74902 .098039 rgb
f
149.086 161.78 mo
148.715 161.579 149.439 162.641 149.02 162.669 cv
148.666 162.693 148.475 162.55 148.172 162.48 cv
148.059 162.503 li
147.471 163.093 145.876 162.949 145.5 161.963 cv
145.33 161.517 146.29 161.547 146.29 161.547 cv
146.296 161.415 145.736 160.363 146.686 160.499 cv
147.296 160.586 147.268 160.89 147.559 161.085 cv
147.585 161.103 148.483 160.917 148.701 160.98 cv
149.068 161.087 149.63 162.074 149.086 161.78 cv
cp
1 .87451 .560784 rgb
f
135.584 155.692 mo
135.478 155.889 135.419 156.075 135.445 156.2 cv
135.551 156.693 136.251 156.735 136.361 157.246 cv
136.448 157.653 135.949 158.248 136.048 158.524 cv
136.165 158.849 136.412 159.048 136.132 159.396 cv
135.622 160.029 134.541 159.257 133.719 159.512 cv
133.575 159.557 133.277 159.68 132.962 159.84 cv
133.07 159.923 133.193 159.99 133.336 160.028 cv
133.623 160.104 134.218 159.808 134.4 159.892 cv
135.002 160.172 135.75 160.83 136.57 160.066 cv
136.949 159.713 136.457 159.404 136.591 159.154 cv
136.787 158.788 138.011 159.139 137.739 157.871 cv
137.61 157.273 136.933 157.058 136.486 156.919 cv
136.486 156.919 136.353 155.904 135.584 155.692 cv
cp
.964706 .686275 .00784302 rgb
f
135.383 155.657 mo
135.163 155.64 134.901 155.682 134.588 155.812 cv
134.348 155.911 134.006 156.049 133.899 156.298 cv
133.85 156.413 133.97 156.666 133.836 156.666 cv
133.266 156.666 132.839 156.119 132.251 156.803 cv
131.893 157.22 132.44 157.446 132.606 157.755 cv
132.646 157.97 li
132.588 158.089 132.438 158.591 132.438 158.687 cv
132.438 159.089 132.606 159.566 132.962 159.84 cv
133.277 159.68 133.575 159.557 133.719 159.512 cv
134.541 159.257 135.622 160.029 136.132 159.396 cv
136.412 159.048 136.165 158.849 136.048 158.524 cv
135.949 158.248 136.448 157.653 136.361 157.246 cv
136.251 156.735 135.551 156.693 135.445 156.2 cv
135.419 156.075 135.478 155.889 135.584 155.692 cv
135.383 155.657 li
cp
.972549 .74902 .098039 rgb
f
133.501 157.943 mo
133.662 157.719 133.62 158.704 133.906 158.66 cv
134.148 158.623 134.215 158.475 134.385 158.369 cv
135.093 158.758 136.079 158.384 135.924 157.517 cv
135.854 157.125 135.238 157.304 135.238 157.304 cv
135.18 157.197 135.118 156.246 134.551 156.51 cv
134.188 156.679 134.329 156.923 134.218 157.13 cv
134.208 157.148 133.544 157.14 133.428 157.227 cv
133.231 157.373 133.264 158.271 133.501 157.943 cv
cp
1 .87451 .560784 rgb
f
141.141 159.495 mo
140.831 159.604 140.579 159.746 140.476 159.906 cv
140.07 160.537 140.726 161.258 140.306 161.913 cv
139.971 162.435 138.856 162.59 138.668 162.983 cv
138.447 163.444 138.488 163.896 137.847 163.999 cv
136.68 164.186 136.402 162.313 135.315 161.793 cv
135.125 161.702 134.7 161.547 134.218 161.414 cv
134.24 161.607 134.294 161.798 134.397 161.977 cv
134.605 162.337 135.508 162.593 135.601 162.859 cv
135.912 163.741 135.979 165.17 137.59 165.142 cv
138.335 165.129 138.164 164.321 138.558 164.182 cv
139.133 163.979 139.992 165.538 141.034 163.915 cv
141.526 163.149 141.074 162.263 140.771 161.682 cv
140.771 161.682 141.69 160.465 141.141 159.495 cv
cp
.972549 .74902 .098039 rgb
f
140.977 159.262 mo
140.775 159.032 140.469 158.824 140.021 158.66 cv
139.679 158.536 139.195 158.353 138.829 158.517 cv
138.66 158.593 138.518 158.981 138.384 158.852 cv
137.815 158.302 137.955 157.301 136.658 157.468 cv
135.867 157.569 136.18 158.34 136.025 158.832 cv
135.842 159.102 li
135.661 159.173 134.991 159.567 134.891 159.671 cv
134.474 160.102 134.148 160.776 134.218 161.414 cv
134.7 161.547 135.125 161.702 135.315 161.793 cv
136.402 162.313 136.68 164.186 137.847 163.999 cv
138.488 163.896 138.447 163.444 138.668 162.983 cv
138.856 162.59 139.971 162.435 140.306 161.913 cv
140.726 161.258 140.07 160.537 140.476 159.906 cv
140.579 159.746 140.831 159.604 141.141 159.495 cv
140.977 159.262 li
cp
f
136.724 159.899 mo
137.118 159.814 136.054 160.831 136.386 161.06 cv
136.666 161.253 136.886 161.159 137.166 161.21 cv
137.249 161.29 li
137.471 162.311 138.844 162.863 139.588 161.782 cv
139.925 161.293 139.123 160.89 139.123 160.89 cv
139.177 160.719 140.101 159.639 139.26 159.375 cv
138.722 159.206 138.61 159.604 138.285 159.719 cv
138.256 159.729 137.601 159.079 137.395 159.059 cv
137.046 159.027 136.148 160.023 136.724 159.899 cv
cp
1 .87451 .560784 rgb
f
143.89 158.198 mo
143.666 158.269 143.484 158.362 143.41 158.467 cv
143.117 158.879 143.591 159.349 143.288 159.776 cv
143.045 160.117 142.241 160.218 142.105 160.475 cv
141.946 160.776 141.975 161.071 141.513 161.138 cv
140.671 161.26 140.47 160.038 139.686 159.698 cv
139.548 159.639 139.242 159.538 138.894 159.451 cv
138.91 159.577 138.949 159.702 139.023 159.818 cv
139.173 160.053 139.824 160.22 139.892 160.394 cv
140.117 160.97 140.164 161.902 141.328 161.884 cv
141.865 161.876 141.742 161.348 142.026 161.257 cv
142.441 161.125 143.061 162.142 143.813 161.083 cv
144.168 160.583 143.841 160.005 143.623 159.626 cv
143.623 159.626 144.286 158.831 143.89 158.198 cv
cp
.964706 .686275 .00784302 rgb
f
143.772 158.046 mo
143.626 157.896 143.405 157.76 143.082 157.654 cv
142.835 157.572 142.485 157.453 142.222 157.56 cv
142.099 157.61 141.997 157.863 141.901 157.779 cv
141.49 157.419 141.591 156.767 140.655 156.875 cv
140.084 156.942 140.309 157.445 140.198 157.766 cv
140.066 157.942 li
139.935 157.988 139.451 158.245 139.38 158.313 cv
139.078 158.595 138.843 159.035 138.894 159.451 cv
139.242 159.538 139.548 159.639 139.686 159.698 cv
140.47 160.038 140.671 161.26 141.513 161.138 cv
141.975 161.071 141.946 160.776 142.105 160.475 cv
142.241 160.218 143.045 160.117 143.288 159.776 cv
143.591 159.349 143.117 158.879 143.41 158.467 cv
143.484 158.362 143.666 158.269 143.89 158.198 cv
143.772 158.046 li
cp
.972549 .74902 .098039 rgb
f
140.703 158.462 mo
140.987 158.407 140.219 159.071 140.459 159.22 cv
140.661 159.346 140.819 159.284 141.021 159.318 cv
141.242 160.036 142.232 160.396 142.769 159.691 cv
143.012 159.372 142.434 159.109 142.434 159.109 cv
142.472 158.997 143.14 158.293 142.533 158.12 cv
142.144 158.01 142.064 158.27 141.829 158.344 cv
141.808 158.351 141.335 157.927 141.186 157.914 cv
140.935 157.893 140.287 158.543 140.703 158.462 cv
cp
1 .87451 .560784 rgb
f
131.986 164.019 mo
131.766 164.094 131.587 164.192 131.514 164.303 cv
131.226 164.739 131.692 165.237 131.393 165.69 cv
131.156 166.05 130.365 166.158 130.232 166.429 cv
130.075 166.748 130.104 167.06 129.65 167.131 cv
128.823 167.261 128.625 165.967 127.855 165.607 cv
127.72 165.544 127.418 165.437 127.077 165.345 cv
127.092 165.479 127.131 165.611 127.204 165.734 cv
127.352 165.983 127.991 166.16 128.057 166.343 cv
128.278 166.953 128.325 167.94 129.468 167.921 cv
129.996 167.912 129.875 167.354 130.154 167.258 cv
130.562 167.118 131.171 168.195 131.91 167.073 cv
132.259 166.544 131.938 165.932 131.723 165.53 cv
131.723 165.53 132.375 164.689 131.986 164.019 cv
cp
.964706 .686275 .00784302 rgb
f
131.869 163.858 mo
131.726 163.699 131.509 163.555 131.192 163.442 cv
130.949 163.356 130.605 163.23 130.346 163.343 cv
130.226 163.396 130.126 163.664 130.031 163.575 cv
129.627 163.194 129.726 162.503 128.807 162.618 cv
128.246 162.688 128.468 163.221 128.358 163.561 cv
128.228 163.747 li
128.1 163.797 127.625 164.069 127.554 164.14 cv
127.258 164.439 127.027 164.904 127.077 165.345 cv
127.418 165.437 127.72 165.544 127.855 165.607 cv
128.625 165.967 128.823 167.261 129.65 167.131 cv
130.104 167.06 130.075 166.748 130.232 166.429 cv
130.365 166.158 131.156 166.05 131.393 165.69 cv
131.692 165.237 131.226 164.739 131.514 164.303 cv
131.587 164.192 131.766 164.094 131.986 164.019 cv
131.869 163.858 li
cp
.972549 .74902 .098039 rgb
f
128.854 164.298 mo
129.133 164.24 128.379 164.942 128.614 165.1 cv
128.813 165.234 128.968 165.169 129.167 165.204 cv
129.384 165.965 130.357 166.346 130.884 165.599 cv
131.123 165.262 130.555 164.983 130.555 164.983 cv
130.593 164.865 131.248 164.119 130.652 163.936 cv
130.27 163.819 130.191 164.095 129.961 164.174 cv
129.94 164.181 129.475 163.731 129.329 163.718 cv
129.082 163.695 128.445 164.384 128.854 164.298 cv
cp
1 .87451 .560784 rgb
f
132.963 158.244 mo
132.699 158.317 132.485 158.413 132.397 158.521 cv
132.053 158.947 132.611 159.434 132.253 159.876 cv
131.968 160.228 131.021 160.333 130.861 160.598 cv
130.673 160.909 130.708 161.214 130.163 161.284 cv
129.171 161.41 128.935 160.146 128.011 159.795 cv
127.849 159.733 127.487 159.629 127.078 159.539 cv
127.097 159.669 127.143 159.798 127.231 159.919 cv
127.407 160.162 128.174 160.335 128.254 160.514 cv
128.518 161.109 128.575 162.074 129.945 162.055 cv
130.578 162.046 130.433 161.501 130.767 161.407 cv
131.256 161.27 131.986 162.322 132.872 161.226 cv
133.291 160.71 132.906 160.112 132.648 159.72 cv
132.648 159.72 133.43 158.898 132.963 158.244 cv
cp
.964706 .686275 .00784302 rgb
f
132.823 158.087 mo
132.652 157.931 132.392 157.791 132.011 157.681 cv
131.721 157.596 131.308 157.473 130.998 157.584 cv
130.854 157.635 130.733 157.897 130.62 157.81 cv
130.135 157.438 130.255 156.763 129.152 156.876 cv
128.48 156.944 128.746 157.464 128.614 157.796 cv
128.458 157.978 li
128.305 158.027 127.735 158.293 127.65 158.362 cv
127.295 158.654 127.018 159.109 127.078 159.539 cv
127.487 159.629 127.849 159.733 128.011 159.795 cv
128.935 160.146 129.171 161.41 130.163 161.284 cv
130.708 161.214 130.673 160.909 130.861 160.598 cv
131.021 160.333 131.968 160.228 132.253 159.876 cv
132.611 159.434 132.053 158.947 132.397 158.521 cv
132.485 158.413 132.699 158.317 132.963 158.244 cv
132.823 158.087 li
cp
.972549 .74902 .098039 rgb
f
129.208 158.517 mo
129.543 158.459 128.639 159.146 128.921 159.3 cv
129.159 159.43 129.346 159.367 129.584 159.401 cv
129.843 160.144 131.01 160.517 131.643 159.787 cv
131.929 159.458 131.248 159.186 131.248 159.186 cv
131.293 159.07 132.079 158.341 131.365 158.163 cv
130.906 158.049 130.812 158.318 130.535 158.395 cv
130.511 158.402 129.954 157.963 129.778 157.95 cv
129.482 157.928 128.718 158.6 129.208 158.517 cv
cp
1 .87451 .560784 rgb
f
130.045 161.631 mo
129.908 161.67 129.796 161.719 129.751 161.775 cv
129.572 161.997 129.862 162.249 129.676 162.479 cv
129.528 162.661 129.036 162.716 128.953 162.853 cv
128.856 163.015 128.874 163.173 128.591 163.21 cv
128.076 163.275 127.953 162.619 127.474 162.437 cv
127.39 162.405 127.202 162.35 126.99 162.304 cv
127.069 162.501 li
127.161 162.627 127.559 162.717 127.6 162.81 cv
127.737 163.119 127.767 163.62 128.478 163.61 cv
128.806 163.605 128.731 163.322 128.905 163.274 cv
129.159 163.203 129.538 163.749 129.998 163.18 cv
130.215 162.912 130.015 162.601 129.881 162.398 cv
129.881 162.398 130.287 161.971 130.045 161.631 cv
cp
.964706 .686275 .00784302 rgb
f
129.972 161.55 mo
129.883 161.469 129.748 161.396 129.551 161.339 cv
129.4 161.295 129.186 161.232 129.024 161.289 cv
128.828 161.406 li
128.577 161.214 128.639 160.863 128.066 160.921 cv
127.718 160.957 127.855 161.227 127.787 161.399 cv
127.706 161.494 li
127.287 161.693 li
127.103 161.844 126.959 162.08 126.99 162.304 cv
127.202 162.35 127.39 162.405 127.474 162.437 cv
127.953 162.619 128.076 163.275 128.591 163.21 cv
128.874 163.173 128.856 163.015 128.953 162.853 cv
129.036 162.716 129.528 162.661 129.676 162.479 cv
129.862 162.249 129.572 161.997 129.751 161.775 cv
129.796 161.719 129.908 161.67 130.045 161.631 cv
129.972 161.55 li
cp
.972549 .74902 .098039 rgb
f
128.096 161.773 mo
128.269 161.743 127.8 162.1 127.946 162.18 cv
128.07 162.247 128.167 162.214 128.29 162.232 cv
128.425 162.618 129.031 162.811 129.359 162.433 cv
129.508 162.262 129.154 162.12 129.154 162.12 cv
129.178 162.06 129.586 161.682 129.215 161.59 cv
128.977 161.53 128.928 161.67 128.784 161.71 cv
128.784 161.71 128.482 161.486 128.391 161.479 cv
128.237 161.468 127.841 161.817 128.096 161.773 cv
cp
1 .87451 .560784 rgb
f
136.207 160.579 mo
135.949 160.752 135.756 160.926 135.711 161.059 cv
135.535 161.585 136.395 161.801 136.212 162.346 cv
136.066 162.781 135.06 163.259 135.011 163.564 cv
134.954 163.922 135.141 164.185 134.568 164.468 cv
133.523 164.983 132.642 163.932 131.44 163.986 cv
131.23 163.996 130.776 164.047 130.276 164.131 cv
130.36 164.242 130.474 164.34 130.631 164.414 cv
130.947 164.563 131.886 164.41 132.063 164.541 cv
132.648 164.974 133.182 165.826 134.701 165.256 cv
135.403 164.993 134.975 164.556 135.302 164.336 cv
135.781 164.015 137.108 164.674 137.562 163.322 cv
137.776 162.684 137.056 162.297 136.577 162.046 cv
136.577 162.046 137.047 160.985 136.207 160.579 cv
cp
.964706 .686275 .00784302 rgb
f
135.974 160.493 mo
135.708 160.421 135.349 160.399 134.87 160.453 cv
134.505 160.494 133.985 160.548 133.693 160.774 cv
133.557 160.879 133.551 161.165 133.381 161.132 cv
132.66 160.99 132.463 160.33 131.288 160.877 cv
130.572 161.21 131.122 161.575 131.138 161.929 cv
131.053 162.157 li
130.905 162.263 130.399 162.735 130.339 162.832 cv
130.086 163.24 129.998 163.764 130.276 164.131 cv
130.776 164.047 131.23 163.996 131.44 163.986 cv
132.642 163.932 133.523 164.983 134.568 164.468 cv
135.141 164.185 134.954 163.922 135.011 163.564 cv
135.06 163.259 136.066 162.781 136.212 162.346 cv
136.395 161.801 135.535 161.585 135.711 161.059 cv
135.756 160.926 135.949 160.752 136.207 160.579 cv
135.974 160.493 li
cp
.972549 .74902 .098039 rgb
f
132.152 162.343 mo
132.498 162.156 131.824 163.144 132.214 163.17 cv
132.544 163.192 132.721 163.059 133.003 162.994 cv
133.108 163.015 li
133.655 163.563 135.139 163.43 135.488 162.513 cv
135.646 162.098 134.753 162.126 134.753 162.126 cv
134.748 162.003 135.268 161.025 134.384 161.151 cv
133.818 161.233 133.843 161.515 133.573 161.697 cv
133.548 161.713 132.713 161.54 132.511 161.599 cv
132.17 161.698 131.646 162.616 132.152 162.343 cv
cp
1 .87451 .560784 rgb
f
137.694 172.432 mo
137.88 172.307 138.02 172.171 138.055 172.048 cv
138.192 171.563 137.594 171.198 137.736 170.695 cv
137.849 170.294 138.569 170.003 138.611 169.712 cv
138.66 169.37 138.535 169.079 138.946 168.903 cv
139.693 168.582 140.285 169.771 141.131 169.931 cv
141.28 169.959 141.6 169.989 141.954 169.995 cv
141.898 169.871 141.82 169.755 141.712 169.654 cv
141.493 169.452 140.829 169.435 140.708 169.276 cv
140.308 168.746 139.954 167.815 138.872 168.105 cv
138.372 168.239 138.662 168.744 138.426 168.902 cv
138.082 169.133 137.165 168.25 136.812 169.497 cv
136.645 170.086 137.142 170.593 137.472 170.926 cv
137.472 170.926 137.114 171.885 137.694 172.432 cv
cp
.964706 .686275 .00784302 rgb
f
137.856 172.557 mo
138.042 172.675 138.293 172.761 138.631 172.793 cv
138.889 172.818 139.255 172.856 139.467 172.686 cv
139.565 172.607 139.576 172.327 139.695 172.39 cv
140.198 172.657 140.32 173.341 141.159 173.012 cv
141.671 172.811 141.294 172.355 141.292 172.005 cv
141.358 171.796 li
141.464 171.718 141.832 171.345 141.877 171.26 cv
142.065 170.904 142.14 170.404 141.954 169.995 cv
141.6 169.989 141.28 169.959 141.131 169.931 cv
140.285 169.771 139.693 168.582 138.946 168.903 cv
138.535 169.079 138.66 169.37 138.611 169.712 cv
138.569 170.003 137.849 170.294 137.736 170.695 cv
137.594 171.198 138.192 171.563 138.055 172.048 cv
138.02 172.171 137.88 172.307 137.694 172.432 cv
137.856 172.557 li
cp
.972549 .74902 .098039 rgb
f
140.59 171.419 mo
140.342 171.541 140.84 170.69 140.567 170.595 cv
140.336 170.515 140.208 170.614 140.008 170.628 cv
139.564 169.953 138.518 169.821 138.249 170.66 cv
138.127 171.039 138.756 171.17 138.756 171.17 cv
138.756 171.292 138.365 172.16 138.99 172.193 cv
139.391 172.214 139.38 171.932 139.574 171.801 cv
139.592 171.789 140.175 172.108 140.318 172.086 cv
140.561 172.049 140.952 171.24 140.59 171.419 cv
cp
1 .87451 .560784 rgb
f
134.602 166.752 mo
134.673 167.049 134.846 167.377 135.165 167.731 cv
135.408 168.001 135.751 168.39 136.151 168.416 cv
136.336 168.428 136.643 168.151 136.701 168.328 cv
136.946 169.082 136.354 169.9 137.577 170.36 cv
138.323 170.64 138.409 169.813 138.776 169.451 cv
138.826 169.402 138.967 169.341 139.064 169.299 cv
139.257 169.32 140.034 169.286 140.17 169.241 cv
140.741 169.055 141.345 168.613 141.581 168.016 cv
141.218 167.673 140.915 167.337 140.79 167.167 cv
140.073 166.199 140.705 164.414 139.586 164.033 cv
138.972 163.823 138.796 164.241 138.385 164.546 cv
138.035 164.805 136.977 164.42 136.436 164.724 cv
135.759 165.105 136 166.05 135.346 166.418 cv
135.18 166.511 134.891 166.518 134.566 166.469 cv
134.568 166.56 134.579 166.654 134.602 166.752 cv
cp
.972549 .74902 .098039 rgb
f
138.658 168.181 mo
138.27 168.071 139.686 167.671 139.5 167.313 cv
139.343 167.012 139.105 166.992 138.882 166.816 cv
138.846 166.706 li
139.128 165.7 138.173 164.57 137.009 165.176 cv
136.483 165.45 137.003 166.181 137.003 166.181 cv
136.875 166.307 135.552 166.828 136.172 167.456 cv
136.568 167.858 136.854 167.558 137.194 167.609 cv
137.225 167.613 137.499 168.495 137.672 168.609 cv
137.965 168.801 139.225 168.342 138.658 168.181 cv
cp
1 .87451 .560784 rgb
f
131.53 166.327 mo
131.761 166.369 131.965 166.372 132.08 166.315 cv
132.531 166.088 132.333 165.45 132.802 165.215 cv
133.175 165.027 133.933 165.315 134.173 165.151 cv
134.455 164.96 134.567 164.686 135.007 164.843 cv
135.808 165.13 135.413 166.304 135.947 166.971 cv
136.041 167.088 136.264 167.321 136.531 167.56 cv
136.576 167.442 136.6 167.313 136.589 167.175 cv
136.566 166.897 136.069 166.445 136.091 166.26 cv
136.162 165.646 136.556 164.8 135.52 164.271 cv
135.042 164.026 134.903 164.55 134.61 164.497 cv
134.181 164.42 134.11 163.231 132.949 163.814 cv
132.401 164.09 132.42 164.753 132.435 165.191 cv
132.435 165.191 131.477 165.582 131.53 166.327 cv
cp
.964706 .686275 .00784302 rgb
f
131.564 166.517 mo
131.622 166.717 131.753 166.941 131.989 167.187 cv
132.169 167.374 132.422 167.643 132.705 167.672 cv
132.837 167.685 133.045 167.51 133.091 167.629 cv
133.286 168.14 132.891 168.669 133.769 169.011 cv
134.304 169.22 134.34 168.67 134.589 168.439 cv
134.789 168.345 li
134.926 168.365 135.474 168.364 135.569 168.339 cv
135.967 168.231 136.381 167.952 136.531 167.56 cv
136.264 167.321 136.041 167.088 135.947 166.971 cv
135.413 166.304 135.808 165.13 135.007 164.843 cv
134.567 164.686 134.455 164.96 134.173 165.151 cv
133.933 165.315 133.175 165.027 132.802 165.215 cv
132.333 165.45 132.531 166.088 132.08 166.315 cv
131.965 166.372 131.761 166.369 131.53 166.327 cv
131.564 166.517 li
cp
.972549 .74902 .098039 rgb
f
134.47 167.587 mo
134.193 167.503 135.182 167.276 135.04 167.032 cv
134.921 166.826 134.752 166.806 134.589 166.682 cv
134.731 165.944 134.024 165.162 133.219 165.533 cv
132.856 165.701 133.243 166.204 133.243 166.204 cv
133.157 166.285 132.237 166.595 132.692 167.032 cv
132.984 167.312 133.177 167.119 133.419 167.163 cv
133.441 167.167 133.66 167.764 133.786 167.844 cv
133.998 167.981 134.875 167.711 134.47 167.587 cv
cp
1 .87451 .560784 rgb
f
144.774 166.76 mo
145.004 166.797 145.208 166.794 145.324 166.731 cv
145.782 166.48 145.605 165.822 146.08 165.562 cv
146.459 165.354 147.208 165.63 147.453 165.452 cv
147.74 165.244 147.861 164.955 148.296 165.105 cv
149.087 165.378 148.655 166.614 149.168 167.292 cv
149.257 167.411 149.474 167.647 149.732 167.888 cv
149.781 167.763 149.809 167.628 149.802 167.485 cv
149.789 167.196 149.306 166.74 149.333 166.547 cv
149.424 165.905 149.845 165.01 148.826 164.492 cv
148.356 164.253 148.201 164.803 147.91 164.757 cv
147.484 164.69 147.45 163.453 146.272 164.098 cv
145.716 164.402 145.712 165.093 145.714 165.548 cv
145.714 165.548 144.744 165.986 144.774 166.76 cv
cp
.964706 .686275 .00784302 rgb
f
144.802 166.957 mo
144.853 167.165 144.978 167.393 145.205 167.642 cv
145.379 167.832 145.624 168.104 145.906 168.125 cv
146.037 168.135 146.251 167.945 146.293 168.068 cv
146.471 168.594 146.06 169.158 146.926 169.487 cv
147.454 169.688 147.508 169.114 147.765 168.865 cv
147.967 168.761 li
148.103 168.777 148.651 168.759 148.746 168.729 cv
149.148 168.604 149.57 168.301 149.732 167.888 cv
149.474 167.647 149.257 167.411 149.168 167.292 cv
148.655 166.614 149.087 165.378 148.296 165.105 cv
147.861 164.955 147.74 165.244 147.453 165.452 cv
147.208 165.63 146.459 165.354 146.08 165.562 cv
145.605 165.822 145.782 166.48 145.324 166.731 cv
145.208 166.794 145.004 166.797 144.774 166.76 cv
144.802 166.957 li
cp
.972549 .74902 .098039 rgb
f
147.672 167.981 mo
147.398 167.902 148.393 167.634 148.259 167.384 cv
148.146 167.173 147.979 167.158 147.82 167.034 cv
147.984 166.26 147.303 165.467 146.487 165.88 cv
146.118 166.067 146.49 166.579 146.49 166.579 cv
146.401 166.665 145.472 167.018 145.913 167.458 cv
146.196 167.741 146.395 167.534 146.636 167.572 cv
146.657 167.576 146.857 168.19 146.98 168.271 cv
147.188 168.406 148.073 168.097 147.672 167.981 cv
cp
1 .87451 .560784 rgb
f
144.222 155.731 mo
143.998 155.668 143.799 155.644 143.688 155.685 cv
143.249 155.844 143.443 156.444 142.988 156.61 cv
142.625 156.742 141.888 156.402 141.655 156.526 cv
141.381 156.67 141.272 156.908 140.844 156.719 cv
140.065 156.376 140.447 155.35 139.927 154.688 cv
139.836 154.573 139.618 154.338 139.359 154.093 cv
139.315 154.196 139.292 154.31 139.303 154.437 cv
139.326 154.692 139.81 155.154 139.789 155.32 cv
139.721 155.871 139.339 156.599 140.346 157.187 cv
140.812 157.458 140.946 156.996 141.231 157.075 cv
141.648 157.19 141.719 158.278 142.847 157.867 cv
143.379 157.674 143.36 157.069 143.345 156.67 cv
143.345 156.67 144.276 156.413 144.222 155.731 cv
cp
.964706 .686275 .00784302 rgb
f
144.189 155.555 mo
144.132 155.366 144.004 155.149 143.775 154.902 cv
143.6 154.713 143.353 154.442 143.078 154.386 cv
142.95 154.361 142.747 154.499 142.703 154.385 cv
142.512 153.901 142.895 153.461 142.042 153.059 cv
141.521 152.814 141.487 153.31 141.245 153.495 cv
141.051 153.559 li
140.918 153.527 140.386 153.471 140.293 153.485 cv
139.906 153.542 139.504 153.752 139.359 154.093 cv
139.618 154.338 139.836 154.573 139.927 154.688 cv
140.447 155.35 140.065 156.376 140.844 156.719 cv
141.272 156.908 141.381 156.67 141.655 156.526 cv
141.888 156.402 142.625 156.742 142.988 156.61 cv
143.443 156.444 143.249 155.844 143.688 155.685 cv
143.799 155.644 143.998 155.668 144.222 155.731 cv
144.189 155.555 li
cp
.972549 .74902 .098039 rgb
f
141.363 154.281 mo
141.632 154.387 140.671 154.491 140.809 154.727 cv
140.926 154.927 141.09 154.962 141.248 155.092 cv
141.111 155.748 141.8 156.532 142.581 156.277 cv
142.935 156.162 142.557 155.665 142.557 155.665 cv
142.641 155.6 143.534 155.414 143.091 154.97 cv
142.807 154.685 142.62 154.84 142.384 154.775 cv
142.363 154.769 142.149 154.205 142.027 154.118 cv
141.82 153.972 140.968 154.127 141.363 154.281 cv
cp
1 .87451 .560784 rgb
f
138.889 154.96 mo
138.696 155.032 138.541 155.118 138.482 155.204 cv
138.251 155.546 138.701 155.875 138.461 156.229 cv
138.27 156.512 137.566 156.651 137.463 156.86 cv
137.342 157.106 137.388 157.333 136.984 157.419 cv
136.248 157.578 135.99 156.645 135.274 156.441 cv
135.149 156.405 134.871 156.35 134.558 156.309 cv
134.581 156.406 134.623 156.5 134.697 156.584 cv
134.845 156.755 135.431 156.836 135.503 156.965 cv
135.739 157.395 135.844 158.114 136.87 158.012 cv
137.344 157.965 137.2 157.565 137.445 157.474 cv
137.803 157.339 138.418 158.081 139.012 157.203 cv
139.292 156.788 138.966 156.365 138.747 156.087 cv
138.747 156.087 139.281 155.421 138.889 154.96 cv
cp
.964706 .686275 .00784302 rgb
f
138.774 154.851 mo
138.635 154.746 138.431 154.657 138.139 154.599 cv
137.915 154.554 137.598 154.488 137.372 154.591 cv
137.268 154.639 137.194 154.843 137.103 154.785 cv
136.716 154.538 136.762 154.024 135.943 154.179 cv
135.443 154.273 135.676 154.646 135.598 154.904 cv
135.493 155.05 li
135.381 155.096 134.971 155.332 134.912 155.39 cv
134.664 155.631 134.486 155.99 134.558 156.309 cv
134.871 156.35 135.149 156.405 135.274 156.441 cv
135.99 156.645 136.248 157.578 136.984 157.419 cv
137.388 157.333 137.342 157.106 137.463 156.86 cv
137.566 156.651 138.27 156.512 138.461 156.229 cv
138.701 155.875 138.251 155.546 138.482 155.204 cv
138.541 155.118 138.696 155.032 138.889 154.96 cv
138.774 154.851 li
cp
.972549 .74902 .098039 rgb
f
136.09 155.406 mo
136.338 155.341 135.704 155.914 135.925 156.012 cv
136.112 156.094 136.248 156.035 136.429 156.045 cv
136.671 156.586 137.57 156.79 137.998 156.202 cv
138.191 155.937 137.663 155.776 137.663 155.776 cv
137.689 155.687 138.232 155.09 137.685 155.002 cv
137.334 154.946 137.28 155.153 137.078 155.229 cv
137.078 155.229 136.614 154.943 136.481 154.944 cv
136.258 154.947 135.728 155.5 136.09 155.406 cv
cp
1 .87451 .560784 rgb
f
139.433 167.822 mo
139.743 167.79 139.994 167.727 140.096 167.63 cv
140.498 167.248 139.84 166.654 140.257 166.259 cv
140.589 165.943 141.702 165.992 141.888 165.745 cv
142.106 165.456 142.064 165.135 142.703 165.154 cv
143.867 165.189 144.153 166.53 145.24 167.045 cv
145.431 167.135 145.856 167.303 146.337 167.463 cv
146.315 167.325 146.26 167.185 146.156 167.046 cv
145.947 166.767 145.045 166.461 144.95 166.264 cv
144.636 165.606 144.564 164.603 142.955 164.395 cv
142.211 164.299 142.385 164.886 141.993 164.927 cv
141.419 164.987 140.555 163.782 139.521 164.764 cv
139.033 165.227 139.488 165.907 139.794 166.353 cv
139.794 166.353 138.881 167.071 139.433 167.822 cv
cp
.964706 .686275 .00784302 rgb
f
139.599 168.007 mo
139.801 168.196 140.107 168.383 140.555 168.56 cv
140.897 168.695 141.382 168.89 141.746 168.828 cv
141.915 168.799 142.054 168.549 142.189 168.657 cv
142.76 169.121 142.624 169.797 143.918 169.863 cv
144.707 169.904 144.392 169.324 144.545 169.004 cv
144.726 168.842 li
144.906 168.818 145.574 168.638 145.673 168.581 cv
146.088 168.339 146.411 167.916 146.337 167.463 cv
145.856 167.303 145.431 167.135 145.24 167.045 cv
144.153 166.53 143.867 165.189 142.703 165.154 cv
142.064 165.135 142.106 165.456 141.888 165.745 cv
141.702 165.992 140.589 165.943 140.257 166.259 cv
139.84 166.654 140.498 167.248 140.096 167.63 cv
139.994 167.727 139.743 167.79 139.433 167.822 cv
139.599 168.007 li
cp
.972549 .74902 .098039 rgb
f
143.842 168.163 mo
143.449 168.167 144.507 167.609 144.174 167.404 cv
143.894 167.23 143.675 167.264 143.395 167.19 cv
143.312 167.122 li
143.086 166.381 141.713 165.804 140.974 166.451 cv
140.64 166.743 141.443 167.136 141.443 167.136 cv
141.39 167.247 140.471 167.868 141.312 168.17 cv
141.85 168.364 141.96 168.103 142.284 168.069 cv
142.313 168.066 142.97 168.61 143.176 168.653 cv
143.525 168.725 144.417 168.159 143.842 168.163 cv
cp
1 .87451 .560784 rgb
f
134.068 170.845 mo
134.254 170.721 134.393 170.584 134.428 170.461 cv
134.566 169.976 133.967 169.611 134.109 169.108 cv
134.223 168.707 134.942 168.416 134.984 168.125 cv
135.034 167.783 134.909 167.492 135.319 167.316 cv
136.066 166.995 136.659 168.184 137.505 168.344 cv
137.653 168.372 137.974 168.402 138.327 168.409 cv
138.271 168.285 138.193 168.168 138.085 168.067 cv
137.867 167.865 137.202 167.849 137.082 167.689 cv
136.681 167.159 136.327 166.228 135.245 166.519 cv
134.745 166.653 135.035 167.157 134.799 167.315 cv
134.455 167.546 133.538 166.663 133.185 167.91 cv
133.018 168.499 133.516 169.006 133.845 169.339 cv
133.845 169.339 133.488 170.298 134.068 170.845 cv
cp
.964706 .686275 .00784302 rgb
f
134.224 170.97 mo
134.41 171.088 134.667 171.174 135.004 171.206 cv
135.262 171.231 135.629 171.269 135.84 171.099 cv
135.938 171.021 135.95 170.741 136.068 170.803 cv
136.572 171.07 136.693 171.754 137.533 171.425 cv
138.044 171.224 137.667 170.769 137.666 170.418 cv
137.731 170.209 li
137.837 170.131 138.205 169.758 138.25 169.673 cv
138.438 169.317 138.513 168.818 138.327 168.409 cv
137.974 168.402 137.653 168.372 137.505 168.344 cv
136.659 168.184 136.066 166.995 135.319 167.316 cv
134.909 167.492 135.034 167.783 134.984 168.125 cv
134.942 168.416 134.223 168.707 134.109 169.108 cv
133.967 169.611 134.566 169.976 134.428 170.461 cv
134.393 170.584 134.254 170.721 134.068 170.845 cv
134.224 170.97 li
cp
.972549 .74902 .098039 rgb
f
136.963 169.832 mo
136.715 169.954 137.214 169.103 136.94 169.009 cv
136.709 168.929 136.582 169.028 136.381 169.042 cv
135.938 168.367 134.891 168.234 134.622 169.073 cv
134.501 169.453 135.129 169.583 135.129 169.583 cv
135.13 169.705 134.739 170.574 135.363 170.606 cv
135.764 170.627 135.753 170.345 135.948 170.214 cv
135.965 170.203 136.548 170.521 136.691 170.499 cv
136.934 170.462 137.325 169.653 136.963 169.832 cv
cp
1 .87451 .560784 rgb
f
135.246 167.149 mo
135.571 167.198 135.861 167.191 136.027 167.098 cv
136.681 166.73 136.439 165.785 137.116 165.404 cv
137.657 165.1 138.715 165.485 139.065 165.226 cv
139.476 164.922 139.652 164.503 140.266 164.712 cv
141.385 165.094 140.753 166.879 141.47 167.847 cv
141.595 168.017 141.898 168.353 142.262 168.696 cv
142.333 168.515 142.375 168.321 142.367 168.115 cv
142.352 167.699 141.674 167.05 141.716 166.772 cv
141.855 165.847 142.465 164.553 141.028 163.823 cv
140.365 163.485 140.137 164.279 139.724 164.218 cv
139.121 164.127 139.092 162.348 137.411 163.294 cv
136.617 163.74 136.602 164.734 136.598 165.39 cv
136.598 165.39 135.215 166.035 135.246 167.149 cv
cp
.964706 .686275 .00784302 rgb
f
135.282 167.432 mo
135.353 167.729 135.526 168.057 135.845 168.411 cv
136.088 168.681 136.431 169.069 136.831 169.096 cv
137.016 169.108 137.323 168.831 137.38 169.008 cv
137.626 169.761 137.034 170.58 138.257 171.04 cv
139.003 171.32 139.088 170.493 139.456 170.131 cv
139.506 170.082 139.647 170.021 139.744 169.979 cv
139.937 170 140.714 169.966 140.85 169.922 cv
141.421 169.736 142.025 169.293 142.262 168.696 cv
141.898 168.353 141.595 168.017 141.47 167.847 cv
140.753 166.879 141.385 165.094 140.266 164.712 cv
139.652 164.503 139.476 164.922 139.065 165.226 cv
138.715 165.485 137.657 165.1 137.116 165.404 cv
136.439 165.785 136.681 166.73 136.027 167.098 cv
135.861 167.191 135.571 167.198 135.246 167.149 cv
135.248 167.24 135.259 167.334 135.282 167.432 cv
cp
.972549 .74902 .098039 rgb
f
139.338 168.861 mo
138.95 168.751 140.366 168.351 140.18 167.994 cv
140.023 167.692 139.785 167.672 139.562 167.496 cv
139.526 167.386 li
139.808 166.38 138.853 165.25 137.69 165.856 cv
137.163 166.13 137.683 166.861 137.683 166.861 cv
137.555 166.987 136.233 167.509 136.851 168.136 cv
137.248 168.538 137.534 168.238 137.874 168.289 cv
137.905 168.294 138.179 169.175 138.352 169.289 cv
138.645 169.481 139.905 169.022 139.338 168.861 cv
cp
1 .87451 .560784 rgb
f
132.21 167.007 mo
132.441 167.049 132.645 167.052 132.76 166.995 cv
133.211 166.768 133.013 166.13 133.482 165.895 cv
133.855 165.707 134.613 165.995 134.853 165.832 cv
135.135 165.64 135.247 165.366 135.687 165.523 cv
136.488 165.81 136.093 166.984 136.627 167.651 cv
136.721 167.768 136.945 168.001 137.211 168.24 cv
137.256 168.122 137.28 167.993 137.269 167.855 cv
137.246 167.577 136.749 167.125 136.771 166.94 cv
136.842 166.326 137.236 165.48 136.2 164.951 cv
135.722 164.707 135.583 165.23 135.29 165.177 cv
134.861 165.1 134.79 163.911 133.629 164.494 cv
133.081 164.77 133.099 165.433 133.115 165.871 cv
133.115 165.871 132.156 166.262 132.21 167.007 cv
cp
.964706 .686275 .00784302 rgb
f
132.244 167.197 mo
132.302 167.397 132.433 167.621 132.669 167.866 cv
132.849 168.054 133.102 168.323 133.385 168.352 cv
133.517 168.366 133.725 168.19 133.771 168.309 cv
133.966 168.819 133.571 169.349 134.449 169.691 cv
134.984 169.9 135.02 169.35 135.269 169.119 cv
135.469 169.025 li
135.606 169.045 136.154 169.044 136.249 169.018 cv
136.647 168.911 137.061 168.632 137.211 168.24 cv
136.945 168.001 136.721 167.768 136.627 167.651 cv
136.093 166.984 136.488 165.81 135.687 165.523 cv
135.247 165.366 135.135 165.64 134.853 165.832 cv
134.613 165.995 133.855 165.707 133.482 165.895 cv
133.013 166.13 133.211 166.768 132.76 166.995 cv
132.645 167.052 132.441 167.049 132.21 167.007 cv
132.244 167.197 li
cp
.972549 .74902 .098039 rgb
f
135.15 168.267 mo
134.873 168.183 135.862 167.956 135.72 167.712 cv
135.6 167.506 135.432 167.486 135.269 167.362 cv
135.411 166.624 134.704 165.841 133.899 166.213 cv
133.535 166.381 133.923 166.884 133.923 166.884 cv
133.837 166.965 132.917 167.275 133.372 167.712 cv
133.664 167.992 133.857 167.799 134.099 167.843 cv
134.121 167.847 134.34 168.444 134.466 168.525 cv
134.678 168.661 135.555 168.391 135.15 168.267 cv
cp
1 .87451 .560784 rgb
f
145.454 167.44 mo
145.684 167.477 145.888 167.474 146.004 167.411 cv
146.462 167.16 146.285 166.502 146.76 166.242 cv
147.139 166.034 147.888 166.31 148.133 166.132 cv
148.42 165.924 148.541 165.635 148.976 165.785 cv
149.767 166.058 149.335 167.294 149.848 167.972 cv
149.937 168.091 150.154 168.327 150.412 168.568 cv
150.461 168.443 150.489 168.308 150.482 168.165 cv
150.468 167.876 149.986 167.42 150.013 167.227 cv
150.104 166.585 150.525 165.69 149.507 165.172 cv
149.036 164.932 148.881 165.483 148.59 165.437 cv
148.164 165.37 148.13 164.133 146.952 164.778 cv
146.395 165.082 146.393 165.773 146.394 166.228 cv
146.394 166.228 145.424 166.666 145.454 167.44 cv
cp
.964706 .686275 .00784302 rgb
f
145.482 167.637 mo
145.533 167.845 145.658 168.073 145.886 168.322 cv
146.059 168.512 146.304 168.784 146.586 168.805 cv
146.717 168.815 146.931 168.625 146.973 168.749 cv
147.152 169.274 146.74 169.838 147.606 170.167 cv
148.135 170.368 148.188 169.793 148.444 169.544 cv
148.646 169.441 li
148.783 169.457 149.33 169.439 149.426 169.409 cv
149.828 169.284 150.25 168.981 150.412 168.568 cv
150.154 168.327 149.937 168.091 149.848 167.972 cv
149.335 167.294 149.767 166.058 148.976 165.785 cv
148.541 165.635 148.42 165.924 148.133 166.132 cv
147.888 166.31 147.139 166.034 146.76 166.242 cv
146.285 166.502 146.462 167.16 146.004 167.411 cv
145.888 167.474 145.684 167.477 145.454 167.44 cv
145.482 167.637 li
cp
.972549 .74902 .098039 rgb
f
148.352 168.661 mo
148.078 168.582 149.073 168.314 148.939 168.064 cv
148.826 167.853 148.658 167.838 148.5 167.714 cv
148.664 166.94 147.983 166.147 147.167 166.56 cv
146.798 166.747 147.17 167.259 147.17 167.259 cv
147.081 167.345 146.152 167.698 146.593 168.138 cv
146.876 168.421 147.075 168.214 147.316 168.252 cv
147.337 168.256 147.537 168.87 147.66 168.951 cv
147.868 169.087 148.753 168.777 148.352 168.661 cv
cp
1 .87451 .560784 rgb
f
141.655 163.889 mo
141.884 163.939 142.084 163.953 142.194 163.906 cv
142.625 163.722 142.399 163.131 142.845 162.94 cv
143.202 162.788 143.96 163.089 144.187 162.952 cv
144.453 162.792 144.549 162.548 144.989 162.714 cv
145.789 163.016 145.461 164.065 146.018 164.701 cv
146.116 164.812 146.347 165.036 146.62 165.267 cv
146.659 165.162 146.676 165.046 146.658 164.919 cv
146.621 164.665 146.111 164.227 146.123 164.06 cv
146.162 163.504 146.505 162.753 145.463 162.218 cv
144.981 161.971 144.872 162.442 144.582 162.378 cv
144.158 162.286 144.027 161.199 142.919 161.672 cv
142.396 161.894 142.447 162.5 142.485 162.899 cv
142.485 162.899 141.565 163.208 141.655 163.889 cv
cp
.964706 .686275 .00784302 rgb
f
141.698 164.063 mo
141.765 164.249 141.906 164.46 142.149 164.696 cv
142.335 164.876 142.597 165.134 142.876 165.175 cv
143.005 165.193 143.201 165.044 143.252 165.155 cv
143.469 165.63 143.109 166.092 143.987 166.449 cv
144.522 166.666 144.53 166.167 144.762 165.969 cv
144.952 165.894 li
145.088 165.919 145.625 165.946 145.717 165.928 cv
146.102 165.849 146.493 165.617 146.62 165.267 cv
146.347 165.036 146.116 164.812 146.018 164.701 cv
145.461 164.065 145.789 163.016 144.989 162.714 cv
144.549 162.548 144.453 162.792 144.187 162.952 cv
143.96 163.089 143.202 162.788 142.845 162.94 cv
142.399 163.131 142.625 163.722 142.194 163.906 cv
142.084 163.953 141.884 163.939 141.655 163.889 cv
141.698 164.063 li
cp
.972549 .74902 .098039 rgb
f
144.601 165.187 mo
144.326 165.096 145.284 164.94 145.132 164.71 cv
145.004 164.516 144.838 164.489 144.672 164.368 cv
144.774 163.703 144.041 162.954 143.271 163.251 cv
142.923 163.386 143.329 163.864 143.329 163.864 cv
143.248 163.933 142.362 164.169 142.831 164.59 cv
143.131 164.86 143.31 164.695 143.55 164.747 cv
143.572 164.752 143.817 165.307 143.944 165.386 cv
144.159 165.522 145.005 165.32 144.601 165.187 cv
cp
1 .87451 .560784 rgb
f
140.113 168.502 mo
140.423 168.47 140.674 168.407 140.776 168.31 cv
141.178 167.928 140.52 167.335 140.937 166.939 cv
141.269 166.623 142.382 166.672 142.568 166.425 cv
142.786 166.135 142.744 165.815 143.383 165.834 cv
144.547 165.868 144.833 167.21 145.92 167.725 cv
146.111 167.815 146.536 167.983 147.017 168.143 cv
146.995 168.005 146.94 167.865 146.836 167.726 cv
146.627 167.446 145.725 167.141 145.63 166.944 cv
145.316 166.286 145.243 165.283 143.634 165.076 cv
142.891 164.98 143.065 165.566 142.673 165.607 cv
142.099 165.667 141.235 164.462 140.201 165.444 cv
139.713 165.907 140.168 166.587 140.474 167.033 cv
140.474 167.033 139.561 167.751 140.113 168.502 cv
cp
.964706 .686275 .00784302 rgb
f
140.278 168.687 mo
140.481 168.875 140.787 169.063 141.235 169.24 cv
141.577 169.375 142.062 169.57 142.426 169.508 cv
142.595 169.479 142.735 169.229 142.869 169.337 cv
143.44 169.801 143.304 170.476 144.598 170.543 cv
145.387 170.584 145.072 170.004 145.224 169.684 cv
145.406 169.522 li
145.586 169.498 146.254 169.318 146.353 169.26 cv
146.768 169.019 147.091 168.596 147.017 168.143 cv
146.536 167.983 146.111 167.815 145.92 167.725 cv
144.833 167.21 144.547 165.868 143.383 165.834 cv
142.744 165.815 142.786 166.135 142.568 166.425 cv
142.382 166.672 141.269 166.623 140.937 166.939 cv
140.52 167.335 141.178 167.928 140.776 168.31 cv
140.674 168.407 140.423 168.47 140.113 168.502 cv
140.278 168.687 li
cp
.972549 .74902 .098039 rgb
f
144.522 168.844 mo
144.129 168.847 145.187 168.289 144.854 168.084 cv
144.574 167.91 144.355 167.944 144.075 167.87 cv
143.992 167.802 li
143.766 167.061 142.393 166.484 141.654 167.131 cv
141.32 167.423 142.122 167.816 142.122 167.816 cv
142.069 167.928 141.151 168.548 141.992 168.85 cv
142.531 169.044 142.64 168.783 142.964 168.749 cv
142.993 168.746 143.65 169.29 143.856 169.333 cv
144.205 169.405 145.097 168.839 144.522 168.844 cv
cp
1 .87451 .560784 rgb
f
126.126 125.827 mo
126.126 125.827 125.51 136.909 115.66 147.991 cv
110.369 153.942 99.4991 167.999 99.4991 167.999 cv
99.4991 167.999 112.582 177.234 114.121 178.465 cv
115.66 179.697 120.931 176.657 122.317 175.272 cv
123.702 173.886 127.819 174.502 129.358 174.81 cv
130.897 175.118 135.014 173.54 137.323 174.464 cv
138.308 174.858 137.208 176.772 131.436 177.696 cv
128.673 178.138 127.28 179.312 127.28 179.312 cv
127.28 179.312 133.706 182.274 137.092 182.89 cv
140.478 183.506 143.672 181.851 145.519 182.775 cv
147.366 183.698 147.366 184.622 144.903 184.93 cv
142.441 185.237 139.516 186.469 139.516 186.469 cv
139.516 186.469 132.744 185.083 133.052 185.545 cv
133.36 186.007 137.977 187.584 137.977 187.584 cv
137.977 187.584 141.825 186.507 143.518 186.969 cv
145.211 187.431 146.596 187.892 144.442 188.662 cv
142.287 189.431 140.132 190.971 140.132 190.971 cv
140.132 190.971 144.442 190.047 144.595 191.432 cv
144.749 192.817 140.132 193.125 140.132 193.125 cv
140.132 193.125 141.979 193.125 142.287 193.741 cv
142.594 194.357 142.441 195.28 140.901 195.588 cv
139.362 195.896 134.283 195.434 134.283 195.434 cv
125.664 192.664 li
115.275 185.545 li
115.275 185.545 97.0365 181.39 93.6503 177.234 cv
90.2643 173.078 87.186 171.539 87.186 169.231 cv
87.186 166.922 113.351 115.515 117.507 117.208 cv
121.662 118.901 125.51 120.594 126.126 125.827 cv
cp
1 .862745 .682353 rgb
f
123.202 115.977 mo
123.202 115.977 119.2 114.438 116.122 116.593 cv
113.043 118.747 102.27 137.525 101.038 140.449 cv
99.8069 143.373 99.345 147.067 103.347 150.915 cv
107.349 154.763 117.661 149.376 117.661 149.376 cv
117.661 149.376 128.896 131.06 128.896 125.365 cv
128.896 119.671 123.202 115.977 123.202 115.977 cv
cp
.243137 .227451 .521569 rgb
f
160.219 98.9877 mo
160.017 99.1094 159.862 99.2424 159.815 99.3614 cv
159.627 99.831 160.198 100.177 160.004 100.663 cv
159.849 101.051 159.091 101.339 159.02 101.621 cv
158.936 101.951 159.034 102.231 158.6 102.405 cv
157.811 102.722 157.328 101.581 156.486 101.436 cv
156.338 101.41 156.016 101.385 155.658 101.382 cv
155.703 101.501 155.77 101.613 155.87 101.709 cv
156.071 101.902 156.743 101.911 156.85 102.063 cv
157.204 102.57 157.47 103.465 158.596 103.173 cv
159.116 103.039 158.872 102.555 159.127 102.4 cv
159.499 102.174 160.341 103.016 160.823 101.809 cv
161.05 101.24 160.597 100.755 160.295 100.438 cv
160.295 100.438 160.752 99.5093 160.219 98.9877 cv
cp
.964706 .686275 .00784302 rgb
f
160.067 98.8679 mo
159.89 98.7564 159.644 98.6765 159.305 98.6489 cv
159.045 98.6279 158.677 98.5945 158.446 98.7606 cv
158.339 98.8378 158.3 99.108 158.186 99.0486 cv
157.702 98.7963 157.646 98.138 156.762 98.4641 cv
156.223 98.6631 156.561 99.0987 156.528 99.4371 cv
156.441 99.6393 li
156.325 99.7155 155.916 100.079 155.862 100.162 cv
155.635 100.507 155.51 100.989 155.658 101.382 cv
156.016 101.385 156.338 101.41 156.486 101.436 cv
157.328 101.581 157.811 102.722 158.6 102.405 cv
159.034 102.231 158.936 101.951 159.02 101.621 cv
159.091 101.339 159.849 101.051 160.004 100.663 cv
160.198 100.177 159.627 99.831 159.815 99.3614 cv
159.862 99.2424 160.017 99.1094 160.219 98.9877 cv
160.067 98.8679 li
cp
.972549 .74902 .098039 rgb
f
157.182 99.9949 mo
157.446 99.8743 156.856 100.7 157.124 100.789 cv
157.35 100.864 157.49 100.767 157.694 100.752 cv
158.077 101.398 159.125 101.514 159.481 100.702 cv
159.641 100.335 159.017 100.216 159.017 100.216 cv
159.029 100.098 159.511 99.2562 158.881 99.2314 cv
158.477 99.2155 158.46 99.4875 158.25 99.6154 cv
158.231 99.6268 157.671 99.3256 157.524 99.3484 cv
157.274 99.3871 156.797 100.171 157.182 99.9949 cv
cp
1 .87451 .560784 rgb
f
246.92 348.229 mo
243.132 350.25 li
239.577 348.059 li
243.132 343.655 li
246.92 348.229 li
cp
.945098 .792157 .258824 rgb
f
331.794 301.412 mo
326.083 304.709 li
320.372 301.412 li
326.083 298.115 li
331.794 301.412 li
cp
f
263.667 301.925 mo
257.659 305.393 li
251.652 301.925 li
257.659 298.457 li
263.667 301.925 li
cp
f
328.543 264.469 mo
322.535 267.937 li
316.528 264.469 li
322.535 261 li
328.543 264.469 li
cp
f
304.67 325.598 mo
298.662 329.067 li
292.815 325.598 li
298.662 322.13 li
304.67 325.598 li
cp
f
369.546 288.142 mo
363.538 291.61 li
357.531 288.142 li
363.538 284.673 li
369.546 288.142 li
cp
f
239.577 348.059 mo
251.652 301.925 li
257.659 305.393 li
243.132 350.25 li
239.577 348.059 li
cp
.0235294 .0235294 .2 rgb
f
246.92 348.229 mo
263.667 301.925 li
257.659 305.393 li
243.132 350.25 li
246.92 348.229 li
cp
.0588235 .0588235 .286275 rgb
f
292.815 378.753 mo
292.815 325.598 li
298.662 329.067 li
296.352 380.837 li
292.815 378.753 li
cp
.0235294 .0235294 .2 rgb
f
299.529 379.058 mo
304.67 325.598 li
298.662 329.067 li
296.352 380.837 li
299.529 379.058 li
cp
.0588235 .0588235 .286275 rgb
f
363.538 291.61 mo
369.546 288.142 li
382.857 330.893 li
378.739 333.28 li
363.538 291.61 li
cp
f
356.993 288.061 mo
363.538 291.61 li
378.739 333.28 li
375.047 331.15 li
356.993 288.061 li
cp
.0235294 .0235294 .2 rgb
f
295.599 333.831 mo
295.514 339.911 li
226.535 300.085 li
226.62 294.005 li
295.599 333.831 li
cp
.0588235 .0588235 .286275 rgb
f
295.599 333.831 mo
295.683 339.911 li
392.981 283.872 li
392.896 277.792 li
295.599 333.831 li
cp
.0901961 .0901961 .34902 rgb
f
392.948 277.561 mo
295.514 333.813 li
226.535 293.988 li
323.968 237.735 li
392.948 277.561 li
cp
.137255 .117647 .396078 rgb
f
259.878 288.733 mo
263.393 288.733 li
325.482 252.841 li
326.363 252.333 327.902 252.396 328.919 252.984 cv
366.353 274.596 li
369.643 274.596 li
369.643 276.905 li
369.722 277.308 369.54 277.71 369.048 277.994 cv
304.039 315.574 li
303.158 316.083 300.289 316.74 299.272 316.152 cv
260.719 292.406 li
260.046 292.017 259.773 291.497 259.918 291.042 cv
259.878 288.733 li
cp
.596078 .752941 .988235 rgb
f
304.039 313.001 mo
369.048 275.421 li
369.929 274.912 369.818 274.024 368.801 273.437 cv
328.919 250.411 li
327.902 249.823 326.363 249.759 325.482 250.268 cv
260.472 287.848 li
259.592 288.357 259.702 289.245 260.719 289.833 cv
299.272 313.579 li
300.289 314.166 303.158 313.51 304.039 313.001 cv
cp
.94902 .964706 .968627 rgb
f
302.836 309.991 mo
362.728 275.365 li
363.482 274.93 363.387 274.17 362.517 273.667 cv
336.469 258.705 li
335.598 258.203 334.281 258.148 333.528 258.583 cv
273.635 293.209 li
272.882 293.644 272.976 294.404 273.846 294.907 cv
299.895 309.87 li
300.766 310.372 302.082 310.427 302.836 309.991 cv
cp
.482353 .568627 .796078 rgb
f
300.228 275.546 mo
310.381 269.684 li
302.324 265.033 li
292.172 270.895 li
300.228 275.546 li
cp
.8 .878431 .992157 rgb
f
311.604 268.978 mo
314.45 267.335 li
315.285 266.853 315.18 266.011 314.216 265.455 cv
309.649 262.819 li
308.686 262.262 307.228 262.202 306.394 262.684 cv
303.548 264.327 li
311.604 268.978 li
cp
f
299.004 276.253 mo
296.159 277.896 li
295.324 278.377 293.866 278.317 292.903 277.761 cv
288.336 275.124 li
287.372 274.568 287.268 273.726 288.102 273.244 cv
290.948 271.601 li
299.004 276.253 li
cp
f
298.008 307.719 mo
300.438 309.122 li
301.126 309.518 302.165 309.561 302.761 309.218 cv
305.555 307.604 li
306.15 307.261 306.076 306.66 305.388 306.264 cv
302.958 304.861 li
302.271 304.464 301.231 304.421 300.636 304.764 cv
297.841 306.378 li
297.246 306.721 297.321 307.322 298.008 307.719 cv
cp
.596078 .752941 .988235 rgb
f
303.583 304.5 mo
306.013 305.903 li
306.7 306.3 307.74 306.343 308.335 305.999 cv
311.13 304.386 li
311.725 304.042 311.651 303.442 310.963 303.045 cv
308.533 301.642 li
307.846 301.245 306.806 301.202 306.211 301.546 cv
303.416 303.159 li
302.821 303.503 302.896 304.103 303.583 304.5 cv
cp
f
309.158 301.281 mo
311.588 302.684 li
312.275 303.081 313.315 303.124 313.91 302.781 cv
316.705 301.167 li
317.3 300.823 317.225 300.223 316.538 299.826 cv
314.108 298.423 li
313.421 298.026 312.381 297.983 311.786 298.327 cv
308.991 299.941 li
308.396 300.284 308.47 300.885 309.158 301.281 cv
cp
f
314.733 298.063 mo
317.163 299.466 li
317.85 299.863 318.89 299.906 319.485 299.562 cv
322.28 297.948 li
322.875 297.605 322.8 297.005 322.113 296.608 cv
319.683 295.204 li
318.996 294.808 317.956 294.765 317.36 295.108 cv
314.566 296.722 li
313.971 297.065 314.045 297.666 314.733 298.063 cv
cp
f
320.307 294.844 mo
322.738 296.247 li
323.425 296.644 324.465 296.687 325.06 296.343 cv
327.854 294.73 li
328.45 294.386 328.375 293.786 327.688 293.389 cv
325.258 291.986 li
324.57 291.589 323.531 291.546 322.935 291.89 cv
320.141 293.503 li
319.546 293.847 319.62 294.447 320.307 294.844 cv
cp
f
325.882 291.625 mo
328.313 293.028 li
329 293.425 330.04 293.468 330.635 293.125 cv
333.429 291.511 li
334.025 291.168 333.95 290.567 333.263 290.17 cv
330.833 288.767 li
330.145 288.37 329.105 288.327 328.51 288.671 cv
325.715 290.284 li
325.12 290.628 325.195 291.228 325.882 291.625 cv
cp
f
331.457 288.407 mo
333.888 289.81 li
334.575 290.206 335.615 290.25 336.209 289.906 cv
339.004 288.293 li
339.6 287.949 339.525 287.349 338.838 286.952 cv
336.407 285.549 li
335.72 285.152 334.68 285.109 334.085 285.453 cv
331.29 287.066 li
330.695 287.41 330.77 288.01 331.457 288.407 cv
cp
f
337.032 285.188 mo
339.463 286.591 li
340.15 286.988 341.189 287.031 341.784 286.687 cv
344.579 285.074 li
345.174 284.73 345.1 284.13 344.413 283.733 cv
341.982 282.33 li
341.295 281.933 340.255 281.89 339.66 282.234 cv
336.865 283.847 li
336.27 284.191 336.345 284.791 337.032 285.188 cv
cp
f
342.607 281.969 mo
345.037 283.372 li
345.725 283.769 346.764 283.813 347.359 283.469 cv
350.154 281.855 li
350.749 281.511 350.675 280.911 349.987 280.515 cv
347.557 279.111 li
346.87 278.715 345.83 278.671 345.235 279.015 cv
342.44 280.629 li
341.845 280.972 341.919 281.573 342.607 281.969 cv
cp
f
348.182 278.751 mo
350.612 280.154 li
351.299 280.551 352.339 280.594 352.934 280.25 cv
355.729 278.637 li
356.324 278.293 356.25 277.693 355.562 277.296 cv
353.132 275.893 li
352.445 275.496 351.405 275.453 350.81 275.796 cv
348.015 277.41 li
347.42 277.754 347.494 278.354 348.182 278.751 cv
cp
f
353.756 275.532 mo
356.187 276.935 li
356.874 277.332 357.914 277.375 358.509 277.031 cv
361.304 275.418 li
361.899 275.074 361.824 274.474 361.137 274.077 cv
358.707 272.674 li
358.019 272.277 356.98 272.234 356.385 272.578 cv
353.59 274.191 li
352.995 274.535 353.069 275.135 353.756 275.532 cv
cp
f
292.336 304.444 mo
294.766 305.847 li
295.453 306.244 296.493 306.287 297.088 305.943 cv
301.543 303.371 li
302.138 303.027 302.064 302.427 301.376 302.03 cv
298.946 300.627 li
298.258 300.23 297.219 300.187 296.624 300.531 cv
292.169 303.103 li
291.574 303.447 291.648 304.047 292.336 304.444 cv
cp
f
299.091 300.543 mo
301.522 301.946 li
302.209 302.343 303.249 302.386 303.844 302.043 cv
306.639 300.429 li
307.234 300.086 307.159 299.485 306.472 299.088 cv
304.042 297.685 li
303.354 297.288 302.314 297.245 301.719 297.589 cv
298.925 299.202 li
298.329 299.546 298.404 300.146 299.091 300.543 cv
cp
f
304.02 297.698 mo
306.45 299.101 li
307.137 299.498 308.177 299.541 308.772 299.197 cv
311.567 297.584 li
312.162 297.24 312.087 296.64 311.4 296.243 cv
308.97 294.84 li
308.283 294.443 307.243 294.4 306.648 294.744 cv
303.853 296.357 li
303.258 296.701 303.333 297.301 304.02 297.698 cv
cp
f
308.949 294.852 mo
311.379 296.255 li
312.066 296.652 313.106 296.695 313.701 296.352 cv
316.495 294.738 li
317.091 294.395 317.016 293.794 316.329 293.397 cv
313.899 291.994 li
313.211 291.597 312.171 291.554 311.576 291.898 cv
308.782 293.511 li
308.187 293.855 308.261 294.455 308.949 294.852 cv
cp
f
313.877 292.007 mo
316.307 293.41 li
316.995 293.807 318.034 293.85 318.63 293.506 cv
321.424 291.893 li
322.019 291.549 321.945 290.949 321.257 290.552 cv
318.827 289.149 li
318.14 288.752 317.1 288.709 316.505 289.053 cv
313.71 290.666 li
313.115 291.01 313.19 291.61 313.877 292.007 cv
cp
f
318.806 289.161 mo
321.236 290.564 li
321.923 290.961 322.963 291.004 323.558 290.661 cv
326.353 289.047 li
326.948 288.704 326.873 288.103 326.186 287.706 cv
323.756 286.303 li
323.068 285.906 322.029 285.863 321.433 286.207 cv
318.639 287.821 li
318.043 288.164 318.118 288.764 318.806 289.161 cv
cp
f
323.734 286.316 mo
326.164 287.719 li
326.852 288.116 327.891 288.159 328.486 287.815 cv
331.281 286.202 li
331.876 285.858 331.802 285.258 331.114 284.861 cv
328.684 283.458 li
327.997 283.061 326.957 283.018 326.362 283.362 cv
323.567 284.975 li
322.972 285.319 323.047 285.919 323.734 286.316 cv
cp
f
328.662 283.47 mo
331.093 284.873 li
331.78 285.27 332.82 285.313 333.415 284.97 cv
336.209 283.356 li
336.805 283.013 336.73 282.412 336.043 282.016 cv
333.613 280.612 li
332.925 280.216 331.885 280.172 331.29 280.516 cv
328.495 282.13 li
327.901 282.473 327.975 283.073 328.662 283.47 cv
cp
f
333.591 280.625 mo
336.021 282.028 li
336.709 282.425 337.748 282.468 338.343 282.124 cv
341.138 280.511 li
341.733 280.167 341.659 279.567 340.972 279.17 cv
338.541 277.767 li
337.854 277.37 336.814 277.327 336.219 277.671 cv
333.424 279.284 li
332.829 279.628 332.904 280.228 333.591 280.625 cv
cp
f
338.52 277.779 mo
340.95 279.182 li
341.637 279.579 342.677 279.622 343.272 279.279 cv
346.067 277.665 li
346.662 277.322 346.587 276.722 345.9 276.324 cv
343.47 274.922 li
342.782 274.525 341.743 274.481 341.147 274.825 cv
338.353 276.439 li
337.758 276.782 337.832 277.382 338.52 277.779 cv
cp
f
343.448 274.934 mo
345.878 276.337 li
346.566 276.734 347.605 276.777 348.201 276.433 cv
350.995 274.82 li
351.591 274.476 351.516 273.876 350.828 273.479 cv
348.398 272.076 li
347.711 271.679 346.671 271.636 346.076 271.98 cv
343.281 273.593 li
342.686 273.937 342.761 274.537 343.448 274.934 cv
cp
f
294.531 296.626 mo
296.961 298.029 li
297.649 298.426 298.689 298.469 299.284 298.125 cv
302.079 296.512 li
302.674 296.168 302.599 295.568 301.912 295.171 cv
299.481 293.768 li
298.794 293.371 297.754 293.328 297.159 293.672 cv
294.365 295.285 li
293.769 295.629 293.844 296.229 294.531 296.626 cv
cp
f
299.422 293.802 mo
301.852 295.206 li
302.54 295.602 303.579 295.646 304.175 295.302 cv
306.969 293.688 li
307.564 293.345 307.49 292.745 306.802 292.348 cv
304.372 290.945 li
303.685 290.548 302.645 290.505 302.05 290.848 cv
299.255 292.462 li
298.66 292.805 298.735 293.406 299.422 293.802 cv
cp
f
304.313 290.979 mo
306.743 292.382 li
307.43 292.779 308.47 292.822 309.065 292.479 cv
311.86 290.865 li
312.455 290.521 312.38 289.921 311.693 289.524 cv
309.263 288.121 li
308.576 287.724 307.536 287.681 306.94 288.025 cv
304.146 289.638 li
303.551 289.982 303.625 290.582 304.313 290.979 cv
cp
f
309.203 288.155 mo
311.634 289.558 li
312.321 289.955 313.361 289.998 313.956 289.655 cv
316.75 288.041 li
317.346 287.698 317.271 287.098 316.584 286.7 cv
314.154 285.297 li
313.466 284.9 312.426 284.857 311.831 285.201 cv
309.036 286.814 li
308.441 287.158 308.516 287.758 309.203 288.155 cv
cp
f
314.094 285.332 mo
316.524 286.735 li
317.212 287.132 318.251 287.175 318.846 286.831 cv
321.641 285.218 li
322.236 284.874 322.162 284.274 321.475 283.877 cv
319.044 282.474 li
318.357 282.077 317.317 282.034 316.722 282.377 cv
313.927 283.991 li
313.332 284.334 313.406 284.935 314.094 285.332 cv
cp
f
318.984 282.508 mo
321.415 283.911 li
322.102 284.308 323.142 284.351 323.737 284.007 cv
326.532 282.394 li
327.127 282.05 327.052 281.45 326.365 281.053 cv
323.935 279.65 li
323.247 279.253 322.208 279.21 321.612 279.554 cv
318.818 281.167 li
318.223 281.511 318.297 282.111 318.984 282.508 cv
cp
f
323.875 279.685 mo
326.305 281.088 li
326.993 281.484 328.033 281.527 328.628 281.184 cv
331.422 279.57 li
332.018 279.227 331.943 278.626 331.255 278.23 cv
328.825 276.827 li
328.138 276.429 327.098 276.386 326.503 276.73 cv
323.708 278.344 li
323.113 278.687 323.188 279.288 323.875 279.685 cv
cp
f
328.766 276.861 mo
331.196 278.264 li
331.884 278.661 332.923 278.704 333.518 278.36 cv
336.313 276.747 li
336.908 276.403 336.834 275.803 336.146 275.406 cv
333.716 274.003 li
333.029 273.606 331.989 273.563 331.393 273.907 cv
328.599 275.52 li
328.004 275.864 328.078 276.464 328.766 276.861 cv
cp
f
291.304 291.939 mo
293.734 293.342 li
294.422 293.74 295.462 293.782 296.057 293.439 cv
298.852 291.825 li
299.447 291.482 299.372 290.881 298.685 290.484 cv
296.255 289.081 li
295.567 288.685 294.527 288.642 293.932 288.985 cv
291.138 290.599 li
290.542 290.942 290.617 291.543 291.304 291.939 cv
cp
f
296.195 289.116 mo
298.625 290.519 li
299.313 290.916 300.352 290.959 300.947 290.615 cv
303.742 289.002 li
304.337 288.658 304.263 288.058 303.575 287.661 cv
301.145 286.258 li
300.458 285.861 299.418 285.818 298.823 286.162 cv
296.028 287.775 li
295.433 288.119 295.508 288.719 296.195 289.116 cv
cp
f
301.086 286.292 mo
303.516 287.695 li
304.203 288.092 305.243 288.135 305.838 287.792 cv
308.633 286.178 li
309.228 285.835 309.153 285.234 308.466 284.837 cv
306.036 283.434 li
305.348 283.037 304.309 282.994 303.714 283.338 cv
300.919 284.951 li
300.324 285.295 300.398 285.895 301.086 286.292 cv
cp
f
275.227 294.672 mo
277.657 296.075 li
278.344 296.472 279.384 296.515 279.979 296.171 cv
282.774 294.558 li
283.369 294.214 283.294 293.614 282.607 293.217 cv
280.177 291.814 li
279.489 291.417 278.45 291.374 277.854 291.718 cv
275.06 293.331 li
274.465 293.675 274.539 294.275 275.227 294.672 cv
cp
f
280.117 291.848 mo
282.547 293.252 li
283.235 293.648 284.275 293.692 284.87 293.348 cv
287.665 291.734 li
288.26 291.391 288.185 290.79 287.498 290.393 cv
285.067 288.99 li
284.38 288.594 283.34 288.551 282.745 288.894 cv
279.951 290.508 li
279.355 290.851 279.43 291.452 280.117 291.848 cv
cp
f
285.008 289.025 mo
287.438 290.428 li
288.126 290.825 289.165 290.868 289.76 290.524 cv
292.555 288.911 li
293.15 288.567 293.076 287.967 292.388 287.57 cv
289.958 286.167 li
289.271 285.77 288.231 285.727 287.636 286.071 cv
284.841 287.684 li
284.246 288.028 284.321 288.628 285.008 289.025 cv
cp
f
321.286 268.08 mo
323.717 269.483 li
324.404 269.879 325.443 269.923 326.039 269.579 cv
328.833 267.965 li
329.429 267.622 329.354 267.022 328.667 266.625 cv
326.236 265.222 li
325.549 264.825 324.509 264.782 323.914 265.125 cv
321.119 266.739 li
320.524 267.082 320.599 267.683 321.286 268.08 cv
cp
f
326.177 265.256 mo
328.607 266.659 li
329.294 267.056 330.334 267.099 330.929 266.755 cv
333.724 265.142 li
334.319 264.798 334.245 264.198 333.557 263.801 cv
331.127 262.398 li
330.439 262.001 329.4 261.958 328.805 262.302 cv
326.01 263.915 li
325.415 264.259 325.49 264.859 326.177 265.256 cv
cp
f
331.067 262.432 mo
333.498 263.835 li
334.185 264.232 335.225 264.276 335.82 263.932 cv
338.615 262.318 li
339.21 261.974 339.135 261.374 338.448 260.978 cv
336.017 259.574 li
335.33 259.177 334.29 259.135 333.695 259.478 cv
330.901 261.092 li
330.306 261.435 330.38 262.036 331.067 262.432 cv
cp
f
305.976 283.469 mo
308.407 284.872 li
309.094 285.269 310.134 285.312 310.729 284.968 cv
313.524 283.354 li
314.119 283.011 314.044 282.411 313.357 282.014 cv
310.926 280.611 li
310.239 280.214 309.199 280.171 308.604 280.514 cv
305.81 282.128 li
305.214 282.471 305.289 283.072 305.976 283.469 cv
cp
f
310.867 280.645 mo
313.297 282.048 li
313.984 282.445 315.024 282.488 315.62 282.144 cv
318.414 280.531 li
319.009 280.187 318.935 279.587 318.247 279.19 cv
315.817 277.787 li
315.13 277.39 314.09 277.347 313.495 277.691 cv
310.7 279.304 li
310.105 279.648 310.18 280.248 310.867 280.645 cv
cp
f
315.758 277.821 mo
318.188 279.224 li
318.875 279.621 319.915 279.664 320.51 279.321 cv
323.305 277.707 li
323.9 277.363 323.825 276.763 323.138 276.367 cv
320.708 274.963 li
320.02 274.567 318.981 274.524 318.385 274.867 cv
315.591 276.48 li
314.995 276.824 315.07 277.425 315.758 277.821 cv
cp
f
320.648 274.998 mo
323.078 276.401 li
323.766 276.797 324.806 276.841 325.401 276.497 cv
328.195 274.883 li
328.791 274.54 328.716 273.94 328.029 273.543 cv
325.598 272.14 li
324.911 271.743 323.871 271.7 323.276 272.044 cv
320.481 273.657 li
319.886 274 319.961 274.601 320.648 274.998 cv
cp
f
325.539 272.174 mo
327.969 273.577 li
328.656 273.974 329.696 274.017 330.291 273.673 cv
333.086 272.06 li
333.681 271.716 333.606 271.116 332.919 270.719 cv
330.489 269.316 li
329.802 268.919 328.762 268.876 328.167 269.22 cv
325.372 270.833 li
324.777 271.177 324.851 271.777 325.539 272.174 cv
cp
f
333.656 274.037 mo
336.087 275.44 li
336.774 275.837 337.814 275.88 338.409 275.536 cv
341.204 273.923 li
341.799 273.579 341.724 272.979 341.037 272.582 cv
338.607 271.179 li
337.919 270.783 336.879 270.739 336.284 271.083 cv
333.49 272.697 li
332.894 273.04 332.969 273.64 333.656 274.037 cv
cp
f
348.084 272.257 mo
350.515 273.661 li
351.202 274.057 352.242 274.1 352.837 273.757 cv
355.631 272.143 li
356.227 271.799 356.152 271.199 355.465 270.802 cv
353.035 269.399 li
352.347 269.002 351.307 268.959 350.712 269.303 cv
347.917 270.916 li
347.322 271.26 347.397 271.86 348.084 272.257 cv
cp
f
286.663 301.169 mo
289.094 302.572 li
289.781 302.969 290.821 303.012 291.416 302.668 cv
297.102 299.385 li
297.697 299.042 297.622 298.442 296.935 298.044 cv
294.505 296.642 li
293.817 296.245 292.777 296.202 292.182 296.545 cv
286.497 299.828 li
285.901 300.172 285.976 300.772 286.663 301.169 cv
cp
f
330.735 269.174 mo
333.166 270.577 li
333.853 270.974 334.893 271.017 335.488 270.673 cv
344.287 265.593 li
344.882 265.25 344.807 264.649 344.12 264.253 cv
341.69 262.849 li
341.002 262.453 339.963 262.409 339.368 262.753 cv
330.569 267.833 li
329.973 268.177 330.048 268.777 330.735 269.174 cv
cp
f
290.239 286.004 mo
292.67 287.408 li
293.357 287.805 294.397 287.847 294.992 287.504 cv
323.499 271.045 li
324.094 270.702 324.02 270.101 323.332 269.704 cv
320.902 268.301 li
320.215 267.905 319.175 267.861 318.58 268.205 cv
290.072 284.664 li
289.477 285.008 289.552 285.608 290.239 286.004 cv
cp
f
280.991 297.894 mo
283.421 299.297 li
284.109 299.694 285.148 299.737 285.744 299.393 cv
293.234 295.068 li
293.83 294.725 293.755 294.124 293.068 293.728 cv
290.637 292.324 li
289.95 291.927 288.91 291.884 288.315 292.228 cv
280.824 296.553 li
280.229 296.897 280.304 297.497 280.991 297.894 cv
cp
f
338.58 271.195 mo
341.01 272.598 li
341.697 272.995 342.737 273.038 343.332 272.694 cv
349.959 268.868 li
350.554 268.525 350.48 267.924 349.792 267.527 cv
347.362 266.124 li
346.675 265.727 345.635 265.684 345.04 266.028 cv
338.413 269.854 li
337.818 270.198 337.892 270.798 338.58 271.195 cv
cp
f
300.674 304.582 mo
297.923 306.17 li
297.483 306.424 297.539 306.868 298.047 307.161 cv
300.524 308.591 li
301.032 308.885 301.8 308.917 302.241 308.663 cv
304.991 307.075 li
305.431 306.82 305.376 306.377 304.868 306.083 cv
302.391 304.653 li
301.882 304.36 301.114 304.328 300.674 304.582 cv
cp
.8 .878431 .992157 rgb
f
306.249 301.364 mo
303.498 302.951 li
303.058 303.206 303.113 303.649 303.622 303.943 cv
306.099 305.373 li
306.607 305.666 307.375 305.698 307.815 305.444 cv
310.566 303.856 li
311.006 303.602 310.951 303.158 310.443 302.865 cv
307.965 301.435 li
307.457 301.141 306.689 301.109 306.249 301.364 cv
cp
f
311.824 298.145 mo
309.073 299.733 li
308.633 299.987 308.688 300.431 309.197 300.724 cv
311.674 302.154 li
312.182 302.448 312.95 302.479 313.39 302.225 cv
316.141 300.637 li
316.581 300.383 316.526 299.939 316.017 299.646 cv
313.54 298.216 li
313.032 297.923 312.264 297.891 311.824 298.145 cv
cp
f
317.399 294.926 mo
314.648 296.514 li
314.208 296.768 314.263 297.212 314.771 297.505 cv
317.249 298.936 li
317.756 299.229 318.525 299.261 318.965 299.007 cv
321.716 297.418 li
322.156 297.165 322.101 296.721 321.592 296.428 cv
319.115 294.997 li
318.607 294.704 317.839 294.672 317.399 294.926 cv
cp
f
322.974 291.708 mo
320.223 293.296 li
319.783 293.55 319.838 293.993 320.346 294.287 cv
322.823 295.717 li
323.331 296.01 324.1 296.042 324.54 295.788 cv
327.291 294.2 li
327.731 293.946 327.675 293.502 327.167 293.209 cv
324.69 291.779 li
324.182 291.485 323.413 291.453 322.974 291.708 cv
cp
f
328.548 288.489 mo
325.797 290.077 li
325.358 290.331 325.413 290.775 325.921 291.068 cv
328.398 292.498 li
328.906 292.791 329.675 292.824 330.114 292.569 cv
332.865 290.981 li
333.306 290.727 333.25 290.284 332.742 289.99 cv
330.265 288.56 li
329.757 288.266 328.988 288.235 328.548 288.489 cv
cp
f
334.123 285.27 mo
331.372 286.858 li
330.933 287.113 330.988 287.556 331.496 287.849 cv
333.973 289.28 li
334.481 289.573 335.25 289.605 335.69 289.351 cv
338.44 287.763 li
338.88 287.508 338.825 287.065 338.317 286.772 cv
335.84 285.341 li
335.332 285.048 334.563 285.016 334.123 285.27 cv
cp
f
339.698 282.052 mo
336.948 283.64 li
336.507 283.894 336.563 284.337 337.071 284.631 cv
339.548 286.061 li
340.056 286.354 340.824 286.386 341.264 286.132 cv
344.015 284.544 li
344.455 284.29 344.4 283.846 343.892 283.553 cv
341.415 282.123 li
340.907 281.829 340.138 281.798 339.698 282.052 cv
cp
f
345.273 278.833 mo
342.522 280.421 li
342.082 280.675 342.138 281.119 342.646 281.412 cv
345.123 282.842 li
345.631 283.136 346.399 283.167 346.839 282.913 cv
349.59 281.325 li
350.03 281.071 349.975 280.628 349.467 280.334 cv
346.99 278.904 li
346.481 278.611 345.713 278.579 345.273 278.833 cv
cp
f
350.848 275.614 mo
348.097 277.203 li
347.657 277.456 347.713 277.9 348.22 278.193 cv
350.698 279.624 li
351.206 279.917 351.974 279.949 352.414 279.695 cv
355.165 278.107 li
355.605 277.853 355.55 277.409 355.042 277.116 cv
352.565 275.686 li
352.056 275.392 351.288 275.36 350.848 275.614 cv
cp
f
356.423 272.396 mo
353.672 273.984 li
353.232 274.238 353.287 274.681 353.795 274.975 cv
356.272 276.405 li
356.78 276.698 357.549 276.73 357.989 276.476 cv
360.74 274.888 li
361.18 274.634 361.125 274.19 360.617 273.897 cv
358.139 272.467 li
357.631 272.173 356.863 272.142 356.423 272.396 cv
cp
f
296.662 300.349 mo
292.251 302.895 li
291.811 303.149 291.866 303.593 292.374 303.886 cv
294.851 305.317 li
295.36 305.61 296.128 305.642 296.568 305.388 cv
300.979 302.841 li
301.419 302.587 301.364 302.143 300.856 301.85 cv
298.379 300.42 li
297.87 300.126 297.102 300.095 296.662 300.349 cv
cp
f
301.757 297.407 mo
299.007 298.995 li
298.567 299.249 298.622 299.693 299.13 299.986 cv
301.607 301.416 li
302.115 301.709 302.884 301.741 303.324 301.487 cv
306.074 299.899 li
306.514 299.645 306.459 299.202 305.951 298.908 cv
303.474 297.478 li
302.966 297.185 302.198 297.153 301.757 297.407 cv
cp
f
306.686 294.561 mo
303.935 296.15 li
303.495 296.404 303.55 296.847 304.059 297.141 cv
306.536 298.571 li
307.044 298.864 307.812 298.896 308.252 298.642 cv
311.003 297.054 li
311.443 296.8 311.388 296.356 310.88 296.063 cv
308.402 294.632 li
307.895 294.339 307.126 294.307 306.686 294.561 cv
cp
f
311.614 291.716 mo
308.864 293.304 li
308.424 293.558 308.479 294.002 308.987 294.295 cv
311.464 295.725 li
311.972 296.018 312.741 296.051 313.181 295.797 cv
315.931 294.208 li
316.371 293.954 316.316 293.51 315.808 293.217 cv
313.331 291.787 li
312.823 291.494 312.054 291.462 311.614 291.716 cv
cp
f
316.543 288.87 mo
313.792 290.458 li
313.352 290.713 313.407 291.156 313.916 291.449 cv
316.393 292.88 li
316.901 293.173 317.669 293.205 318.109 292.951 cv
320.86 291.363 li
321.3 291.109 321.245 290.665 320.737 290.372 cv
318.259 288.942 li
317.752 288.648 316.983 288.616 316.543 288.87 cv
cp
f
321.472 286.025 mo
318.721 287.613 li
318.281 287.867 318.336 288.311 318.844 288.604 cv
321.321 290.034 li
321.829 290.327 322.598 290.359 323.038 290.105 cv
325.788 288.517 li
326.229 288.263 326.173 287.819 325.665 287.526 cv
323.188 286.096 li
322.68 285.803 321.912 285.771 321.472 286.025 cv
cp
f
326.4 283.179 mo
323.649 284.768 li
323.209 285.022 323.265 285.465 323.772 285.759 cv
326.25 287.189 li
326.758 287.482 327.526 287.514 327.966 287.26 cv
330.717 285.672 li
331.157 285.418 331.102 284.974 330.594 284.681 cv
328.117 283.25 li
327.609 282.957 326.84 282.925 326.4 283.179 cv
cp
f
331.328 280.334 mo
328.578 281.922 li
328.138 282.176 328.193 282.62 328.701 282.913 cv
331.178 284.343 li
331.686 284.637 332.455 284.669 332.895 284.414 cv
335.645 282.826 li
336.086 282.572 336.03 282.129 335.522 281.835 cv
333.045 280.405 li
332.537 280.112 331.769 280.08 331.328 280.334 cv
cp
f
336.257 277.488 mo
333.506 279.076 li
333.066 279.331 333.121 279.774 333.63 280.068 cv
336.107 281.498 li
336.615 281.791 337.383 281.823 337.823 281.569 cv
340.574 279.981 li
341.014 279.727 340.959 279.283 340.451 278.99 cv
337.974 277.56 li
337.466 277.266 336.697 277.234 336.257 277.488 cv
cp
f
341.186 274.643 mo
338.435 276.231 li
337.995 276.485 338.05 276.929 338.558 277.222 cv
341.035 278.652 li
341.544 278.946 342.312 278.977 342.752 278.723 cv
345.503 277.135 li
345.943 276.881 345.887 276.438 345.38 276.144 cv
342.902 274.714 li
342.394 274.421 341.626 274.389 341.186 274.643 cv
cp
f
346.114 271.797 mo
343.363 273.386 li
342.923 273.64 342.979 274.083 343.486 274.377 cv
345.964 275.807 li
346.472 276.1 347.24 276.132 347.68 275.878 cv
350.431 274.29 li
350.871 274.036 350.816 273.592 350.308 273.299 cv
347.831 271.869 li
347.323 271.575 346.554 271.543 346.114 271.797 cv
cp
f
297.198 293.49 mo
294.447 295.078 li
294.007 295.332 294.062 295.776 294.57 296.069 cv
297.047 297.499 li
297.555 297.792 298.324 297.824 298.764 297.57 cv
301.515 295.982 li
301.954 295.728 301.899 295.285 301.391 294.991 cv
298.914 293.561 li
298.406 293.267 297.637 293.235 297.198 293.49 cv
cp
f
302.088 290.666 mo
299.337 292.254 li
298.897 292.508 298.953 292.952 299.461 293.245 cv
301.938 294.676 li
302.446 294.969 303.214 295.001 303.654 294.747 cv
306.405 293.159 li
306.845 292.904 306.79 292.461 306.282 292.168 cv
303.804 290.737 li
303.297 290.444 302.528 290.412 302.088 290.666 cv
cp
f
306.979 287.842 mo
304.228 289.431 li
303.788 289.685 303.843 290.128 304.351 290.422 cv
306.828 291.852 li
307.337 292.145 308.105 292.177 308.545 291.923 cv
311.296 290.335 li
311.736 290.081 311.68 289.637 311.172 289.344 cv
308.695 287.913 li
308.187 287.62 307.419 287.589 306.979 287.842 cv
cp
f
311.869 285.019 mo
309.119 286.607 li
308.679 286.861 308.734 287.305 309.242 287.598 cv
311.719 289.028 li
312.227 289.321 312.996 289.353 313.436 289.099 cv
316.186 287.511 li
316.627 287.257 316.571 286.814 316.063 286.52 cv
313.586 285.09 li
313.078 284.797 312.309 284.765 311.869 285.019 cv
cp
f
316.76 282.195 mo
314.009 283.783 li
313.569 284.038 313.625 284.481 314.132 284.774 cv
316.609 286.205 li
317.118 286.498 317.886 286.53 318.326 286.276 cv
321.077 284.688 li
321.517 284.434 321.462 283.99 320.954 283.697 cv
318.477 282.266 li
317.968 281.973 317.2 281.941 316.76 282.195 cv
cp
f
321.651 279.372 mo
318.9 280.96 li
318.46 281.214 318.515 281.657 319.023 281.951 cv
321.5 283.381 li
322.008 283.674 322.777 283.706 323.217 283.452 cv
325.968 281.864 li
326.407 281.61 326.353 281.166 325.844 280.873 cv
323.367 279.443 li
322.859 279.15 322.091 279.118 321.651 279.372 cv
cp
f
326.541 276.548 mo
323.79 278.136 li
323.351 278.39 323.406 278.834 323.914 279.127 cv
326.391 280.557 li
326.899 280.851 327.668 280.883 328.107 280.629 cv
330.858 279.04 li
331.298 278.786 331.243 278.343 330.735 278.049 cv
328.258 276.619 li
327.75 276.326 326.981 276.294 326.541 276.548 cv
cp
f
331.432 273.724 mo
328.681 275.313 li
328.241 275.566 328.296 276.01 328.804 276.304 cv
331.282 277.734 li
331.79 278.027 332.558 278.059 332.998 277.805 cv
335.749 276.217 li
336.189 275.963 336.134 275.519 335.626 275.226 cv
333.148 273.796 li
332.64 273.502 331.872 273.47 331.432 273.724 cv
cp
f
293.97 288.803 mo
291.22 290.391 li
290.78 290.645 290.835 291.089 291.343 291.382 cv
293.82 292.812 li
294.328 293.106 295.097 293.138 295.537 292.883 cv
298.288 291.295 li
298.727 291.042 298.672 290.598 298.164 290.304 cv
295.687 288.874 li
295.179 288.581 294.41 288.549 293.97 288.803 cv
cp
f
298.861 285.979 mo
296.11 287.568 li
295.67 287.822 295.725 288.265 296.234 288.559 cv
298.711 289.989 li
299.219 290.282 299.988 290.314 300.427 290.06 cv
303.178 288.472 li
303.618 288.218 303.563 287.774 303.055 287.481 cv
300.578 286.05 li
300.07 285.757 299.301 285.725 298.861 285.979 cv
cp
f
303.752 283.156 mo
301.001 284.744 li
300.561 284.998 300.616 285.442 301.124 285.735 cv
303.601 287.165 li
304.11 287.458 304.878 287.49 305.318 287.236 cv
308.069 285.648 li
308.509 285.394 308.453 284.95 307.946 284.657 cv
305.468 283.227 li
304.96 282.933 304.192 282.902 303.752 283.156 cv
cp
f
277.893 291.536 mo
275.142 293.124 li
274.702 293.378 274.757 293.821 275.265 294.115 cv
277.742 295.545 li
278.251 295.838 279.019 295.87 279.459 295.616 cv
282.21 294.028 li
282.65 293.774 282.594 293.33 282.087 293.037 cv
279.609 291.607 li
279.101 291.314 278.333 291.282 277.893 291.536 cv
cp
f
282.784 288.712 mo
280.033 290.3 li
279.593 290.554 279.648 290.998 280.156 291.291 cv
282.633 292.722 li
283.141 293.015 283.91 293.047 284.35 292.793 cv
287.1 291.204 li
287.54 290.95 287.485 290.507 286.977 290.214 cv
284.5 288.783 li
283.992 288.49 283.223 288.458 282.784 288.712 cv
cp
f
287.674 285.888 mo
284.923 287.476 li
284.483 287.73 284.538 288.174 285.047 288.467 cv
287.524 289.898 li
288.032 290.191 288.8 290.223 289.24 289.969 cv
291.991 288.381 li
292.431 288.127 292.376 287.683 291.868 287.39 cv
289.391 285.96 li
288.882 285.666 288.114 285.634 287.674 285.888 cv
cp
f
323.952 264.943 mo
321.202 266.531 li
320.761 266.785 320.817 267.229 321.325 267.522 cv
323.802 268.953 li
324.31 269.246 325.078 269.278 325.518 269.024 cv
328.269 267.436 li
328.709 267.181 328.654 266.738 328.146 266.444 cv
325.669 265.014 li
325.161 264.721 324.392 264.689 323.952 264.943 cv
cp
f
328.843 262.12 mo
326.092 263.708 li
325.652 263.962 325.707 264.406 326.215 264.699 cv
328.693 266.129 li
329.201 266.422 329.969 266.454 330.409 266.2 cv
333.16 264.612 li
333.6 264.358 333.545 263.914 333.037 263.621 cv
330.559 262.191 li
330.051 261.898 329.283 261.866 328.843 262.12 cv
cp
f
333.734 259.296 mo
330.983 260.884 li
330.543 261.138 330.598 261.582 331.106 261.875 cv
333.583 263.306 li
334.091 263.599 334.86 263.63 335.3 263.377 cv
338.05 261.788 li
338.49 261.534 338.435 261.091 337.927 260.797 cv
335.45 259.367 li
334.942 259.074 334.173 259.042 333.734 259.296 cv
cp
f
308.643 280.332 mo
305.892 281.92 li
305.451 282.174 305.507 282.618 306.015 282.911 cv
308.492 284.341 li
309 284.635 309.769 284.667 310.209 284.412 cv
312.959 282.825 li
313.399 282.571 313.344 282.127 312.836 281.833 cv
310.359 280.403 li
309.851 280.11 309.082 280.078 308.643 280.332 cv
cp
f
313.533 277.509 mo
310.782 279.097 li
310.342 279.351 310.397 279.794 310.906 280.088 cv
313.383 281.518 li
313.891 281.811 314.659 281.843 315.099 281.589 cv
317.85 280.001 li
318.29 279.747 318.235 279.303 317.727 279.01 cv
315.249 277.58 li
314.741 277.286 313.973 277.254 313.533 277.509 cv
cp
f
318.424 274.685 mo
315.673 276.273 li
315.233 276.527 315.288 276.971 315.796 277.264 cv
318.274 278.694 li
318.781 278.988 319.55 279.019 319.99 278.766 cv
322.741 277.177 li
323.181 276.923 323.125 276.48 322.617 276.186 cv
320.14 274.756 li
319.632 274.463 318.864 274.431 318.424 274.685 cv
cp
f
323.314 271.861 mo
320.563 273.449 li
320.124 273.703 320.179 274.147 320.687 274.44 cv
323.164 275.871 li
323.672 276.164 324.441 276.196 324.88 275.942 cv
327.631 274.354 li
328.071 274.099 328.016 273.656 327.508 273.363 cv
325.031 271.932 li
324.523 271.639 323.754 271.607 323.314 271.861 cv
cp
f
328.205 269.038 mo
325.454 270.626 li
325.014 270.88 325.069 271.324 325.577 271.617 cv
328.054 273.047 li
328.563 273.34 329.331 273.372 329.771 273.118 cv
332.522 271.53 li
332.962 271.276 332.906 270.832 332.399 270.539 cv
329.922 269.109 li
329.413 268.816 328.645 268.784 328.205 269.038 cv
cp
f
336.323 270.901 mo
333.572 272.489 li
333.132 272.743 333.187 273.187 333.695 273.48 cv
336.172 274.91 li
336.68 275.204 337.449 275.235 337.889 274.981 cv
340.64 273.393 li
341.08 273.139 341.024 272.696 340.516 272.402 cv
338.039 270.972 li
337.531 270.679 336.763 270.647 336.323 270.901 cv
cp
f
350.75 269.121 mo
348 270.709 li
347.56 270.963 347.615 271.406 348.123 271.7 cv
350.6 273.13 li
351.108 273.423 351.877 273.455 352.316 273.201 cv
355.067 271.613 li
355.507 271.359 355.452 270.915 354.944 270.622 cv
352.467 269.192 li
351.959 268.898 351.19 268.867 350.75 269.121 cv
cp
f
292.221 296.363 mo
286.579 299.62 li
286.139 299.875 286.194 300.318 286.702 300.611 cv
289.179 302.042 li
289.687 302.335 290.456 302.367 290.896 302.113 cv
296.538 298.855 li
296.977 298.602 296.922 298.158 296.414 297.865 cv
293.937 296.434 li
293.429 296.141 292.661 296.109 292.221 296.363 cv
cp
f
339.406 262.571 mo
330.651 267.625 li
330.211 267.88 330.266 268.323 330.774 268.616 cv
333.251 270.047 li
333.759 270.34 334.528 270.372 334.968 270.118 cv
343.723 265.063 li
344.163 264.809 344.108 264.366 343.599 264.072 cv
341.122 262.642 li
340.614 262.349 339.846 262.317 339.406 262.571 cv
cp
f
318.618 268.023 mo
290.155 284.456 li
289.714 284.71 289.77 285.154 290.278 285.447 cv
292.755 286.877 li
293.263 287.171 294.032 287.203 294.472 286.949 cv
322.935 270.515 li
323.375 270.261 323.32 269.818 322.812 269.524 cv
320.334 268.094 li
319.827 267.801 319.058 267.769 318.618 268.023 cv
cp
f
288.354 292.046 mo
280.906 296.345 li
280.466 296.6 280.522 297.043 281.03 297.337 cv
283.507 298.767 li
284.015 299.06 284.783 299.092 285.223 298.838 cv
292.67 294.538 li
293.11 294.284 293.055 293.841 292.547 293.547 cv
290.07 292.117 li
289.562 291.824 288.793 291.792 288.354 292.046 cv
cp
f
345.078 265.846 mo
338.495 269.646 li
338.055 269.9 338.11 270.344 338.618 270.637 cv
341.095 272.068 li
341.604 272.361 342.372 272.393 342.812 272.139 cv
349.395 268.338 li
349.835 268.084 349.78 267.641 349.272 267.347 cv
346.795 265.917 li
346.286 265.624 345.518 265.592 345.078 265.846 cv
cp
f
306.158 314.044 mo
370.913 274.957 li
371.534 274.598 372.037 273.73 372.037 273.017 cv
373.417 233.144 li
373.417 232.431 371.534 231.498 370.913 231.857 cv
305.162 269.923 li
304.541 270.281 304.038 271.15 304.038 271.863 cv
304.038 312.382 li
304.038 313.094 305.537 314.402 306.158 314.044 cv
cp
f
306.562 313.898 mo
372.313 275.832 li
372.934 275.473 373.437 274.605 373.437 273.892 cv
373.437 233.373 li
373.437 232.66 372.934 232.373 372.313 232.732 cv
306.562 270.798 li
305.941 271.156 305.437 272.025 305.437 272.737 cv
305.437 313.256 li
305.437 313.969 305.941 314.256 306.562 313.898 cv
cp
.482353 .568627 .796078 rgb
f
153.126 166.509 mo
152.676 168.093 151.362 169.551 149.328 170.694 cv
146.754 172.134 143.361 172.854 139.977 172.854 cv
136.593 172.854 133.209 172.134 130.635 170.694 cv
128.979 169.767 127.809 168.642 127.179 167.4 cv
130.5 188.829 li
130.491 188.802 130.482 188.775 130.428 188.658 cv
130.401 188.577 130.383 188.496 130.338 188.352 cv
130.329 188.289 130.311 188.235 130.275 188.037 cv
130.266 187.938 li
130.248 187.794 li
130.248 187.812 130.248 187.821 130.248 187.83 cv
130.212 187.578 li
130.212 187.605 130.212 187.641 130.221 187.668 cv
130.212 187.641 130.212 187.605 130.212 187.578 cv
128.412 176.166 li
128.412 176.139 128.403 176.112 128.403 176.094 cv
128.403 176.112 li
127.89 173.286 127.368 170.451 126.855 166.599 cv
126.72 166.158 126.648 165.708 126.648 165.249 cv
126.648 165.177 126.648 165.114 126.657 165.042 cv
126.63 164.835 126.603 164.628 126.576 164.421 cv
126.585 164.466 li
126.594 164.511 126.594 164.556 126.603 164.601 cv
126.63 164.754 li
126.657 164.943 li
126.63 164.754 li
126.63 164.754 126.639 164.781 126.657 164.871 cv
126.657 164.88 126.657 164.889 126.666 164.898 cv
126.81 162.963 128.205 161.163 130.635 159.813 cv
135.783 156.924 144.171 156.924 149.328 159.813 cv
151.893 161.244 153.306 163.179 153.306 165.249 cv
153.306 165.645 153.252 166.032 153.153 166.41 cv
153.162 166.401 li
153.162 166.41 153.153 166.41 153.153 166.419 cv
153.153 166.421 153.153 166.422 153.153 166.423 cv
153.15 166.428 153.147 166.432 153.144 166.437 cv
153.151 166.43 153.153 166.428 153.153 166.423 cv
153.225 166.309 153.235 166.274 153.252 166.248 cv
153.342 166.077 li
153.45 165.861 153.477 165.807 153.504 165.753 cv
153.585 165.537 153.612 165.474 153.63 165.42 cv
153.693 165.222 153.711 165.195 153.72 165.159 cv
150.255 188.433 li
150.219 188.559 150.201 188.595 150.192 188.64 cv
150.138 188.757 li
150.093 188.883 li
150.039 189 li
149.976 189.117 li
149.913 189.243 li
149.85 189.36 li
153.126 166.509 li
128.286 175.374 mo
128.304 175.482 128.331 175.59 128.349 175.698 cv
126.972 166.941 li
128.286 175.374 li
130.977 160.434 mo
128.646 161.739 127.359 163.449 127.359 165.249 cv
127.359 167.049 128.646 168.768 130.977 170.073 cv
135.945 172.845 144.018 172.845 148.977 170.073 cv
151.317 168.768 152.595 167.049 152.595 165.249 cv
152.595 163.449 151.317 161.739 148.977 160.434 cv
146.502 159.039 143.235 158.346 139.977 158.346 cv
136.719 158.346 133.461 159.039 130.977 160.434 cv
153.72 165.159 mo
153.747 165.051 li
153.783 164.907 153.81 164.826 153.828 164.736 cv
153.369 167.814 150.354 188.037 150.336 188.118 cv
150.3 188.28 150.282 188.334 150.264 188.397 cv
153.72 165.159 li
130.221 187.668 mo
130.23 187.749 130.239 187.821 130.248 187.902 cv
130.239 187.821 130.23 187.749 130.221 187.668 cv
140.274 171.765 mo
140.274 171.765 li
140.04 171.765 mo
139.914 171.756 li
140.031 171.756 140.148 171.765 140.274 171.765 cv
140.04 171.765 li
140.04 171.765 mo
140.157 171.765 li
140.04 171.765 li
140.846 171.751 mo
140.823 171.754 140.8 171.756 140.778 171.756 cv
140.846 171.751 li
140.526 171.756 mo
140.715 171.756 li
140.778 171.756 li
140.688 171.756 140.607 171.756 140.526 171.756 cv
140.571 171.756 mo
140.715 171.756 li
140.571 171.756 li
139.644 171.756 mo
139.644 171.756 li
139.536 171.756 mo
139.498 171.753 li
139.549 171.756 139.599 171.756 139.644 171.756 cv
139.536 171.756 li
139.536 171.756 mo
139.536 171.756 li
139.5 171.756 mo
139.365 171.747 li
139.536 171.756 li
139.5 171.756 li
139.437 171.747 mo
139.498 171.753 li
139.478 171.751 139.458 171.75 139.437 171.747 cv
140.913 171.747 mo
140.846 171.751 li
140.868 171.749 140.891 171.747 140.913 171.747 cv
139.437 171.747 mo
139.437 171.747 li
139.221 171.738 mo
139.437 171.747 li
139.365 171.747 139.293 171.747 139.221 171.738 cv
141.255 171.738 mo
141.255 171.738 li
141.228 171.738 mo
141.237 171.738 141.246 171.738 141.255 171.738 cv
141.246 171.738 141.237 171.738 141.228 171.738 cv
141.294 171.737 mo
141.28 171.738 141.267 171.738 141.255 171.738 cv
141.268 171.738 141.281 171.738 141.294 171.737 cv
138.879 171.729 mo
139.068 171.738 li
138.879 171.729 li
138.879 171.729 mo
139.068 171.738 li
138.879 171.729 li
141.579 171.72 mo
141.484 171.728 141.389 171.735 141.294 171.737 cv
141.368 171.735 141.473 171.728 141.579 171.72 cv
138.807 171.721 mo
138.83 171.723 138.854 171.725 138.879 171.729 cv
138.807 171.721 li
138.708 171.711 mo
138.807 171.721 li
138.773 171.719 138.74 171.716 138.708 171.711 cv
142.146 171.684 mo
141.795 171.711 li
141.912 171.702 142.029 171.693 142.146 171.684 cv
138.622 171.706 mo
138.708 171.711 li
138.681 171.711 138.652 171.709 138.622 171.706 cv
138.483 171.702 mo
138.6 171.711 li
138.483 171.702 li
138.537 171.702 mo
138.564 171.702 138.593 171.704 138.622 171.706 cv
138.537 171.702 li
138.357 171.693 mo
138.357 171.693 li
138.276 171.688 mo
138.357 171.693 li
138.33 171.693 138.303 171.691 138.276 171.688 cv
138.195 171.684 mo
138.222 171.684 138.249 171.686 138.276 171.688 cv
138.195 171.684 li
142.335 171.666 mo
142.146 171.684 li
142.335 171.666 li
138.013 171.662 mo
138.123 171.675 li
138.195 171.684 li
138.136 171.679 138.074 171.67 138.013 171.662 cv
137.889 171.648 mo
137.929 171.652 137.971 171.657 138.013 171.662 cv
137.889 171.648 li
144.612 171.333 mo
144.378 171.387 li
144.45 171.369 144.531 171.351 144.612 171.333 cv
144.783 171.297 mo
144.711 171.315 li
144.846 171.288 li
144.9 171.279 li
144.801 171.297 li
144.738 171.315 144.675 171.324 144.612 171.333 cv
144.783 171.297 li
135.585 171.306 mo
135.585 171.306 li
135.45 171.27 mo
135.495 171.279 135.54 171.288 135.585 171.306 cv
135.45 171.27 li
135.315 171.243 mo
135.36 171.252 135.405 171.261 135.45 171.27 cv
135.315 171.243 li
145.485 171.144 mo
145.386 171.171 145.287 171.189 145.188 171.216 cv
145.206 171.207 145.368 171.171 145.485 171.144 cv
135.135 171.207 mo
135.135 171.207 li
134.865 171.135 mo
134.964 171.162 135.045 171.18 135.135 171.207 cv
134.865 171.135 li
145.431 171.162 mo
145.26 171.198 li
145.431 171.162 li
134.865 171.135 mo
134.973 171.162 li
134.865 171.135 li
134.865 171.135 mo
134.865 171.135 li
134.865 171.135 mo
134.721 171.099 li
134.865 171.135 li
145.935 171.027 mo
146.079 170.991 li
145.953 171.027 145.836 171.054 145.71 171.09 cv
145.935 171.027 li
134.55 171.063 mo
134.55 171.063 li
134.379 171.018 mo
134.496 171.045 li
134.55 171.063 li
134.379 171.018 li
134.379 171.018 mo
134.265 170.984 li
134.272 170.986 134.28 170.988 134.289 170.991 cv
134.136 170.946 li
134.253 170.973 134.298 170.991 134.334 171 cv
134.388 171.018 134.442 171.027 134.496 171.045 cv
134.379 171.018 li
134.226 170.973 mo
134.265 170.984 li
134.25 170.981 134.238 170.979 134.226 170.973 cv
146.538 170.856 mo
146.394 170.901 li
146.25 170.946 li
146.34 170.919 146.439 170.883 146.538 170.856 cv
133.992 170.901 mo
133.992 170.901 li
133.794 170.847 mo
133.992 170.901 li
133.956 170.892 133.911 170.883 133.794 170.847 cv
146.619 170.829 mo
146.547 170.853 li
146.502 170.865 li
146.619 170.829 li
133.614 170.784 mo
133.866 170.865 li
133.614 170.784 li
146.547 170.853 mo
146.544 170.854 146.541 170.855 146.538 170.856 cv
146.547 170.853 li
146.619 170.829 mo
146.673 170.82 li
146.637 170.829 li
146.547 170.853 li
146.571 170.845 146.595 170.837 146.619 170.829 cv
133.488 170.748 mo
133.614 170.784 li
133.488 170.748 li
147.033 170.703 mo
146.817 170.775 li
146.889 170.748 146.961 170.721 147.033 170.703 cv
147.042 170.694 mo
147.063 170.689 147.082 170.684 147.102 170.679 cv
147.079 170.686 147.056 170.694 147.033 170.703 cv
147.042 170.694 li
147.321 170.604 mo
147.276 170.622 li
147.215 170.642 147.16 170.662 147.102 170.679 cv
147.175 170.654 147.245 170.631 147.321 170.604 cv
147.771 170.433 mo
147.825 170.415 li
147.807 170.424 147.78 170.433 147.762 170.442 cv
147.708 170.469 li
147.546 170.523 li
147.51 170.532 147.474 170.55 147.438 170.559 cv
147.771 170.433 li
132.714 170.478 mo
132.714 170.478 li
132.462 170.379 mo
132.624 170.442 li
132.462 170.379 li
132.624 170.442 li
132.714 170.478 li
132.462 170.379 li
132.462 170.379 mo
132.462 170.379 li
148.248 170.244 mo
148.356 170.199 li
148.257 170.244 148.149 170.289 148.041 170.334 cv
148.248 170.244 li
132.165 170.253 mo
132.165 170.253 li
131.904 170.145 mo
132.021 170.19 li
131.904 170.145 li
132.021 170.19 li
132.165 170.253 li
131.904 170.145 li
131.904 170.145 mo
131.904 170.145 li
148.716 170.037 mo
148.878 169.956 li
148.779 170.01 148.689 170.055 148.59 170.1 cv
148.716 170.037 li
148.563 170.109 li
148.716 170.037 li
131.643 170.019 mo
131.643 170.019 li
131.517 169.965 mo
131.337 169.875 li
131.643 170.019 li
131.517 169.965 li
149.175 169.821 mo
149.076 169.866 li
149.175 169.821 li
149.271 169.771 mo
149.175 169.821 li
149.191 169.81 149.228 169.793 149.271 169.771 cv
130.689 169.533 mo
130.842 169.623 131.004 169.704 131.157 169.785 cv
131.004 169.704 130.842 169.623 130.689 169.533 cv
149.364 169.722 mo
149.332 169.74 149.3 169.756 149.271 169.771 cv
149.364 169.722 li
149.387 169.708 mo
149.38 169.713 149.373 169.717 149.364 169.722 cv
149.387 169.708 li
149.409 169.695 mo
149.387 169.708 li
149.393 169.704 149.4 169.699 149.409 169.695 cv
149.697 169.542 mo
149.67 169.56 149.634 169.569 149.607 169.587 cv
149.634 169.569 149.67 169.551 149.697 169.542 cv
150.003 169.362 mo
149.904 169.425 149.805 169.479 149.697 169.542 cv
149.787 169.488 149.895 169.425 150.003 169.362 cv
130.284 169.299 mo
130.374 169.353 li
130.284 169.299 li
150.435 169.092 mo
150.309 169.173 150.174 169.263 150.048 169.344 cv
150.174 169.263 150.309 169.173 150.435 169.092 cv
128.052 167.481 mo
128.187 167.625 li
128.052 167.481 li
153.828 164.709 mo
153.836 164.663 153.843 164.622 153.849 164.584 cv
153.843 164.629 153.836 164.679 153.828 164.736 cv
153.828 164.727 153.828 164.718 153.828 164.709 cv
153.882 164.34 mo
153.876 164.417 153.864 164.49 153.849 164.584 cv
153.871 164.423 153.882 164.34 153.882 164.34 cv
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 450 ]ct
[28.08 0 0 33.12 126.24 260.4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 117 
/H 138 
/M[117 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
kTfous8W)lqtU-is7lQds7lTep%\O[rV6$brV-@;r:g7:q"X_2pE&lHq7lseric46rSRXirNH79ric"0
ric:8o\]V^!$;'Q!$:pMq]>-9r+5[As,[-\q\f?nru(b:ru(e;obm`1r>G6gr>>THr##KGp_is?pETS1
q'5e3rqQKmrq?-^qtC'brV$6cq"FU[o`+:Qr$1qWqnMqJpqQgcriZ=:q7lg1s1eN9rkJ63qnMd\m(`H>
pLX4>q.9==rf@$[p_j)5r<!!:r;us9p]C=1oT/>Vr+5UIqY9n3qtU!es7Z<aqY'pgrq?$YqtTjaoD&:a
r:p48pE'1GqB#OKq;;4UqS2m1rnm@Os0)=7p##AUrSROfr>t]EqAK-@q\f3jrrW$7q?$YWncJ\+s,Zo8
o,7Lfr#,HEpETP0r$27Ar:p$ds7Z?bqY'mf"Sh]aq"XXXqtTmb!;QEcr;Qclqu?Qgs!.7ZqS2qLs8W#3
pYZ"SqnN!2rSIamYHP^UpojS0p>>\\rnde7hnT'GqnN.PpLX1=r+5p.r#,6irrW'8q?$VV";q7B)&`2N
q\f*gq&0*k!#bZp!#b\Ps(1sMq"Oh6p\=L_rUp6dq"FXcr:p*]q=s^a!r2K_r:opaqY:%2q]>OI!$:mL
pYYqQ!5J<4r87Feq60V/pYQ%eYHRl=o\]M[pgsCAr##KGpDN^dr;ls:p]CASr#,;3q&/pf!Z;%@r#,-f
qAK&QoD&4XpAb$`rqQ<hr:g<mq"j^Tq#:9nq#0pcq"=[_q"Pot^]!'dhtsVV^\Qdb^B*6,qQKJ)rnd^j
rNH48p##S[pgrh1p5f1SrW<':q2bFk!KS,p!qI6.NrU'r!ra)1O80[i,Q.?7s8Vlos7uH_s8;Tiq#16m
s8;Zjs8Vlnp?_SQpAXjZs8)Ne*rNeNhuCIkhtb%[hu'\W^\cpd^]**lhnQr*YO'%&YPu</htk+aAc*GD
O8g*tO80[dO8K(Y)>fKm)?#Wr)?'^9)=SOB!ra)0O89al,Q%9/s8)Nbs7c<es8;Zds7?$]q#:!cq"4U`
q"u31^\-L\^\?X[^]!'f^\?XO^]1J;YPl6.htt1dAc!A<O89agO7sOjO8KmiO6[\_!rX#7O84k6)>tfV
q"=[cq#C'fq"as`p]1?iq"Ogeq#C'Xq#:!dq"+Ocq#1!d*r<YEhu1=iYQ)B5htFebhtb%]hu1=iYOTC,
YPu<.htt1eAcEYG)>0'h)?0d<)>T?e)$#`n)>B3j)?0d.)?'^:)=rpd)>tfVq#(0gs8MfmpAapfs6'1O
s8Mfmp&P-`q#:!dq"Og_q#)91^\-L`^](G:^]33S^\?Xb^](D:ht"P]YPu<2htOnaAbm;;O8^$r!rj/<
O8^$^)>B3k)?'[;O7F1f!ra)3O7sOk,Ph-.s8D`lp@7nXrrE)lq"Ogfq#C'fs7uHfpAXjepAXj]s7l?h
pAQ-/^\6R`^](G,^]33d^])"Bhu:CjYQ*MU^\k;7^]1M:^\?X\^AtJ:Abd5;O8Tsq!q@0.O7aCeO8b4>
)?0d<O80[k!ra);!ra)3O8'Rm!raG@q"4Ucq#:!Xq#(0dq"Ogfq#C'fs7lBapAXj^s7uHhpAQ-0^\$F_
^](G-^\m!`^\?Xb^]1M;htXqdYPGC$^\H^^^](G9Abm;:O8^$r!qI6,O7sOdO8^$s!rn>V)>F:4)>K9g
)?'^:,Pq38q"Faeq#C'Yq"k!kq#C-aq#CBhs7ZKmq"Xa`rV$3br;ZTfr:^+2pqQX^rnm^is0)".qVM=g
htXt]huCIkYQ*MT^\c@UYPl66htb%bYPr,.)>9-j)?0d<)>"gCNr^,Zp_ijfru(h<s,ZpmqbR.lr>GNo
q&0)3rZ_F:p\=O`rqQNerqQHcr:p<ep](9eq=sdc!r2Qarr;`fr;6?ao_ACYs!.La!3c.3ptu(cs0)F:
rNH(4q;;50s0)75q;27g^T[XopV6XPqQKP+rNH5Brac'2pDNaerYb_;rYbY9qAK$grrW'8ru(Wn!Z;jW
rf?dkr(m.joGRT/s(20SrV$'^q>^Hh!qu?_r:]s]pAb*bqtU'g!;HQhrq6Enp@e1Ss82iiqtL0bp\=a]
r?M:_rNH%3q;;1d!jAfBr3,q2p>>hPqnN$cs1eQ:!oL2brkJ6Cs3L_KqnE-7pV6^2r>trLr;ud4q2bLm
!WiE@quZ[3p5f.Rq\f9lru(e;!fmBaobda*!`&k!q\]A8pDNr3rFPpPr:^!^qu?]kr:^'cq"XR_rV#pZ
rUp6krq?$[!;lQd!;?6`rV$17r>tm?qS2pbs1eK8r6P/Qp>>hPotUI/!8mdZotLLQpqHg4q7cp5ric8A
rFPm.qAK0kru(_9r(m)*p5f.Robm]0!0@*\obda*p_a&5q&0,4rFPsQs!.RDrq?$[qY'mbq"XI\s7Z6_
p%J@ZrVu6ZrV$.6r#Yn<ric=9pqQ[/rQk8RoABSOpqQL*rP/<gm(`M&r#YcIs8W'"obd`2qZ?^lp_i[a
rrVs5o`G(0rK$:_r;un.r?M:@rq?-^!;?<b!qu?brqQ9`!;?*cs7lWfqY9^VrqQBjo_8F[r:p3`!<<!B
r>tq;ric+3!3c:7!jAfRotLL1p##eas0):6oWS8/qqq%\!3c=8r3$,#r>toKrVuiup_a&5q\]G:!`/J,
!!;nUs,[0trrW$7oE,"0qiC@e!!<'9quQlurFPsQrr;rls7YsW!;lKbrq?'cs7lTerqQKfp%J@ZqYpQj
r;ZZhp\+Xer?M:_rr;r3s0(q,!71ARric%Qs1eQ:qnN!2r3-(6qVM:fr87CdpTOVsr>trLrr;p7rrV[-
!)N;+rW;eSru(e;q\f&.r>>Trqi:^pr/^^mpB(BprFPsQrr;ok!;>gTrVuikrV#pa!;QNdrV6'Zr:p!c
rr;ok!;lQbrr;sBrZ;(=r4`68mD&VWrP/<7p"obarNH17orn;.oABJ\!RItFYQ"S$*r]aMs83`7!ppm(
O8Tsp!qhTS)>sX8)>+(/)=rpe)$!J-!rr9#s8HU0,Q@`Bq#CBjq#C'\q"t*jq#0mdq"Fafq""+[q"FFX
q"4Uaq#C6fpAFsj,QAharrBh6^]33f^]1M1^\cpf^\t>9^\6Rb^[eQ0^TXj;^\$F]^]2XVYPeG#*rfgN
s8Eo9O8Bdr)$0m4)>fKo)>sU:)>9-k)=dh1)$0m9)>'!f)?3M/!rW)uAcF"Ts8Mfis8VlnpA=Ubs7ZKk
q#:!eq"Oggq"j^`s7uBeq!e=^q"Xaas8O>D*rl9>^\Zjf^](G6^\6Obhu1=hYQ)B3huCIfYQ!GTYPl6*
hu1=bci!hC*rfgOs8Eo4O8g*s!rEl.O8Tsq!rj/4O8g*o!re8V!rX#+O8Tsk:]14qAS!+ds8D`hrrDin
pAb$gq"=[aq#C'fq"Ogeq#'jbs7uBeq!e=]q"XaarrXJes8W&4qVM:fric@JrP/$_qnN07s1e<crP/96
!8mh6q60b3nDF/Yps8m<"!2%Rs8<i3NrU's!rl'p)>0'f)?0d<)>B3j)>jR8O8/kU)=W^b)>I#*rrZgW
s8W&mqu?]ks7ZKirV5p_rqQKds7lBhqtL0brV6!Xr;ZNkq=ssdr:p6j!$_Ods8W&4qqqFgs0)IKrP.m[
rkJH9s1e?dqnE-7rP.s-o&'8Xrm1MWrVls@AcMf/)?,]rO8g*t!rl'p)=`de)?'^;)>K9i)#sa:)=mq#
O80[m:])+/rr?X0s8;Zirs&8npA=a^q#:'Ys8MflpAXjbs7lBhpAapYp@J=[q#C6gq#13m,Q@`@^\lsl
^V?tuchtQShtZ+.^\tA8^\m!a^]1M;^[eT"htb%echkKUrr=,>s83c4Ns$=<!`)Vi)=`af)?1TQ!ra)8
O8'Um!rj//!qVKK)?3M0)?'R8AcD`0pAOdbrr`&kpA=^]o)J^ar:^-bo_AFZ!;Q?_rqQHco`+FUqZ$T!
rP/<g"2DUSchbEIhu:CgYOoU/^](D:^\G#3^\tA.hseDWs8N0!)?#Tu)&WKOqAJjbrYbV8nJV<-!#bb;
qZ?a7r;uVPn/;'%!W2Teq#:!_q""Ibq"j^Tq#9sgq"FF[p]1$bq#0p`s6BCTrrLHLqS3$5q7lLXs1eE6
o"Y1-!l(qBrP&?9qnN*5qqp\Rq>UIk!r<f6!r3`)O8g*o!qI6.!Wj5@!rWu:!rEl6!rJ&Q)>"gBrrW)k
pAF^apA+LTs8Vldp@n@[pAXjds8)Nip?25Mq"apkc`aPM^\tA3^[p@_^\"`(^\k;7^]*-e^](Ft^\[s4
s%`[tr#,G7q&/dbru(G1pDNl1rYb]rqAK86j;Idns82fh!;QQerq?!ZqZ$Tjnb2bQrV$6cqu?Thrq>[Q
rVuikqZ$TAriZ=:qlfk2qnN!bs1e*-pqQd2rkJ?fr4i67lbEDUrP/4/s%iUq!#bY8oGRUgrf@'snH/J'
r;us9qiCXmrW;C'rK$mpqZ$QlrUp<fq"F=SrV$0aqtBaWq"Xg]rqQ?irV6Bcm.gJXr:p3irm1PH!l)LR
o=t7-r4hd*!3c14rNH48qVV7drib\'qqq=dr;Zalr;m$<)$9CIr;um7n,iA&r;us9qN(RmrW;F(qiCXm
rVuinrV6?kp%\FXrV5jTrqQBaqtU0jrVuikqtBj\q=Xg`qZ$Hfrr;rCrP/<gotUC-rP.g)rkJ?6qnN!b
rP/B9rNH%3q6'e5qVV1brr;pmr>GQpobmW.r>G&*rYbS7q\f6kr>GJ6q\fDOq#UO6qN(Lkrr<#qr:p0h
p\=RXrqPpT!;QEarV60fr:p-^rqQ3\q>^?err<#Er4i-dpV6O-rkIm)!5JB6rP/-br4i*3rkJ01q;;4e
rP/@3s%iP1qiCIhq#^O5mK*A+q?$U5plG=jq?$X6p&b&Nq\fD5!rMcfrV69iq"=^_q"=^_jnAZJq#C9e
qXspaq=ag_p](-crr2uEqnN$cpoa\4poa\4jfeWtptu"aqQBn6q60e4pYYk_rr2soq\f9lp]:F5p]:F5
jT>AuplG=jq>pX7q#^O5pQ,1hrVuciq>]pWr:^0clh:>QpAb*do(N(XpAb'crVuc0q;:J@s1eQ:m]ZW)
p>>h`nur&-p>>e_rVua4q2aeBru(G1p]CF4p5f.incJe.p5f+hrr;ljp](6fo(E(YrUp6dp%J=YqtC$a
p](0doCi4Zp&Fsbrr;l1pYYtbnui&.rN?49orn;.qlg"6qVV;0r4hj,s1e6ar4i72q\f-hrYb8.!#b_:
!#bG2r#,A5rYbHkr#,M9o`G.2ooK"grr;ljp](6fiqE9Eq=ag_r:^*hqtU$]!;QKcs7lBhq=sshqnE-g
ptu(ciii6oq60e4r3-(VqnN!2!5JH8s1e?dq7lq/q\f-h!#beSiWAupq#^O5quZhXq\f53!#b\9ru(Tm
q&023qY9gbs7lQds7lWfo(M_Nq=ag_q=aXZq=Xg`r:U-cq#C0brr;i0pYZ"crNH79orn:soY:4*rkJ94
q7la/!5JH8!5J<dq7lq/qAK$gru(b:ru(;-r#,;Jq#^O5q#^@0q#UO6quQj9plG4grr;cgq>^KirV$9d
q"F[]rV#pZrq>gSqY9XT!;QEjqtU0arr;c.q;;4erNH79pojY2rNGn/oWS(oqS2U)!5JBfqnN-6rr;a2
q2bOnr<!!:p]CC3r;uX0liR2)r#,&,!#bWoq\fA7![IaFrq?3`qZ$Tjrq??ds7ZHes7Z<arq?Bequ?Wi
oCi4ZqtBs_qtC'`rV6?bs7lNlqtU-`!ZqCAric15qVV=fric=9s0)F:s0):6ric@:qqq@eo<82/qlfq4
q60b3rNH79r87CdrN?96s8W'"qAK-jru(e;rYb_;rYb_;qAK86ru(]pr>G2.ru(\8r#,;3r>GP8ru(`q
rYb\Qr;ltDrr;rjqtU*hs7lQds7lWfo_AFZ!;Q?hs7l<]qY:!^rqQ<_qtU-`pA"X\"TK]ms8N*!rNH+5
r87OhrNH79s0)(0riZ=:ptu+dp94>-r3-+7q60\1rNGq0riZD'*p<P&r;um7!#b]qru(b:ru(h<oGRW0
!#bQmru(M3qAK24rYbM5q\f>6p)3i2!rlhVr;Zfjp%\O[s7lTerqQEkqtU0a!;Q?hs7l<]q=sp^rqQNe
p%\FXq"P$dpAZ?^HMmgCYP#[0YQ)B:YPu<:hu;O1^](D:^\H^d^\4l,^\tA8^]1M1^\b50^BLgEruN6E
r;Zcuobm`1ru(e;rYbWpq\]A8!WiE@plGFmp&b%-r;us9rrVj2qZ?O1"p+l+AS$*2r;Zfjq"Xg]rqQKd
rqQBjr:p9b!;QEjrr2unq"FFVqY'p`rVuciqY'd\rq6Kp,9qLUr;Zf#pqQd2rkJH9rkJ?fr4i67!5J9c
!5JE7ric%1qQKn5rSRLeqQKb1riZJ)*ZjKUr;Zcup_j#3rYb\:rYbTor#,J8!#bNl!#bP5qAK5Lq?$X6
rK$gnq?$L2rW36&AS$+2r;ZciqY:!^s7lQdrqQ?irV6Bcs7lBhs7lQdnbE%UrqQBjqtU'^qtU0a!<<$C
s*FVCric15r3-.8rNH48qVV7dric@:ptu+drNGb+r3-+7qqhCgr4i-4qnN-6!<<$>s6'=[rW;p6quZm9
r;us9qN(RmrW<*;plGFmr;uL,quZj8qiCUlquQj"q\fA7!<<%0!dJtVr;Zcir:p0_q=sdcr:g?eq"XU`
s7lWfrV66hq=sp^rqQ?ir:p-^rV6?b!<<$C!d]1Zr;Zc"r4i-4q7la_r4`<:^VBO#s1eT;rP/3dq7lm3
rkJ<er4i*3rP/<7!<<$>!pAbCrr<#urW<!8qZ?R2q2bFk!Wj5WpQ,=lrrW-:qN(Fir;us9qN(Olq?$U5
r;m!!rac1VGlI(.s8DZiq"j^]q"Xmeq#C']s8VlopAXj]s8)NipAXj`s8;Z_p&Oaa,6N7<rp9U`rNH17
qQKn5rkJ6cr4i98p>>nbs0)F:pYYh^ric=9qVV4cnui%1rZ21)kPk>Vs8<#t)>XF3)>]EoO8Kmq!qq]T
)?0d;)>B3g)?'^:)>]El)=dh/"9)j6G^05SrVuE]r:p$drV6Bcp\t6grq??dpAb!arV$'er:p6as82Wc
!V5m^,6N7<rp9U`nZVl*pYYqaric(R!5JN:rkJ0aqS3!4q;;+brNH7Iq6'hmD>kRYkNDj@rVuBhr#,6i
r>GS9pQ#:lrW<':rf?l9qAK55q2bFkr<!!pq#UTk"9)m2GQIfrrVu`frqlZfs82cipAb*ds7Z0drq?<c
p](9gqY:'`qZ$Kgrq?<fqt:*ko^r,-rd"VE@f??'YPulHYQ)rI^\6R`^]1M2hu9hX^\?X\^](G5hu(7g
YPlfEY6+`@D>kUUk5kParVu]qr_NIos%iS2p5f.irrVnTrW<$9pQ,(erW;qWr#,J8rD3:l!ri?)ral(R
!rgj'rVufhpA=g`p](0d!;?-drq?9bp&Fj_s7Z9grV6EdrVHTprq?Blrq-17rd"YF@bgq^r3-%Eqp55U
pYYn`!3c+Rric77p##S[s0)7UrP/B9rQbKDricA%rb_WUroX@^"7,pcquZRfr>G?jr##J9p5f1Sr#,0g
q&026q2bIlrrW-p!<<$"s8W'#ral(R"9.N8f_b^?qtp0crrDikq"FaepAOdWs7uHcs8;ZlpAb$es8MZh
,Q;ukrb:.squ?96qnN$cqS3!dqVV:UrP.p\q7la_r4i98s3LTBrb_TTroXC_"7$'ds79%`)>fKk)>9-j
!rX#-O80[hO8Kmq!rl'ns8E-!Ac?oWrr2'4f_b^?qu$6es7uH`rrDciq"t*es7lBbs82Qkqtg<po^q_H
r?M;f"TJDf@Uf67o?[?Lr87=bp>5kRqnMa[s1eEFq;;(a!71NA")VoKD>bOTk61e`mfN[hs79%a)>oQk
)>9*k!rEl,O8'UlO8P(9)$!J/rrW?*pB1A*rceMDroX44qZ$6c!r2K_rqQKmpA"F_qY9[^p\=[dqY1'c
qZ$Qe!V5m],Q;ujrr2<a@f$,tcN:kbYPu<9htFh[htk+ZhtOn`htb%`s8Qp;D>%iF*rb=(rr2Bc"8`&j
:BDC8!ra):O7jIdO89acO7sOiO80[is8E*$pB1A*rcePEroWGDf_YX@qu?BYq"k$dq"4U[q#(0fq"t*i
oE"OTr?M;f"9/;eC&VT@s8Dujci:3;^\Zj`^\$FW^\m!b^\e'0D#s?Ir>tt$!ri2fr<)orqbR)brrVX,
qN(FioT/\`r/^Xkqu?Ts!VZ]pAc?oWrr2-Dkl061s7Z<kpA"FQq"k$]q"t*aq#CBhq"t'ko)&(X,Q;ul
rr-X!C&VT;s7Xb=YP#[-^\ZjY^\cp]^]33d^\e$2pA8_**rb=)rr*#gr<)lqp.kYimhu(brf?UfqiCCf
s,Zpmqu6ZjqZHe.rHJSHkiV*mf\"dMs7cEeq"k$gq#16fq"XX_s6BCWrrV0Mo)&(X,Q2onrb:b6BjtQ,
q#C*7qS2mar4i3fn%Sk[rnm"Ur;Qi[p@eB#r>tq#!r`;jr<!&cq#C(aqAK-jr#,Homhu(bqAJf@r;Qii
p\4OerFPqP!rhEGroa@7rmplEq>10cr:p*fh"^mGq=jsbq#:?QrposYr?M8e!rcp$rb2@ArnR;Kq9K&E
r4i'bgqWj7pqQV(!9O4Rqec9QrT=7]"7Q0jrp0@Zq+gtlr#,<kg_p)ep_il,!;$3aqZHe.rHJDCkiVj-
rRU`CqtpEerqQ6fn+cqVrVQ?aqtp6bq>^KTrUTmYr$2/d!WHd5mJUbth"UjGci:3J^\?XS^]1M9chG3O
chbEPs8Q[/pAAe**rY7'rWDWf"9%Ncs7lWk:]CLq)>B3\)?0d::\Pb(:\kt)s8N3"p\Y-kAc6iTrr2'Y
kl9fEec=@trrE)tqu?Bhq"OgUq#($bq"agbq"apkj5]e1o)A7^o(;i)rH\PErpBYus6]g@!+P^&rQkMI
rkJ3bmD&SFq7laOr4i(-!bGq[rV$5-!VUC.*rY7'rr2Bb"97ihlMq%]s8>an!ra)3O6mh_:\bn(:])++
s8E-!p\k6qpB1>)rHJDCroX1CroX73rn-rE!;lchs7lBhp\4ag!<;ihr;6<bq>10lrqQ?is5X+NrUTs[
!V5m\,Q2oirr2<`C&[N"h#:dVrrCCEYQ)B4htOnchtXtachY?OcN+"E^\\!1Ac?QFpASn0p20^KrT=7]
rpTdfrpTmQrWDlo!)NRqru(TmpDO!lp_j!*r#,JOq+h"jrYbS4qucolrW<2q"8la/GlRd@kksT@f_>FG
pAXjcs8Vlns7c<ds82Tfqtp0dqu?]jrrV0>j8JWLo)81]o(;i)rHeMCr+Z)rr*oF#s0)F:rSRXirnmIb
r87CdqTo&Rr6P'9!p+!)rGDQ-rG;T/D>YIRkPtP[!rrH$n,*:^s8N0")?#Wr)?,]k)>oQm)>[/+)>m;'
rrDZf"9/&n!s/,ur+5eN!rhEGroj:B!9jF7rn.&H!;>aRqZ$KgoDA1[ro!k;qt0mYqt0e2r-AGDC$kn6
r9XJuqdTF%!WT@h^\Zjc^[oeDs8M*[Ac$?DpA8_)*rP1&rWDWg"8qWa"8Vrs!r3`*)>]El)=pYrs8MWd
"9/&l"8la.GQRm.k5FNBk5OTCf`'k,s6oa^q"asfq"O[Vs8CmVo(r"Xo)&(W,Q)ihrb:cuC&RGuC&MN?
jno)E^\Zgfhu(7`cgq,7jT,#ND>s8+D>YIQk5tVbn,3@en+m.coDARS)>T?k)?!A.:\+Pao)SO]"9/&l
"8la/GQVRWkiVj-rT=%As4I8.qu?Qgs8Vlhq#C6drqlEhq>^KTro*kIqXjdXr:Kk2rH\QWrb:cuC&RGs
C&_Z?jno)T^]4?/^\H^`^])RIs8Q[0jo4uMD>s8,D>PCQk6&Es"7Q0jrU9Rbr:Bgcq\fG6p_ijfq\fB/
mf3:hrq$-`r<*$$rqH<mqdo_N"(qQ3k5FNBk5+9Ao)%DGj7`NKq"Ogeq!J+ZirJ'9o)&(Xo)81\o_Tm3
H37aXrpBYurU'Gq!;?<Os(1p(q7l[]rP.b"r+,lir:^#)rV$/+q]>b""R!JtrpTdfrU9Rb!;HB^rr_up
q&/pfr>G#&quZrjr:g'jrV-3lqdobO"D29FroX1C!9X:CqWRqLrSd\7pAb-cs7l?grqQ!_qW%VJqssXV
rUTs[!V5m[,Q;ulAS(l?mJUbtmJ:PrpAO+NAbQ0'YQ)B3hu:C[s8$=,D>X&(D>j2-D#s?Iq]>b""MMMJ
rpTdfrU9RbrqHB_rWE0&pAb*nru(QlrYb5*p]LEfqZHfkrW<2q"8c[/GQ_Vjrr2'YkksT?kkjoNiV;F5
iVrlVs8M`lq"Xmgq"+OaiV_a8o_S.Uo_n@[oE"OTq]l)d"D)0DrpBYur9aAqqt:$OpgjHequ?Z!s1eTk
qVV:eoDedNr+5kEqY'f'rV$5-!VUC-*rb=*]tOFEn,3@dn,!4apAjg[!s%ris8E*")>K9l)>!n,oD&Lb
p\P'kp\k6qpB1;(s*4KS!<2o[r9!k>qssdZqW%G2s7ZHerVull!<<#mqZ$QTq;D>6qXjXTqt0mYrU^-]
o_Tm5HMqCTrqpL.mJ:PopA]"+AbtNgYPu<8hu:@jhu1=ds8HU*jT/q0qec3'qec?+rG;T/D>PCSkP`'o
rqllrn+m.`p\4jeoD\mk)?#Wq)$#`r)>aC4"8VQa"9%unp\P'lp\b0ppB1;(s*4KS!rhEGroj:BqWRhI
qt0mJq;Li<!9*b6r8IYGq=OOSqt'mZs76'Zq]l,erFH'0C$kn6r9a>pqtBo(rakoen@ntbq.9Kcrq?/)
qY'f'rq?5+ruV+[s6'?o!r`;jrWE)eq?-Whp]L?`n/25tq#gQdrqH3jqY0jhrqH9lqdfbPr+6$0kiVm.
r9!k>qssOSs76'G!9<nM!9*eL!9*b6q==@RqXXOUrposYq]c)er+,s/C$kn6rTsUPqJ#j#phg')qrIfh
q7cpkqS*$lq.9Bqq/-!%qec?+qec3O!9a9n!r`;jrWE)eq?-clrV-'hs7cE^!!E$7!;$%)!;$!gq=j[e
qY0jhrqH9lqdfbPr+6$0roX4Dr9!k>qssXVrq-$Wrq-6Ns7lWSs5EkM!:osXq==@RqXXOUrpp!ZqBGud
r+,s/rpB]!r9a>pqtBf%qXsp_rb_[Hs1eSFs5j-m!;?5*q=aW$qY'f'rq?8,qAoY"r4N12rpTggr9sIa
qtKjfq=jdhru(h=s7?+*!;H9kq=j[eqY0jhrqH<mqITP9!ri2]rTO4BqWReHq=OLRq"4RVrqQK`!;--[
q==@RqXXRVrUTmYqBPlK!ri2drFu5tqJ#g"q/,s$phg$(rkJI+q/--)r:]r'qY'i(rV$/+qB#OI!ri2f
r<*#eq?-Tgq#gHep]LNirYb_0q#gHequcp#qY0mirV-3lqITP9!ri2]rTO4BqWReHq=OLRq"4@Pq=OLR
q=OOSr:KsYrq$6^o_Kg0AHVr2m:lQ6rU'GqqY'`%q=aT#q"FN#q=aW$qY'i(rV$5-!VUC,*rEVPrr2Bb
"9%]f"8r>up\=pep\4jcp\=pep\=pfp\Y-lp\k6qpB18'qITa,r94+AqWRhI!:osXq===Qq""7Qq==@R
qssXVrUTs[!V5mZ,PksOrqpL/mJ:PnpA&P*pA4LXD><i#D>Eo$D>X&(D>j2-D#s?IqB#LH!<2lurU9Rb
qY0dfq=jjjqZHWfq#gHeq#gNgqZHfkrW<2q"8ZU*Achtqk5OTBk54B=o(hqRo(_kUo)/(So_J(Ro_\4V
o`"F[oE"OTqBPiJ!rcp$rb;;tqe>p#q/,s$phfg"r,)FMq=aW$qtBo(rq?;-!VUC,*r<POrWDWg"8qWb
"8_cf"8V]d"8MWd"8_`lp\=pgp\P'lp\b0ppB18'qITg.kiVm.r9!n?qXX[Yp](3_q"4@Pq=OLRq=F[X
r:9aWrposYqBPiJ!rcp$rb;;tqe>p#s)%McrV$#'q"FN#q=aW$qtBr)!,_`/qec0NqRlt0"7Q3kr9sLb
qY1!lpTFJhp]L<cq#gHeq#gNgqZHilqZH\+rVuk/!rhEGroj:Bqre(Qo'HDOo_J(Qo_J(Ro_\4Vo`"FY
o_Kg3g]6./AHMjFmJ^htmJCSuD>*>Ophfj#phfj#q/-$&qec?+qec0NrN?.5!r`;jrWE)eq?$`lm&p*c
q=jXdq=j[eqtKsirqH9lqITC#s60CCs60I^kl:JNq===Qq==@RqssXVrpp!Zq'5Ugs(VDus(V,\o%a%X
q=aT#q=aW$qtBo(rq?8,q&]74rr`2frr_Phr3#htq=jXdq=j[eqtKsirqH<mq.7tRr:L!\q===QqXXIS
qXXOUrpp!Zq'4;Bq/-!%!;?2)qY'`%qY'f'rq?8,q&[qdq#gHep]LBeq#gKfqZHilqucb+dJs%7q===Q
qXXXXr:KjVr:KsYrq$6^o_B`Zh"bg_p@rM$pA&S'pAajaD>j2-D#s?Iq&[qdq#gHep]LBeq#gKfqucrm
!;HHp!VZ]lA^UPRo_J(Qo_S.So_S.Vo_n@[oE"OTr?M7cdG4P7q=aT#qY'`%qY'i(rV$5-!VUC+*rE+l
Y5&1qp\4jep\=pfp\Y-lp\k6qpB15&nc.VKq"4CQq"4FRq=OOSr:KsYr:Ke0kM5FZphfj#phfm$q/-!%
r,)E+r,)6Nh6-ISp]L?dp]LBeq#gKfqucolqucb+e,KF=q"4CQq"4FRq=OOSr:L!Zqt0\/e(arsphfj#
phfm$q/-!%r,)H,qec-Me#i]Fp]L?drr`*"qY0dfqY0mirqH9lq.8(Us75sWq===Qrpp$Yq=OOSr:L!Z
r:Kb/eD1)tphfj#phfm$qec@MqY'i(rq?8,p`@qfs7c9jq=jXdqY0dfqY0mirqH<mpgs4"i;`cHq"4CQ
q"4FRq=OOSr:L!Zr:Kb/mG.!^rV$#'q=aT#qY'`%qY'i(rq?8,p`AIuoWJ/ep]L?dp]LBeq#gKfqucrm
quc_*g&D'PqssOSq===QqXXISqssXVrpp!Zp`nGHqtC#+qec0&phfm$q/-$&qec?+r,)3MfWP,Gp]LKh
rV-'hqY0dfqtKsirqH<mpgr1Z!;--Yq"4CQqt0p\q==@RqssXVrpp'\!V5mX,MLoQD>Nu$D>Eo$D>Eo$
D>X&(D>s8.D#s?Ip`A.l!!E)lp]L?dq#gHeq#gZkrV-0krqHBo!VZ]kA_mCbo_S.Ro_J(Ro_J(Ro_\4W
oDnI]o)A7^o(;]%h;%sGqY']$q=aW$q=aW$qtBr)rV$5-"86RQ*r6r6Y5JJ!p\4jdp\=pep\=pgp\Y-l
p\k6qpB12%rr;$YqXjXTq"4CQq=OLRq=ORTr:KsYr:Kb/o\AihqJH*&phfj#q/,s$q/-$&r,)E+r,)3M
lE9laq?-Tgp]L?dq#gHeq#gNgqucolquc_*jT#5M!;--[qXXFRq==@Rq==CSqXXRVrposYp`nkTrq?/)
rq?<aphfj#q/,s$qJH*&r,)H,qec*LjKALVq#gKfqZHg"q=j[eq=j^fqY0mirqH9lpgr^is60LFrUTdV
q==@RqXOXWq=OLRqXjXTr:L!Zr:K_.l.l;Qs6]dYq/,s$q/,s$q/$-*qY'c&qY'i(rq?8,pE&S%rr`;i
rV-*iq=j[eq=j[eq=jjjr<)ojqucrmquc\)mf*:Lqrn(BrUTdVq==@Rq==@Rq==CSqsjaXr:L!Zr:K_.
mb@g0qe?)trV$&(q=aW$q=aW$q=aZ%qY'i(rq6>/rGD9Mm]HQYqZHlerV-*iq=j[eq=j[eq=j^fqY0mi
rqH<mqdo_;o)JXMqrn(BrUTdVq==@Rq==@Rq==CSqXXRVrpp!ZpETRjptYf7qe?)trV$&(q=aW$q=aW$
q=aZ%qY'i(rq?8,pE&n.!:TmTqZHlerV-*iq=j[eq=j[eq=j^fqY0mirqH<mpLX$troj:Bqrn%ArpomW
q==@Rq==@Rq==CSqXXRVrpp'\!V5mW,PBjkC&IAqC&[N!pAJk,D>Eo$D>Eo$D>Eo%D>Nu(D>s8.D#s?I
pE'"1rWE)eqZHidrqH3jqtL-bq#gHeq#gHeq?-TgqucrmrW<2q"8?C$rrhQLk32%,k54BAk5OrIo_J(R
o_J(Ro_S.So_S.Vo`"F\oE"OTpETFf"DMT;BkdM4qe?&srq?/)q=aW$q=ai*qec3'q/-!%r,)H,rbV]0
D>,+GXonh/mfN[in,!4dn,E(W"8V]e"8V]e"9%unp\=pfp\Y-mp\k6qpB1/$q>UYPK]qX^kihs,qWRtA
rUTgWq==@Rq==@RqXXLT!;--YrUg'Zr:K_.q:l18O(i=qBkdM4qJ#usrV$))q=aW$q=aW$qY'`%qY'l)
rV$/+pE'.5s7?Er"7H<or9sIas6op\q?-Qfq#gHeq#gKfq#gKfr<*#mquc\)qu?VJ"R,(3kihs,qWRq@
rpopXq==@Rq==@RqXXISqXXUWrposYpETRjrJq(qC$fVKr9a>prpB^YqJH'%q/,s$q/-!%q/-!%rGDQ-
qec'Kql]ni"9Sbp!sAJiq?-`crqH6kq=j[eq=j[eqY0dfqY0pjrqH9lpLX4$rIb::k32%,k5+<@k5OrJ
o_J(Xo_\:Vo(hqSo(hqTo)/.Zo)/.R,Pp3oNrs+`BkdM4qJ#rrrq?2*q=aW$rV$3`q/-!%q/-$&r,)H,
r,)-KqQBeh!s@uo"8qWa"9.cgp\G!fp\=pep\P'm"8_cf"8hij"9/&m"86=$rrn(/kiV*mqr[e>roX4N
qXjUSq=OLRq=OOS!;--[qss[Wrpp!Zp*9@f"cn^Ym:g;3mJCVsmJchUD>Eo$D>Eo$D>Nu%D>s8.pAAe,
pAAe$*r)lAo^i7S!sAGhqZHidrqH6kq=j[eq=j[eqY0dfqtL!js7ZNfqucY(pAb'Sr9!n?roX4NqXjUS
q=OLRq=OOSq=ORTr:L!Zr:Kq4qBP^hr+Z)rqe?&srq?2*q=aW$q=aW$qY'`%qtBr)rq?8,p)a49q6'Vt
r9sLbrpTj\q?-Qfq#gHeq#gKfq#gNgqucrmqucY(o`#!mkihs,qrn"@s76!XqXXISq==@RqXXISqss[W
rpp'\!V5mV,P0^jC&IAuC&McEmJlnUD>Nu%D>Eo$D>Nu%D>X&)D>s8.D#s?Ip)`h.rr`2fqZHfcs7c<k
qY0dfq=j[eqY0dfqtL!jrqHBo!VZ]iAb#fuk54B@k5Y#Jo`+L[o(hqRo(hqSo(r"To)/.Zo)A7^o(;W#
n_F'0qe?#rs7Z8*qY'i(rb_K)q/-!%qJH*&r,)H,rbV]0D>#%@Y5Ibc"9%]gp\=pfp\=pfpAjs`"8_cg
"8_ci"9/&o!s/,up1<^mroX+Ar8n"Mq=OOSq=OLRq=F[XqssUUqXXRVrpp!Zp*9%]rpBSsr9XLXq/-!%
q/,s$q/-!%rGDONqY'i(rq?8,p)`\*rpT^dr9jX[q#gKfq#gHeq#gKfq?-TgqucrmqucY(m/QtHr8n"M
q=OOSq=OLRq=OOSqXjXTrUg'Zs7H?`ocrhYqe>uq!;?5*qY'`%q=aW$qY'c&qY'l)rV$2,q&]JUm&p3f
r9jX[q#gKfq#gHeq#gKfq?-Tgr<*#mr<)_(qu?0cr94+A!:osXqXXISq==@RqXXLTqXXUWrpp!Zocs"^
qV;!_rTsUYq/-!%q/,s$q/-!%qJH*&rGDQ-r,)*JlE:*grr`5g!;H9kqY0dfq=j[eqY0ggqY0pjrqH<m
ok!=ds60CCrq--\qXXISq==@RqXXLTqXXUWrpp!ZocrYTs(VDuq/-''s7Z8*q=aW$qY'c&qY'l)rq?8,
ocE;!rr`2fq#gKfq#gHeq#gKfq?-Tgr<*&nqucV'jT#2@q=OOSq=OLRs7H3\qXXLTqXXUWrpp!ZocrPQ
rU'DtqY'`%q=aW$rV$6aqJH*&rGDQ-r,)*JjKAIMq#gKfq#gHeq#gKfq?-Tgr<*&nqucV'iVrr@o(r"T
o(hqRo(hqSo(r"To)84[o)A7^o(;T"pY>)i!U]UWD>Nu%D>Eo$D>Nu&D>Nu)D>s8.D#s?IocEM'or\>a
p\G!gp\=pep\=pfp\G!gp\b3np\k6qpB1)"j8])XqXjXTq=OLRq=OOSqXjXTrUg*[r:KY,hq\*G!,_T+
q/,s$q/-!%qJH*&rGDQ-r,)*JhlceXqY1!lqZHZgq#gKfq?-Tgr<*&nqucV'g].9FqXXISrUTpXqXjXT
q=ORTr:L!Zr:KY,gYDdFqY'`%q=a]&!,_T+q/-$&r,)H,r,)*JgTLMXqY0dfq=j^fqY1!lqZH`iqucrm
qucV'f`1g=q=OLRrq,j_qt0jXs76*[rpp$[oHW#DqY'`%q=af)o\B=\qtBr)rq?;-oH)YfqY0dfq=jjj
oWJ&nqtL!jrqH?nqdoV8eGoO=q=OXVli6qUqss^Xrpp!ZoHX@jfA-B!q/-*(leMGUqtBu*rq?8,oH*Y-
iNE1Sq#gTil`U0gqtL$krqH<moO[=f`W,u1qXXUWrpp!ZoHW;LceSP;qY'l)rq?8,oH)Sdfrk>WqY0pj
rqH<moOZ8HiW&cFrUg*[r:KV+_VFJ4qY'l)rq?8,oH(NFore/cr<*&nqucS&Y5eM$qss^Xrpp'\!V5mT
,HKVsp&Jt/D>s8.D#s?IoH('9qtL$krqHBo!;?HqoOY*'qss^Xrpp!Zp`o_^X5*UGrGDQ-r,)'Iql[3,
qtL$krqH<moO[Rm]Dqd!rUg*[r:KY,!+tEL`SC@arGDQ-r,)*J!+juhc`[0>r<*&nqucV'!56k]g&Ls?
rUg*[rUfb-s(9C.j4sP*rGDQ-rGD3Ks(/sJmB6?\r<*&nr<)_(s1Pi?p](-]rUg-\r:K\-rar4dqtBu*
s7ZA-p)a3EX02?or<*)oqucY(rk8(+\,QI#qss^Xrpp!ZpETWKmG,P5!,_W,rGDQ-r,)0LrFP#lbH:gI
qtL$krqH<mpLX<:g&K_)rUg!XrUg*[r:Kb/r+=:1inXKLqtBu*rq?8,p`B?E`NJR1r<)rkr<*&nquc_*
r4T`Br;ZceqXj[UrUg*[rq$6^o_Ba/B"$LopA]"-D>X&*D>s8.D#s?Iq&]EE[]]W(q?-Zi!;HEorqHBo
!VZ]lAc'0Ps8)<_o_\4Xo`"F]o`"LZ,Pl#`h"pa@D>X&*D>s8,D>G=MA\,&@p\G!hp\b3np\Y-iAbs+>
s5s@]k2-.:o_S.To_\4Xo`"FZo_Tm/B(XmJh#Hcuh#2*dpA/Y'pAJk-pAAe)*r0C4Y55=$n(t5G"8_cg
"8hik"9/&m"8c[*^#Atkk5XTBkii'Co_\4Uo_S.Wo`"F[o_Tm.B&VPEmJUbth!EhmD>X&'D>Nu)D>s8-
D>PCLA`9fkn,3@[Y4f$p"8hih"8_cj"9/&n"8c[)^#/hik54?Bo`"FOs8VWio(r"Uo(r"Uo)/.Zo)84X
,PYm.g]6a=B`N#Lp@6r;pA/Y+pAO^]D>X&)D>s8-D>PCLA`'Wjn+m.cp[PEcp\G!hp\P$m"8hij"9/&n
"8c[)^"iYckkaiMo_JOao(r"Uo(r"Uo)A:]o`+L[o_]s.B&)2>C&7N'D>DuapA/Y'pA/Y'pAAe-pAAb-
*rR/SA_aHd"8_`l"8T+sp\G!hp\G!hp\Y-np\Y-kAc'1>^"WMckkalGo_\4To_\4Uo_\4Xo`"FZo_g$.
B)CBAh#;$apA&S&pA&S&pA/Y'pAJk-pAAe+*qj18Y3N1h"8_cf"8hig"8hih"8hik"9/&m"8ug)^$#Fc
rrD3Yo(hqVo(N+]o(r"Uo)84[o)/.Z,P>[)h##k,mJHVQD>j2%h#-mBD>X&*D>s8,D>kULA_4'bn,E(\
p\=pip\(cfp\G!hp\b3np\Y-mAbEads8DNcoDnpYrrDWdo_\4Xo`"FZo`$0.B%5W7pA8_#h"TS(pA/Y'
pAJk-pAAe-*qX$nY5S+l"73/jp\G!hp\b3np\Y-nAb<[`rrVc`o]?,No`+L\o)84[o)84\,P,Npg]I1d
D<9RND>X&*D>s8-D>t[KAbW@^Xoe>""6H]`"8hik"9/&n"92s(^$Yj=s8DTeo)84[o)81\,P#I,gs=dS
D>X&*D>s8-D#bXJA_F6>Y5JJ"p\b3np\b0oAb*O\s5O(Xo_e:Xo`"F[o^QP4h!EhqD>a,*D>s8-D=M2L
Y4f$t"8qok"9/&n"7a(0rrE)uo_e:Xo`+L[o^QOth#;0gp&Jt.D?'>-D=M2AY5SP$p\Y-np\b0o"7a(0
s8DTfo)/.[o)/.TB)6,Eh#2*fpAAe-pAAdtAcAj>Y5JJ#p\Y-np\Y-`^%D?>s8;Neo)84[o)A:]o'p>W
gr\@LD>a,+D>s8.D?'>"A`0`?Y5AD"p\b3np\k9pp[PrJs53kRo_\4Xo`"F\oDnIOB$B&ph"tscpAJk-
pASn/p@)Y1Y4Jgn"8hik"9/&o!s&)b]t"(Bs8MTdo_\4Xo`"F\oDnIOB"-RppA8_(pAJk-pASn/p@)Y&
Y5\1m"8hik"9/&o!s&)b]t+1@o)&(Wo)/.Zo)A:[B(KWFh#-mCD>a,*D>s8.D=_?;A\"uAp\P'jp\Y-m
p\k9`^&.iGs8)<`o_e:Xo`"C_o]Yr9B(=["h"paAD>a,*D>s51D/!kUA`p5HY57ni"8qok"9/&o"7NpR
~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (2004.i032.014.P.m005.c33.isometric online cinema set-06.eps)
%%CreationDate: 12/21/2020 1:10 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X+]fC8Z_YA=/j;b/$]d>U+4_3I8.&0SXt@1.%Y/]T0jm"ac5^ZV+)<SLXB:"Ekr/Z]h\.ArLMaU8K%YLfl,R[8<gYP!jN
%WgQka.QkVYV.E[ZSc/B)_SYouZ.hhOAsm@QJnA.+iVaPUPh!$CdAumXDR4]>p*ssX;t0'Y]<e(Xr,S6o"6U<b319MY^$bjCjQfS&
%)Z&N<os8\@mZtP0_s(clX?qp3)0LDaJR1#1I\q;[CpsF>-Z6C$.tb)=I,T;t+.X$JZPrb?[\9'(Hn[Ft9I$lg]Ysm"*Vdl7q(643
%9A"S/_+dA-/G`ag.YA6i2K7s!($rguo\h8-qcI+R<VW4+QGH:c7ncI%<:$CEfLJdDoW]+\k4$3k@<&P9(9Yn=_`fuq@NWm;"$bFI
%6L&&i+5e?eUP4,<"#)KLGaO3D#F!%n!Zt.S5))Zd0Z$"#f/5Y$2ET@-#hI!qZbMQ0C-!<``T4qK85dq:[:gXK7o=k%`!\0nJKk>?
%lD%i*,d\H;=V"W<j+;5Y(6W!G+;qCt@6+qq(l1&DbqrXus+fsjO^oqNY:ILPW$#Z?RHS%4&ecsO)t4@aL8dEIYpojdDdX)U%t")%
%#+u@P"F(3*Y_Pej#nhg%%rmpK"iN_1n,qI"M*rGM(F5:Y,&ZBiE*3H^M&?oV699*T_sr#.Kd'[%Lf%UU:kW[j&Ls+bia<s-Y_+E-
%!$,$,6?KH)LQ*]!+^n)P!%h):OFIRQLC7"*A3j+TJe)T=Kqu?M$i$BKj8785q,/09!L+<\E0<ID1_9`B[gg,Bh%\ccJ^]eSO9ZO>
%*+B_(35YkQ&t]PCeO'C@JfM"DTA,M$1GT;L*!'7L)N$J@!b$]mH0V)dHJ>7P&[@FdM=TW[P<^EZ5A:lg4V7u2qLfpl>nqeW2e!GX
%LTTgV0qpF#$.pho(AiXC,!/WoN6q.J4r,(2AP:C2\e$n0MF[jfJM,Yl^B9K>3flYc."r7jq$'^jV(p[k(cQMT%mu^&kX"bSl!]a#
%O7\N_^^(d7I`3'cLr'@*c3AF]Q'MT&7s6VD^h/'4;[BM/OC8ZXfGMc6m9<gog*oH]!;3Qe=;WbIdR+YhoI"-X%-g/ODAu+uD*XH'
%ZO)g1l%2##HPJ$508[mh!6t[OOGb#,Y&8rWpgZs`!?FKZl9a%#Ma!elYOn@G1XZ@_`J@p]O)52P8"C(p3d!1:mO%;[lb+3=/\_\!
%d>Tcu2hi)N6gPF(+nAI"OkGVjM2ssn"*GbSU^KQN,D5p@Hsq[V!WEC5;@t\6C)#7i]o4,oPQ7#5$"[]W=K5]GoLRW1l!_<:$=/Fj
%(Fo5740B=BQgCB?)Bc'>'Ip4S$&oGdh7Vl3,sCb:Wc1S;W/0'`Jc#"tNf:07Mh1NP8WD42NPK?$+BfJl_]GaHjGK?<a=CPS+-57$
%>,U+u\i$\eRI90[%2%Ni\1L5+J<4ppa9o3`2`!ns_WfU_,4a!3;"1a%PS(eT[]lSq]tdB?B-o#!s$Dp4\5jLH(P;=0_Tt?>Ai)6g
%d8:M=hu^\j1*@_[0%SW+*,(HM8TB.4CGhXUFXLH)JR)%,7]Ys!>tR6+*b)((]bI])M80!AO?sMgU"Nfe`#K!-!b!4K1r7gSPA-ff
%P[2.:`ViYTJ$*FU]2$mnbFBj0m[hr-L>2mD)?._>j'LPY^M_W6J;tJf(5tBFWbrhX)g3md*D0-P<2/7_im_[L\m7k5]Qt+a#ink\
%HS9`*IHQrT\J(0j*4FYbWV;,_C,3])R\g0)3CI6mE4%r-Lrk%9_dDW4jg6S+(e;G_r#(TL$V-:X*O]aM[H9N+LSckqD=+]GeM,[.
%=Pa\*#SRdaq-f`l,8UdPGIqbAa+3]d_EfGa;mHWU3,tp#/U.`c6O3Y8K;paOQ`GJ"no"4-h1Hks/VsckSA"Qf6`l1Is7s].ER-[-
%WqYH6:>>*BG+0<)T78ESWnt:Ufrm9hN4>:L]1\P\C3/+bT3hC5rnOWe:7.2VSQ]fC`1SL0DRXYO**0NI0*At/.p]=fE`gR+SpuAW
%E"kur1T,)f!Z8i4!DJp_JLbRZJ*9OTqYs@?+7'Uk4rchpQC:%n]%;fJ/E"s8GZ8mU:-0Sec_V_&`rW>t6R&2XI@"\B&F:0oKgpnT
%AL'P%<iW-hmStT@GFR,X0Y7$8>WH7<g<tp^E9d,MA_Up)eLHu7]@XU9S9eL)(k'3u@&E-N\qN:GU=",<c,6EoVgh_ROIQmKSEMcF
%ZN\#Hblfu'Bbm<pV.pI(IY_t##]oRc!NWS74&7/]-bgS_?G4p("J\IkNki*R.WtLH=/YA]de8k3/T),ZijStMalZf)l$(I*CqHW'
%+^2sWoP.Yje4m-o_Q%>4jN;2I6m3ZC,TK]H"2>WE>H=fSrW09K1[<S8g.o$[DK.hGpq#.#)W1ZLAQ&f.n3O27PTdfCrqXUT5QBC6
%o+.DlK1d/4_2.+"i."5RAL9#kEoleB&TdLm"BR<uQ%H%f/jfpt-8-u)'sBk%JDZg.`%q7?-=+'2$$;1[)h.AMK3*W,,$cM+b!t';
%YfTl&@WZV$<;OF(K1d>BK3P2Z5Btk#jl";1<Ih+U<sc%8=oS"'a=PN#65P94_kkLKK1h!CTReZjYq-is**dd#$?-a=.cFqh(5uoW
%E&%4JE2dej5\?"3D8:0#*!6*mroN>k%mL6-nog.u&mT"\Ee&:-aYC@d>Uo\coV2H!nAbM3Oc6e('7O=CpauL,l),Z-,$ls4)?*up
%X.38^$N*?mca,`h+1tRa1q<&T3aI=tAoJ%h^ln:34aED?T;UTAJ,EAuX%6;`?=e-Tq8ZF^$I/>NQT=tq&]H,Ei+6W5`+<`[fN!`5
%71CZ!^Zd3Q=%QKk9.T=%?Ad69VQ9:Y2-:$A'V>dS'!%CSqYEa7(=u)$]$SGZBj^s`0@[s+#=6\#R/TC["b]2_e-"M_"2+eV-I&kg
%lVQaOJ^+RM"0?pA6`hSm;Z`KtF\RMIFO7?jgO)`=JX5E^#;rW>H:Ia3+tZ_Ya-ceP5gOQK0bTq@,<Z],<[97Id8(W5>7'q\Oe+;U
%1LJ=YSlpWA=eK8Md^D:%(i!9HFKC#(Q;`IFJQAFu.AUgpVW"@?[*9_!dfXGS>pH.d\No'CUjqk?7MH2,Lg8or`V:0]`F.rDq+=8&
%jFRu_Vu4?2&4h%jQ"!fop.>*HL'%kjjIan^\CATr7C43*STH=XL2Oh`.0%"gZ6C3K%m3`eC-e!S+S8+!L_ir[".8^ESE+%Rl%CtQ
%5<[AGcj0C#i9N`BI\RC75(F]=d//>OYWs9ir'p.MOZo]MI1SGJ_s\Rj+C",!&Up(f"+b%iXWWT/rJr9gO@C-#qB$A=fodC)(O.(]
%I>%VLU\@(1#dcqn+%@;BPIdHMnr#r1L'Sl3O]E/e4,Qopa9.!b_-]MZKKkX2Jc82R"oa4Bcj`^(&LK*X#VM=J!ji-<_N]8H5_nj$
%/cQpCUqElGarUNZ(Ir$9nDZ,G^Yr(G?<ZEIW2a=BLgeqJ#+$'0BN0'D_N:E5Y9I3t]#o9F!q@A6O`@8HV87k_!#6+%"U['n,)Q^3
%'a7WkX2N/^9F*mRY&Xt(1`?QX(C\'o?@dXgGlb&\>\.5r_#[A4<=K?D3]9qKRmN@6>#J"H.+dB8(`J>EKVpJbodXGTNP)R$4Vmip
%Z6I_#BG?k<V"k2DFRjOPbpM[nOWm0tPG6GicVsm-"+;E=dOC>Hh'nKDcq*k-Opef578t2E:)4*k`^Ahh"4T.]BI3kCkQpa56340;
%T`dbq71KN(#=iT^>(^mJn>T58(/)V%&>(2Q@.k"9.k#/Ejb;+=Y_s\m]Li:0@c(0V>kuH0s'S7pT,h06h)Bu0[hM+P'"BVq?K@/U
%6n[M.-3R=:b&EX0&eT4O?50'TM8_\P7Kk-Xie@msRC%otWH<-;.2^%oMMO:6`YL!=_$dA`NhR4l>%Y.hL9TAS*u`*VG]AU`aNA#<
%6+KLJ4@,QJ-/g!une`]b002O(.esl5Hk(HEoL%]#$8Q5:8cNADpeI1T:A@*DL;H/I^F=Q0/Nk],&G]_mS%4>`KnfnoO7@.[,%QY%
%9o?T+9d:\=T]h8:L8tIR=!0ZM!R\]@;^uC0Q>3(pW3^`AW=2r=@L`1(#PQh9%[-ro*Ah-b*3=Yl2PC7T&SsiVfP1N!9L&UA#W>+?
%6NOVb!R"CC4&eHg7^`;"$k1"hikZ1>JV@.s8S+>@5PtlJ\7,F(^<7E=j&402`-uFP@ptiFQhlN^1Z(GfjW7qlPl8GH5>;'9TG.s$
%Ii'o7"&]M!JJJq%/I;$b9'QF^^)d:/5qA<Em3FOI-=+u.\j5!-CBA1'Y78#Cg7ZVO8887k6](G$A6$1=4pZ"ub).Z)3Qgh^+,Zj)
%66iSJ)F6D-1nl*M!d$b_G_\,mf*R0A>3\N7-Cp6%&_2`6<^_(>Zr[*gJ,PNN>VP.[=W]!`;%#TZp-JO``'Nr9C;9fikd17C/H?ZK
%l9X29`&/^@$V=\:BS+;e,9C9T:Di.-N0lLk]Rm(Jh,5=-hBCkt5T`6A7V`-&BLL?;fVB*+B`r_faJK1:LnaMR;4Z(_l%EeBXglJK
%pf\h_,3gV7rLRJS<oesj%+,D6ZZ)4K;iqh+E%/<%Si&bG/<rCIS.6:f$8XNLIEXLYP-ODUAloIgj4<JJ5O+d-i2ddIdRd>S)Ch;I
%i0L@#9jPZVF+]nM8>eS&a>50h)L+_FM(AZ5"N7.!1mLfCEQdLgVP2G0qnPemN1:rW!Z.:YL@oT%*^4W5QRUqVad\iAXkq#;rO(R)
%Af^ksGHh+qX1Ir6=KCBJ]@6a:impS2nZPEq#rbqVDRWn5mrdI3;J$(4F7$E"KW/5,lIE>t,RBuEgMM,OS+s&]$TA@Lk+]/cPZ^)!
%+e+g<O<762-Xlum!eOVV"G'L0eP%G"^J^`oCO@O\G,@Oab,nrUF]2]-"&:a85ASg;<=3OfgpiI9kj1[tH%aS4?')YH8Y$Rj`Lt8*
%AT%5n=)VA)B5BDN[;$&M&83BGMC6XqG'iWJ?JTI!gsNJ?]gbmE(jmk?28,2kX]l[?C_:bM"G[69dR\6aH<eP]d9&8QNPeB?q2l#`
%..Gko>#s$@UNQ!HgiD0Jh?-VLj5:R>j$F7+CG^'K\'qCUEHXNR8n0Ync0V;bO1+iOkpW;==nBn&*t)"B]O&50mYK=r.9o+oN=0Dp
%\rbI2_lQ?J%mE0FL/L'aL=^J#:=j9Z^a0+(ZbFe#V%0&'8tdlPBb_>-NF'D(dCmV;bYu'/5[g8,9cc@e<,N=I3GkA1?*kW.jm+S5
%>%aGN9gLP$6=cuJR7gCURHJV^>]-.Vc#^F@/iV,<!1QtP"5-p?,UP[Hdq1,&981ZUjE$FIjP:nqrT),#H9^Rs=2+!uoPXpRs*;::
%bbG,udH./N2k=iokl.O.lS_Z&Cf0[V7fb\HYLBI2c2;O`9m5<^:>@1&CJosk2,3..*Fn<k?!ML,mL>=9U\\=l'+IrkNEt-HM*Fq<
%j`M!In@A9#]rptieaU3tAse(ue'nRJggkcUM)Sil%R5&]m0fiOSlD5%I#3E8$SQn<b@,=VhFs\=@nI)/!S4rqdk:ULnsXGP%9i^9
%`eIlIr!Hc:drfP^?eAp^'96'u;,W4cUfT%5Op[0TY>q[pFD1TC!fat8*b-18[:XVI?!V%'pFYDnWp7<W)l>CS8aUaL4uAWi(OF8n
%c$Yjf9_R[n],[#H!G61IY[6YD3uVbQ&DY,n:V79Yg9p?K_sO=`[=;p"`cISY1d9O/$9_6[&86Z:RVObi%dITr@2PRj*8"fn+cW@+
%o@\,De!L9qVHSBea#ZtM*k:T1(F_A0d8'Q%?oIiN>?<ODj`>(RZ\@WsSY\AD1?!qn=Zb]^B'>?&J**GaK'1\UD:e_J`HL>?*7Hap
%.T51Y2+<C;%DNor`fg0T6?W`r)irCmVK`aU^;m1=`[L\6j,SH!G3]LMK-s(f0nF&[//YSJoR,!?Gl<O/RN&H@nbOhX2=\[:7>Z/%
%XOl_X+!@+VNnec#o=G]aMGM(6+,lhp#NJa^c(nS('ZYNtnEKodOirtQh1)"C.%;"@R0K'nEBI2!JqBCEB'7',8Be/U9`D#d1d%3$
%>W;lsS[;2+N;%=YitT+pKe'(SFR(;lS\@]Wc":TqQZ:uN9<n#4Hi3`PN7lr"CRnM^WOV^lkm't!.U>feJ`0LC*DT&#PKM*D]`1Z&
%c'TRPH,oC-)c%rInZPXD7i(t])Hlp(-AV0na)'cCpb;3R9h&Ttm9;%@S9U6ZU-LCi-6^WdU]9B/4slReZ[P$u,3:PMMd!fcmK?F9
%Hjk/_5Fl0!9QaV3\kY>`l3YOOU""67?lb5j;m"W^[3'*L^(>Bk=>dd()O)_:?DD_^5'IF7#k5@N8mtN,?CI8:RqQ;]dInJmC]T*H
%N>F&15W-gPSHRHPd&>QbY*7jRN/CQ;*-c2Ce42dEKiEqC+_h5Za^5YnUFebOIV_#8$3<90DqI^hM^%*!RTVVp=sK:]?MRkWR"Z?_
%bs6/FRAlAuedS':8]-[)fas[G7%'kIlqF$>8Yn>/DN3,X[VQ;3U<N,9#$,@#/4pgkVT&4%q,rrM0P?YR3fB.n3@=bW8fF9pr0C`J
%3.HAmAUYD+IMV$0HPRomR@AI$3D4!^dNC@9Nb?92PkeIH$+=cO"E<?p_Ybt-jI\k4_k_"gU[N5iAfB"FUuLJfXN!5F3Sc@796J*e
%cACe4J&q79ijZ("S1Bu+pD;t8c\h?aQ*WQTF\SY2R^Es5cfD]YdaZBOq^jUF]65.*B$BYrgoaA&>tZ?=F1X?>CV+5U2RL]G[Fm?O
%/i%UiXP,d?Rp3:)=LEFY2RdF"@+FDEg>&^)Z>.c-TsHi;e=T4jQ@]8>lRq=!D#hl3kk8b%cIF<H$0GtZ=/2/,r+E`skG\*@><f,L
%^Wu9Bl+lgOcECdN'F3\%nW-V>Oc."MWVpVE%<(GL5NXV;RD6Dr[pV(g05k95?J$q8D[bm;n=:_t;44FCL=DYlpS-4YriNgf"4;.[
%DD;m(,-^)oD3W54r\pOT%,9]4L?\23ahZ4,I"qZ>^l?S,3V5Lbj3&GGrjR15bG9h]Zh:_akGc1WHYO&\rsO,L"LI@-G`7-8feMa6
%?h#$dY61KE@5#U/^e]q%\Fg'``'5V6<0HZWIrCj3T\p49<*Fk-WR"OHK3<L4gFWN9M)PW6]@OZ1\D9!MD5oMm;cI2/L[B"L0gVJ;
%AY^bo(j9F?L4_P?Hl.TN$jS]DHq:$sf6hb3j>:aBgsRXrTCeU;kr7N"rR^amn+[WGoDRQ<OlcE<msP00hoBKGs#\X*^GG\F&bGtY
%Q0I-)-/X\D^g,P`l,Vt6^10c]k'Oh+;Ws\?q9J_^kBjqPNoJKebXosD4ia3C>f\8JUnr;T>Gp)eJ<VK7GN.Q@_X!OmYBrK(,?M'S
%??H9V[=[j99n?WV_q9")'U_hcihG%E$XOL0mUdAueCS28fZAikOL%Z@dB#PU2Qr4e.qJ5Yfj/lSq0/ja.qE/K=,O4rqTECnMVP^X
%]5DZl,(=_<GZq`O2La/g]%c%S]@@@om50T9#1)UJoD7/?ADaL'Q!*;=>,0[ip4\S_[IPK]-!NhGFPJqTQ*T<^JK8g"VHBUXBcdfE
%=O3iY7A@%?/bE#"rJVFlfW8+T_!fNeBr0:!.hL=ABC"N:<5L%<0E'FQHmr(;W5$O.&5;%er70Yu-J%'c??hkS?@E93k(T.IiFQ>?
%R292lKbmm(&VV$(Kq\@d]^R[0]Z^a:P?)oGT.-;$F$:795WY#6cW!u-DO&+8Hm*2^.h]2^I/3\O'9d)9B'ie1lF$&B;]AoORRTZ+
%rbU*F)hIfX-:VAucBh5#_-tc!16L]&%?pdSM)9VTYJ"IU_O\fupr-B^"4Jj.R(7:.A:lf)c>igfVTEe;o/AB%1MT^cDk4XkC&[h&
%q:h7Us7W:Q/#V\2]^)cXR7>@VIk#r"A,[1G#5_2EKA*+Mc]"Ag:@Wb!eR>U'G'`DVn_rD3>]eaR8lFEGVDMpa@gCF9.)e.)'%!"g
%rfHpI?d&QMM1j/d1,*F4q2O-\e&.DqL,KJYg+(Pf7S@D5B0A^kSIUK5%dhmCOC5)O!f8Edh&3?qE,=`OC!cZYX/7r<.,i/]%0"<4
%(jGlbl"Q*Zk&lUhc<lNU*FkfGi#/M(=S"SnAD;Yl%%>d&-J[(qlPPh#`ohK'Go^Bel59Pl%'Aik3oW'`q:S3kWH=^-9<XZDE51Tq
%OrhI/@sX]^8[m9Q%',0%OrK'9Xjp?5HQ7YZ(NPd&5,pHEYCUE])M]H'5>na5$9Tr:P\c5dpRF;c\(l/ApY9@,9gkP&+.LcVW+8Us
%[Z^o`=Z?6L(Cc?:dJ8]TIYVR-aVPC8fb@fBde2#k:>U[$YD]j@87N/9Cg<@Ohto5=TD<i+IV6&P7;R1GYC.<rn`Mg6%Jj@aT@7-D
%]N5>A:M3NY<>7LYM;8%%+?/:8V6:,l(J7Uo9++[Jga`g@PCD.WRB=A5WR.%Tp'QZe'=!f6"sR]tT"Y+6<L14k_Qru\_TLqU-_r`t
%0nk=+ATfToW*[6:(-g+>FNS[8FA/*8F7X3cT$>Nd\Tp(lcfXBC>S=dXbiVekOgCY(c&[WS=$Du1N<E1Ic_\ElT$GU0\Tp7!c-s4K
%3]Bjt<nRm,FQnmSoTW+CXctFQ3qJSRZ;S9CSl`UA4)+W5XQOZ2p.[%np-OKJM9c.t6A>eYe$OK3h#+huPG.pGpL?t53P3O_--"$!
%feHfWo7Dqk'Vjt*aGFh8?9bVTQ0XEgB_#>%V:PUQSuP]@l2I]\WDZC!EQMM/09;\C>EBJiBi1W\$Jn`s;-HF_](_h2chYmnk4>2t
%iJn)8%__)20O(u&]"]mOop<jm<1Hp=5R_tU1[%Chg*r%]FF*<^VrFT8:)nXdGl>9IogES$IUE!;9hm[*?*_AXn4THSnf*/g?F/+'
%L43E>/?MS=(`.@p^YF'KieR/5f0&'sDl0Bc3R6Ni7PE;X9`R1+`Yp:4S`JA\YE\_=#jf&t+r`IqGOk[7n>TM7F1.]Y:NPWA/qf2!
%^@WRI)9pFdSpB*IcM[)ghsNTad6X5qn+i?;rb?^Q2cVulhdqDW<I_9_LfaJcb_)X8;"P]ZU3TFSk6j;43]tqYdB1(0`5b?Rl!rnS
%Y@mCtoqY`B=Zar2YB>nrg<aML)@]"/;V^=P!N05h?8^M;DpFuTICp6pjRoa`,uI>IBTd?Pp4B"U%dHG0DV)d6@Q:U6k!L%]^ZKV#
%pb+Xk\R1lrY^c'[-ek4e\o1:&=!l`^VW#Fgqo1I?pojM5BriH'^MNDS(%b015CVoJVG\W#n*laJGPKD5=/O=)GJ28l)eMUS]P%4Q
%U2a?,L',>iGYQ(Tf^RY:fu.+**U)=iiT/QH(2-f>Ok67%6-Er#l!kX\mK8J4Z`AH?K:?t"ZH^=("V<KdK\sQ6WfM/bd+#fTj7h(^
%`q)*n=a4)hi@I4a]:'q?\BWb``i8o8r/un@6uisEoN7hWD)qQ3Djd.71GAtOM";:'P@tJEVaFBo&lLi52`3LEV>9iMGsFN:XEUO1
%mk3C=\^hg3Q#tG6gi^okE-Ee3P<>%<hguDgPIA%;K-%?V.JK9rj/Fj[ZQs'a1S\Jm?-IKS@Q&*YA$^*tnmag&67EC.npK/7R[o?n
%hkVrW14Qp7Ah&BhYncj,_R/QPk\FN$R$U#9!E\L+>HV;)B/oq@Us+m%rgk@#^M*k\r">fZgb)ON9$M,?AOt=JA(0+(YB^8GcqA1U
%AUE:IX>QbsrqtefMsaa-hGLrk^CTRe=^XP+Wd!lCo'KcH.WaN)SP-G_3G_c*NMCB'`8-#DYLbC\UQD.HSl]9Ohn@1_JD4j4RB0X)
%+;%u+Da80\q@J9f.pS5b;n/-%MF'OPEH)u[m[%jMHb"=o"CDGk!Hie;oR8^_0@\+_O!"oB=LHHt3A3Zj87bS3NE4jEJ<\8$rpgTI
%i:YC3Q=K]T2/Lb"O:,Y0;s3.mC?_T*+&(59FW3Lue`8d"0[=cm>.C`gR<LY2`]og]mMGl1#G8^rgJ8qfjrj9cZ]_<e#rdoB6X]%+
%/<C?uUD-5;fgZ$3:`W9:,H'sQ]<4EekT$i^FbMV<`\oB54t)p'K<hr&$r*mHn`)@rmr[;`?3T%+'(>fhHH'n$q8Z?dL<l<GBq)-<
%2/DN4A`2bj2`2W=;]%;"4gTCG`AK6RZc*V?PM]:"aO`+dnkM0OU$3=(Q%i-M-<=n1VPW5[_#u`qQpA]#!6tG-QC&e@7ns%oRTu].
%!Wm[uJt\Ti!?ZCs4sahqE#d+B0LPJ-0EY!_U?#u]1RJp$?qJ14F`&EV$;:cs7,sXoNko-D`Y2:hD?Y*s'I8U:b"RN^c!bArAd6(N
%FN`[+3D<[.2[@Udh[8LBJ]UG3D?,HOj;b&#"UacF*65@(XnJD:r*(<_+@q<BVC6U005)]$!P,C'GQFqNe3Ua/GG93=812\7e]+S)
%<C%araQKtqirm/ra>BEH_q>7"2TbXEXcVqIc>X>t!,:BkQ47#jMO?"a[8E"t%u/<kTm5f/%*-2/k-oFq5#_A[30VX(9.\\,80Ab@
%9:Ynd/>7Y\>6SWj`(Z,E6U$tGrkr_Dpqpe$5Sf&a_$3N2L*RiQ$]reQ"b@@S;c(da&u"U\"A\Jk+\o&q2)CW&&5u9IZ>GG_`Dsd=
%U[jN!POQuB3NekqN@Z<*<:!Y=I&b/AHmUdh)HJ(d`TS[[%T!s>(a0MIhGaa.:YlGVZ4rH_#52(fQ<Ce1W]VF=ADW-b5f0HnW%aa8
%%?q0EbF_@)%49;f@W:-7Q6!&pA<H<+AV9AYA.Y+b?Ds#lNE_(s4b"7'[P]$nf.8a31^@2=bG#M<47Xu;d:$9''?k/1(7ugkc_&*/
%_.o,Fdp]MY5797&Vj"*RE74ps-RXMo`2pIB-h$jEJAp#P32TlJO+i/bBN>5+(jRta'hr/c8e(Dl>`1C%H-`,$k)-%i6uXhG,&6%p
%+bpbLkmH)D+;\/fme]^a";EPmJSWlZ>cR<3j*/Fhj8`"SFd3.8a(ZHs8;3b>$Y]n,W9>7%e.!NtCkh_UkR8q#/5cgL2(_`9N'B?Z
%*uEm^O>LJpOnr\F"N53Q"Ck,fmPq8b5JnTcXI'FXbmJiqcR(N2@h(mq_iIE]:mKZRIj-#?VOKCS\/A6k,*,<H>i7RVYj[Ga15T+m
%4q.CJ_%SR8\Ies";QstEBTjN/QSAW[he3C]H60ia0Ak1dKtO1X.2HV[YX6rt>de'^ijKD(KTTNe"oj^qK(ph;:E5G6X^FV[DI"QH
%$lU@l0*G.n%VC9>OaHcs_?4Qr9Jm/.)LPEoVH@h8Nnk!e!GjGa_fX_AF\,*P[pVV@^o&pA-?D^g9&PoG(Kb8)dR^I,"lUgHHO.c9
%:%1e#,E,Y@,_]&]CF1%"-EK=u/0j+hijSu!VOEGFE!n(L1P%bjd6%M2FV3@4WYqh"*uCqf>O;?f0QnZpcDkInUnt"B^>22DM9OG$
%\1J7V`^rBO$CR-3>t`r\Qt(0[U6l?c$YCR.(79S;3$aAJ1<bF\-Tl##?=9>?I?Aee#-?;I*EceHIF4?8!A9Ym4N8g0;F1L!pS&N6
%cs)l_9(0hDBYL#<dgH,.N`$WYk"8@JB^AbJ?Jme#&Ys*?71@R<i@fWZMjB*L-$7Bq,2d1W?BK*VQ2"U@HXSsF5\*?-9!]r3JFJ7q
%C*LIdPt-/08/+]`A0drCpq;4ROIPLOKdi=eq98RX9q0p47cXUXXqrlG,^^d=9\^!a%Ic]\J-a5-+Q7G#&QrN__BqTJn]AfKUf0<M
%iWfmm;6Xj_(_sRn6qfZ&o*0Ikc8?1E6FnGDJ0*bo5W=E>bXgY[M5rpc1(eORmmY`\POf#>TXcV05q+Qf1rH&4_t9@nqU$o3dYQE[
%Z=[c%M'kd6Ig?:%&iPYhS"^8E2BbU=lc'g]li@TIQ"E>WN(_tm6OY0/nC"R'GC`:,&ohDE#eb^dQ[Z,8p_WT[1Y).9#gS8BOO2bG
%?uSesGf[`m?YT?bl!e8a.]q;LeOr<paa50h$ts*C!E7?F'4R9"";o"(#(5O&_I@Qtcbk+9<bqQf72j,V3=;-\SUsiDm?Z[`T,E?1
%QGaickJY&`[?NPP1sIOFj/Y$8HTB?cT7M%3e1%d*8^k4H<!YF9E0qKd:e!lE;hTenKZ1jiO!dOqM0hO-"5QE>YH+1V&5Y6DbBa""
%`&C82-lIm\QlW=Vj?7MO?]([;5X:"CWhtth6&KM`nZ&8@Vejd`KU"cc``!Kn>2ikMGj:_gDGat=+bZ<(AV?^+LejCn"sH`D.$D+f
%=]@1SM+l_%Dr_6]OCDi[72>Uu2^$Q?b;^*eP?O2%8=P!O5ruOMn('UMG<tNOY-?0rAcW``>pQ&HAtLkF?5S+sm$l)pn2Eri94SA!
%Hh/87s7D>)$Ds4'_,(,bM_S1>2`7)m(oSkDn75q,##Pl*qRqbcYnF>^]/-5Z+)(<VS#E5hd^Xjb1ap:tE.nA^54Yu*:5;50<,^c?
%IeS#DY&ct,@+V]#hbn2T]u`J=,Z@:?<0SG]J4rT?1\#hlSu%[o_DR>D!6>Bn.T8_R&GZn"+H3<VH@H,3]AX9]FLES+#=GPToW#]O
%.LIUg#/Q(NoSU;&JFH$Hr*))@-m'M;$BA'@mSqnhXj`9#7-d(^,s_Ig+ZQ?TRjYrhk?]0aqL?oQO,;Fr1WW!$]h5Ke2S2DUlTk@#
%RbrW#jm^UK@:!W'SFdh@Hhb-S!"McLr`d:qd4E0F\1X<-GX-Q5D"1B/F8!LcG;_p^:'P+=1%K%N?o=MMT2SOcVUlf9L)](9?KKl]
%q*f)+&g)4,+qQl?263t>dB@3c=HJpa\,2>m8V(Ohr%<]_Ij`BuB>>>/dZL8YO11t6N&7%G]-*bDW:W,VYONRV_F.dW44C\<,<_=u
%HRh\fXWk@5EU\K=qG>PVoTK&hkfq65=$QZ<l^9>)mTf[[I.of2C=9*5.^NX)<?nO`OCPC5]2&;O[\mX2KUD.,Y#n0E;D`MA@O'cZ
%8'CZb+c(,lBj&W4Zud!g=)OJq`MKF+TTar#XVb2nNCNDMXZH<JUhLtbE[&j4qigceS+&K5\e%g-],0;@G3s>Be"3q6r_=+?<fk!/
%&%Lc8?F+rjVK54)7V0C&(]h6DqpOju^k$'Xc>GA%5kK8h#k;9W4"BW^]lq:2rFI_aI8R&W2aYQINe5ST<C%L:1u-*]>MUkFNnPNe
%+VhE]qFlQqN&Hd"[WgDJ4.Y)dFEkg`-NZeLUiSW$pY*.^R*0T'*sJ8B$l:"Ml!G>T#BfEkpZ&0g2$uMZ\;o.cVKZu@*9/%d!mAu;
%l*\+17d]Z/<QtgAADjAEFN!'`:;,4QQS8QH',-.\oXt3A+XJ2&9Z3*i8CBR$->Ht[Mk:ZfNeZ;2W_RcjX0HTL)#Jehb_)qNi_-,/
%&a6_4cIZ@2MM]fOaP]7]Ek?M7Bm7ldVd7PH,1]lZ)RkG&AU*?"*%^Ri\R!31r]2gBN`UG9/jR"TUXBZiB3J'RD.bo;7^!lI0mMo<
%f1iGhmIe&YbI6#<--RD?f>T\j[@B.()&NA(W\F)&r\=pg=7tN#1$IO"ll1e2'R8][&Rp_>\/fgQOi)pHbYTlK!;6)@$Vp;Kdl@_+
%^g_CKJtUM.s)9clmU+dDWESUKkI$+CO,MAaf8<0sr8o^L=JE9Is7T4D4*Tu1DQ?k-KFI:p5`uS7Ge?pQR6`4XU9A#7Z!P@iESOI&
%U9ZaPPWOeJN`+oKBd$:e.`)tJ+SFj>QT=Zf]=7LgQ_s`Tpn`8;+6CB:\Rs=VP*C.HSFCubSs8,E$M@RQF6[=WP#]EH<<Hl=D:Pp)
%8s;ub?=+/lTM3jUWn!ng1n;j6Z44He-b6Z\bDRX)\_Tr^fC^o>:8dEd6fHCoJ>YnT)o$+"$Q6nnB[I^&\+EaGR!HePFXG-.iIdgU
%8rb2$QgqBq=KD3L.BbeR^aPV/3eiYhYT$sWlF!LYl%8gC!&Ysn::"0J!,W^J3/c#+nn`E7pH#cfma^X;o"9NbUS$n]LWXEqYW6^h
%c^c\1#@uW`DQuR<#7!Nqm(QP@lF8&YK8r9gibf0"SWXh\DVMc5JhJ]b5KX$COaSOM\'2S`_lXG'%VFk!f4n_lR<a-Z"!`9i_elm:
%[6ZobRG]V'";SUNB&@</p7+c7F6'_11ED8RY2lh=D1NT!-'4?@F6nLrkf(5#f]Bp9>`J"[noE*_aoSK_n9$OLNVGfuG];^JDQT3'
%C3aZBIqu1hI60+;?R,>C5uUVME5V3!Ygf"Q2u8@ImEm9I<e#Y&J9_C#l-T2&oe@iJVrcZPcY$'eW43<kZ'rXJ<Rks:*,]4#VD>1o
%->?q36dp-7NJUXCC/3=P<s]O%1$^n^H,Yh)fDAjh;;jnfj)e8$>e@l__]WThRTqTE**!C\4LK&\P?BhS@]3PAZFcq)=OoF$dVm8g
%NaA`)j]8Md,LX&?Y%X,>,s^'#?5(0inlA9:N5&M>,LEW`JC%;U)G%^R+(sXWan<X\[n2OHhtM'8C\6;n859^ucZ@g)GTPZC9AFk5
%fg#%EdtL_?:Bskkg?upWpO1I>eN0NrX$:P;_nSu*42&ChEL:sfDY3T5"80L>USDW6OceNq0fGr^/Le^&'Y>[1e2bKc8MP)9.0`Q:
%nuphUhOBu2ZSPtjnV(j&HiXOkrLNg9a8guV,9K9QcZ4i"I$efRhX)9OYK27d"C.&Cs)ip#:"14F=jk@a0E9kT^4:LI--#-H2.Bn>
%GPJ9.#EJY)CfE!"n+PItis*F84@'fUa[QMc@?Cnt"OBjSp+q-u2RD.g>j9%<@4E,?IYN"XYF:I<"Q'LA![VLfd4Vs%HDEe[[*NHK
%Zmhkig?:O>C[Tc(Np1mQpE61$RbaWt&hg6&47.:i[3,$uGbET4h+`I6:Z'V%HT_JiS!A<'MK<2!QTgu"EF_l7=@f;oX1OU0AqI4u
%aP]B?T+j`c"o,MHomb[mofH?dlkku!ls"XDZD3Pb+%Sh&OA]sP=/_gfVAL`Z`Eip5@(A>bP'=+"+#RtMR[:er@)6sp?/RDSO6C3R
%ZYlZ,AuFu1,CGZt,N]?/MVkG'Q&#Xnp#6),2l`2Wpki9uA,hM_HCll$Vu'k[oXa&i]9PD@SR6X7C>bGA"_Y%3/!G0,f=3-T%!)"Z
%p5SM-$0]<hd0a!ml:N:gH$=3a9`,PS$1MuHRFf^;?\?CY66/%N_+7"GhU\,q0*m(d#(Y34Rhc#-&R,l3h!?$J@=\!(PEY'@0plA`
%))Q6Pa]ta9;$/q"#a:r['0(?:gV7Sb\;-I9a9e&/__b*5o[37=`&Ig_5X'^V<`s>`Z7)C*hFNmB&7SYPG1E])TP.s)V:U^a%h-q$
%e*6^U/A^#Sq!M2IkX97-'P%[H3*(Y@.5,*?D_.Ok=A6eo[IDDXg,JI_lYk:\S`XM3R3c8l?G.ENG8O<6L"1<NY8nO5@A'1W>3iih
%1p7RK-K,53VdAhUX?JoIQAc(rUB^@qO%B[q2r^/Om!7d+bmQ0<$(jpTaU:u/?[F"IiV?S%>j:;>U"oH'%C^mXnLjP6'8$id[^\.^
%`'t6R][NuqX(!V(5es#.j!)!dMr_B,^p^6PYNj].kuZ94NZ;%]eeUR^P,23[/`CT7(P1Y[&k]Y+X;X3=ObA^c<4=]M[>.)gcKqm2
%@-$OWFi\;rJp';lR&jM,Fp)bGZ3H6A=mK[=ECep[_'!//Q.=+SY=u218P=DdW+#]loo>D!-AaZ$l=s^XUjk(Z;W6$@-/n]2JACC0
%`<aXdFZ["SAi.Qi2johMH'nTN0aTU]]_=l\VfQ212Or>hRht6X5K`YB[Lq8d*XG[6R_\VLDSP(^#D*07G@8!4^?OeB5k&qS$TU#Q
%gd1%R,if-=^alVe[kIA@^uu`h#&M!H:OJSD=U$16s557F3ueYu?YgaA2A5N"#Y[=F<k\(i#%Js0.a?7udL8BH#UlJ2Q%iZQ/?:k7
%']b@+2^-PZCg:W/->kNpBTs+1K@QS57@:lDnW'Qf%BpuHh-)a:U+Fn$RQ?**H]RUgkC?:%51jp=*ARu#de6k>?n_kc6/4.$Xr[<V
%Ulk7XfR*%nql6]Ld/ZNNFYkP?]3aCZLZ-$G?XjKJD`I.M:1>LuTYm%j!043mO<.[a]@gqIK`)QLXnIJ#][?Kt>c2cekbL7q>9,sf
%G#2`]aE\64]pkDGaYqsJV].fI0a%hZD9rA"2p2a6K(E]:(p2(5Pc+?`%^pEYfXZ#F]Q\:g(.,Q;4T<`]onE#T3*l[1*+\sHC1ZE1
%9u<*.$*\S7H/+/=6U3=%5_f>3#8oP:22J^bTK([_!YcX2c*QD40KKOV1\-/@]iO5AMaJ&HS(LLJe_Ubo%R>-s;6-=6dOJ)C`K(7A
%[FT+]N]@PA<a^ju!=Rt_SJ:LG^b0rXb"\$FJE.$45e70'N*mYg3&qmnA?o'H7"_Y]cLFXnZWemrbVkF1pfY=![oVi%YX*(*+ABqp
%")^IAi1IKY1k&`f5fa5,f=_N3_A(!KQ9u&gAjmCq8BXJJRFq!2%;?6`f5Z^TL!FoQ:?Q\IcY,Z&?\n5NoTRqd`+UX(LP;P!g0\ar
%aDG:oK1<4(9eSWrQDlb+OIc<di&$mTa%S;"h&FZB`fH8AM-2r*RYr,E.%3!Pc/kf^ltD9p^`p1GBXre(DQ9#,"DhG1CG`:!#LcTZ
%Ta-]1/A5][95CRGnL^LR4R&=A%o`b/3b^XW[o]63`O>@o*+r5fB9:QkRb.4-(YhRV"JIKh]?TXM^4n3_^qm#'`$s-#dgQ9iq1Yn?
%`Ng`r`mORCNS!MB"`DXJcQ%gH;::l0*BjBA!ul?$5C&V7C#m_h?h7up4"9Oa>'^eE;PgQt?-o/`55Me%q0))oL@]:o:OR>pRbr#O
%1p5C_S+lX!pJr%O(MZ^Ro?_a\]OX-,hgW91oK[c3^AmHf_03Fl1!:kl?nF',H_;dXij[q/MXk_5j%K*fp?"uJZe]oCf3k'7NW"3@
%+)8!K^O6#qIsY+8:C=M3Vj1^LqtRI8Y5RX4R*[CM(Y6hA45Jo*c["oql:S5<m<<T_-f(ibVoF?q\YqZ=S,ZN=r"c.Y?7:0`"%R]O
%g)&n@=!'Zg:(,`6_e4tGXaf3a]In]j?LMDDbJfa#??pOgH3)J+]uj^.%XZ0QcYq'UICoJrr??aA/R4\c=H"G2*u-;Bs82NPZc@"'
%5d9HIiQL=!%mE/Q?JM[NhTN*+h]CoT<Za0;,2P?1*_^'n>?n=q.f-3b_Nf;QZ'efm+"cY_Y'aO3/j+Sg0"ASB:Z(M%\D!l\S88%%
%>:s4J?\tbMZK@PAg;C,[[4cmWI!su,j43koVd=9@jO&0>?tjstmn/:JN/]cg[r]g:j2UZ@_8_qspp=$Wc*biNRVPuJg%+es$\k_s
%pH!5CEopl`I&eaIoibeK!@G.*Xi8g*2d\M))?P]gq[;/4h9?1C9.RH2hgSebrFe<<C)4H8bF<FM+4p>aK?lCBe)g_)o[J-V!86qj
%G\as,,,q0rYEt2J.A1UZq[35ui1RUBCd'?+>Q3!hBahZEKgm3sQps*N^T5a(b>6<No$caUdL-(_==JY5U[e)+(F8dHZMa?/Bn[@q
%?#Ic8hJR1J<56-E6JMuM%-&AjFak<[b3oL,p`(o;/T)RRPcIZNIP5%j,B=UVc83`?@!o$9:5e"qM\g.^^6]i&n\`"Zrqb1-oA\HP
%h!%h8Rlbpu3QRb3'h'6XIX_:s3`SD/hL0h'$`G>(2^YY6Y/AYgHFEe-BA.^9G]?W]&kQM:B5.2+K8m?l9/n\#;`\F3Dt;Vo^%-?Y
%IJ$cJ5C!'a\7Fj3[K.@qZEg"pln:qF`_he[hC"Rr/e/'6Cb0Mt(<aZXb:@r93rI]/C1<j6`jrRlESA*u45K5rqPfn@Aq]e?pYWCI
%@G<6b[-u[O/kN)"Z0dhn+17CA=2sccd^c[ZV!,8A.uJ\\[1TK.:a@1(r_DltO-.Y'Y'qstb.bq4GJBQ+ZiYi[f#d[+Mqm9Xr'@l4
%Z"GNP`HejrW&ELr,osdVSUB8GH5d?3FSE7.jI`&.fLd[rVL`m"LW,hM"W-<I[>Dmm<A)k[HN!/(_H#OC8p@1Us4k&L2menXRV_=W
%A6GjRC'L*OeW34Jl+ufZ&?cOerD<Z=qKN=#lsP*Sn&(_]lfBLuBe%nDfRL3U4f^J]-XZV*CUL:`Z5DNZnT,q!HJi(H^H(+masHB(
%4.'W$=Xeb+.+0TIGV=@<Og4lq(uMYmQ0[n"r#&%&lAdRIO$5ba#@"b33-SVG4c.%hEh7n4I&raV=&6-4([k.g0MTK[qZ(9`Vrjbl
%_Z':.(3:Wp*Yg>KO2&V<_K!,6[WLtq&-2mgF@!>,o>FpA";'KPk'80,T7C/%nOb=0Pq=->X1+b]miF)Gh(hs@Rlad+DAHup=&hZV
%*eKmt?bCWt>2Cgp96?N)\U;g>n>?NG$i0XjP!shJ$l.="T%0EGgMbBhbbO>+a6``Il^[h8hSTt5HMF>PFpe-$pus4u3nmQfoCZa4
%A[1_UBR:*8`&e9%C;W:-BH[c5PQ!C6pA$5O]1(P.)%,#^(IR:B=3IJT>!1q[+'KrnfgH4-nCUVIk/npubA\RY%8I`^@lmfle"F_c
%J`(R/BMGi>`!-FgM8^U7!bYaR''L%a2JBI:)B'hl-!^)8=m8_SBK5'ES=nAG"7HjHcU)@R?sK6FAFjj%<Bu3N,&&aUAe^_rK26FH
%De`l03!%JRQm"L6]u%Sl&L(5F,$T_%pa6Lc9YD)l!iCf1o][L7]9+[SdI\m'9?\=R.4&i(GbgE1"Ps[Y$KWQ_\ItC*o\'qfOp:^r
%fa=uRi57j&9rKU:'9I2aJS@B8p%TBMil`d(IHbWY<hD=E!_25t`nI>an.IDf,<%l!2M*4r"_L/YWl1c.[%q]jOuot*)hj$FNZs"\
%$jM2Ba;P\3JWAS^(l9W'BUcgH[)umr@S;LK8['>QeMQ,n0>O*-;l(_GF3WM1`T7I53+'$*rZcX`k!cVhc.FmIZa6lW#%Z*tNC_"9
%HaU(\53ne(g"oPcmOad^]R0)D[ag.q(aBYB,h&\?*""Ob%3h_OYIkiHhO"`Yc&97)(h1@YO$hAJF5t/e3N$1JgnQDDNm]\Z%ks")
%m3uX]Flbq?^3K?WMb]I#F*#CHPLm@/mV\f,]YCll^KW@0gC#Stk;ZcTdk`_rm`3fF\\gc5La!cUFZ!X8JM\+:ZT,+M#fPMs]KXW/
%TD";'HgN1f#7ZdDT7>_B]m0D]@q`E]f*g1lSO9k<A&<X=&$Gh/2FoF*2l@EMk7n\Opo+FWAt#nf].]$XY<"%H[A/co;O>*66nke7
%q]Bb%QA28/0MOB.$3_0,'8cLrggRbgmHn&Mp<?^o\7dEu6Kn<"!El"C29k0]LT=Vg_^68[T%#u[6_Qcgd:Op!0V/E$K;Z]3eYQnf
%L0*ZhY7SJi4t^(l^Fu\=So1Z'I`4kn93&,\qQo9;>=P(tjhoJe@KF]Q5/8Yc^6!alUQLfMb;gV,(#g;"_9qj8-6?TA&C1e09=:tZ
%(Bm('\m55\p=(__]JhJdCG0[]mq;sJEF7O+qNT'0Unj:RM8-bS?G'V$!NTKYntg(mW$8(EkRq]?`4g%O\fR_UB)0X5-P+@rB(%6W
%YT&l]!h1\Nf03AMAUcB5l=_-@H/Eiq$N[s8$b9=l:Yq=o93)!]..c:?`OtW0+"@(?c<F^(SLdP*&(eml_UYQ2lcW(JcH^h5qO@^I
%AmaW&&!eC.5Iq,cG9*_>?h2frlX"f\-l=AueOEh1TCNU$rZSA$?rAslp:Ho"##HtJ9&.S'>(61bq<lRJC2Rt&G^gf5bc?*\_%1T7
%44S8bS#nU+IXTNh4qJC9(44h*_7Q?ZB[`PYFaCu?q\>K#R-';/A"7^7B.\;@^%(r=2H!N7HN!i_7ITGEme!pY*bJNX/*0R].P0cY
%C1+*+V%0T)e]Zgg0Y(Tmkc(c*dEtjlYo5,ZhQ4g+2fat:kF-`Q;N2nO5rHAEJM&SreMkW>r<$DUqYp)MrZP3>"!Zdn8(9N5Is+7+
%7G^-ap3O^EEHQDNrT1NS^h92VpWLg5X<rN)Y-u&k[GooPNGY;`O572opWHV`Bh,=DVmn%tl.[d14[77O%\KJ"MhNB/[JXH/r;bnB
%mZa$0(`*c#(.oYUPk"7ZGADR(mJ#>S`Ui]EmIb\bkYT-FM\P&4a#Z&'n]d?n`cE%\im/pLZ3]]B[fS\iYYfLHL\hcq(_?>J#M@%S
%02<&GL\%!RlMIL;q49`#SLMh0`J`1h(5PU6hE`fmDs'<M.S'0.6kgrJR?n<5?sW0sAnUMmS)!9-2X7'Ng;!R1`U3B!h9-fZYC0`\
%IBbDTlYiC<D^&&>n5!8(+?00n+DglG\pUr+[?d>J5Q0F=:1)l4rr0"YL,Y3$]ps6%]$.JCDcUBfYSlK.dtcg^bDVt*PdncZpNLmB
%7c8<,d4\SmonIJf6?E+AGe/A!IX@i$Z[Us\*:X4u:$\)=A1/.CXB2Ichto]'X;2QJ_rGdR26M"u7>L!jecSS(/)P-sl\D\/`3cJJ
%l'!FIh:Sa?qZt>C4NJP8DL_*kO9_=CD<mk$]j>#aN+^/BS\iReRqG%>B__SHgoOL>(3_:L7sXJRn+Lc$bCb0"9U&W?`P#p]p@D)A
%XpgC<,I8M108tl,%s&Q+b6OXsF1mhj5`erl&e65)5of:/ohb?GDD"(W3("kH/=itmBZ7l0Yr:q?dDM1=fn2dBJDp'sd[+n.$C*4?
%8\3A&S`cUr_DLQ`bNd.'l04si0p-ai)iVB^Mcs":p4Z*3s84]A8tJ6q(NQ,kG21rnl<q04EiK@U7^6:s3`eAeRJ-0IXaSGQ!6r/3
%'EnAdK=TL[C3/Jn#hpIt4+6_eH@,6t$b(u`oqq:n^_gtgqJg^4YJ%^NqYA\im;XU\Ac*>`AMO(=VRbQ3$0b%'M^kC)m@f$b_ZD80
%XK)jSKD8i0A#qKPhTPK<qkJ&s`HtXFbe!K,A[PWWfIO3I%p7R1)#_A<bKq.8PO*_2dN^4\m!T02]DU+S<kP[2lG`?B[0:pWCO<CX
%X#KKG%5f:c-j$n%\Gie<p8RiH`TEVFiV9I;eT-LP/=+n/a7k"b^0Lk3E4TXtQ#fam`^3<OmQ1#p5#YEF=p!u:5"<GY/\]lNO+j`i
%->fpXNo$,3Q0oMD^3O&!pLJtDT)0Effc2h>r<iDrb_h@[5$;,'$)i,aIdsn^[MKQ\G`iOUji-%FcG'/Inj0g2FDt,aBPCjehR]'.
%CAri$.]&)ai):J:d7.Nh4F'cE_9_`?c.21/i+Wbfd1-q[564_Tm8p_$f/[\&s15Si3WG$rKdGu[FB1R:'0q1Oh[c@AA3\D,/kuY3
%_&i&F0sQ1io<&Rq6rU.U<0j=E8.'97J=pf[O`h:t?bGTmm!RMif_K?7cs6;h^tnt[B+TX]LD6B-<[Yl5`qD\QH[)q9&`0G*MH>84
%Zsl:BUb+j/Z!F7jb73(+]TN)9`np#0Y0gFl1LAp?\KBu0rK7q=jfRf:H1Ak6*T],7m&Nnmn4#QbEo+A=#phOu?fi=%X`'=%CAW;B
%H_?t(^S,AuWgf$Zn`oTlGLCi_q]1XP0((W4*UmS7"t[#sPeS7jfYaJ9_t?_TF;5:cq[Wo&g^c4mgKU_CcFrDA,N)<=^&;2V^@'k(
%2jPOSI!-WHOdP4_bBLbi>3$Yg@^Lpmp>Ll=k2Hddq>A?Y#fh-r##:VGl*pBHGND?.QCHKPGt<W3+ciGe"O^DZ^mo"0p&):;8))#=
%lDnfBDfN%@ql.2:k:'JV)AFok\rV%'q,?b@p?I1<G(3>-.jNjCK.9LN9((5n1[pft#)aD_]j=dnrOB2%:^\?a#[8dVlS$#CpW?jX
%n-2LR)XP^uL^MXtRu_dre9F99"m,S*pkj9R`J[6g#=eGVGH6*lc`Y6bWI7p["HISqR-S+F:N/g<3QW4_WMr4GTK,%"nRKmWDdTU-
%XIW*&cQPQH\*L]]mOZ&`?[T-Qq0UNFr,P#4R`GcKC>cNR>$socXVpHfLQBl,a1aHB?dG@2cao`MbM/*6e+erp62DdbNLr-LJ[aKB
%]s;%_Q(=HVf'0*\q.]86nPXj993AL8M#$`pE88<@8[ak>*I.D][k\=m+#gs$F%=ueon-#cMcUQ$j#aT.Mj8m8?$oOSX-fAkaXqqN
%fI[7Q9`d<Uh*3?`YB"[7CA'hl9m4U0$)/Gg0MfGI?Rlq>3SN>;"_#L4eRH(W3rk=f\s0tdfNa\M94Gt80QnhWdqX+E6s)o=kc=T+
%IAr1gCeE7Niap&M8q>@qP1#M@YB.b@r`A.EpSI1h@Z=pD5Mk0KXaJFOK>+u1Q?7sii/KtOOD%G)5M7QY^N5H%m@HN!H%4EA8d7(J
%UES+t(aLVi>@>`Xb7BR*X67eO+F44rqo/:lXXPZtnlL`TPc@I<ohfi@<;,uWH%@P6G5^]NV7:a<6Aa\EJ6U6BoDKk'*hp<ODltGl
%%tIO*b)\_k2N&C.k@H,"%4lm"bFc8JWdMD,bI5.G?@5k\64q!X"cl<AhYf+YiH+\A<`euQb%E5Ces"_h".bajKI`)ooX/X`<ITmR
%kZ2NI_#Q&s-g,pHXPo;(_rBk5qZjC.n'DcMml>:r65%5"m8ji<+-[l9/<lbcK"MCFW4*;D`P(@<H?AFupL1%A^/Ce;$#fVqg"a+;
%#e>G>J_Xk=7fM)rhY=D1bFKEm1WW7jOGL*B3]SkVQG_70;:NS?`qIF8f6O^5Hch5<00aNZ$_5_UfDO%3F<":H&SmkdF"Bp8PooD[
%\&+n8fmAeH2hnS=]/38ahgaR\H`QtMX(Kn-BOAJj_d]7u$VL#l:qQJl1$[$SPKNWono2!./ml@pGetS7B\\ARi:ZmUQ<P/mqL;;Y
%"+p%fGt!$>FR5B'njHfE4s&7Fi44Bc&#8RDlTKQ/`G9,cab-RFN]c=[`hR#=m'L&6*8p)@'X1*QV7R[nb,52$Yn-08'K@sdIalJO
%+8XX'N%TA%.:jU.+J70)[;UFD-ao&qaQ"k1VcRcVbrBQ!e%KcXnkmt3a+"uBcRZJml%kZ336_m&Bo2]^gqmR_)5i*G_o&/H$`gW+
%oRE4)k_O\mJU_sY9FCtLj#&W1[>&m=).LrcVq0)AR\F.9+sJNTQoGqU#q0Ar*Y).h1Gq3*m:>LBkk>HlQgM/ub>%K&WL[AW$5^A0
%/CNRGiF$,,3?M)%#HRPN_?JINR9oKrl2>F1LWCgB$^)AsY-_uH&^Pt%9IW&omT]E*hfG'7j5P4D[2U3+pL/ij[!&Z!e\-,ip+Y,A
%=>!P[.-`/:iK/T>L_B:JHtqWqO$(O3_[9/M%N)b7rR(cimCD'-AVX#,hUN"C6(m<ul(I,unj'"&f8'l`BZN^1^h\7]X1$W!M]b.A
%4#m,oh0TeWr>1_hFJ'o/V;S`!43MF-bn$PeYpjqBC@#rl+jW4sD<Ta,gTUlGrY.d^7$lcROZW;dN1bDDMIGBY[IA;^q@Es*pO6X_
%e>.ff_7.Le[s/N7d-9Ige)Fb_oHai'P&7,ar49S+UjVY%X[H[.$3FSHW87C@:1.i#.JY_)3OkfU?MjSD`']d,kl*(*]dfN_dHgnP
%lB<qSPthhO3S-b.b:-PFa<M&$,>Wd<F%?=laAf)'SmM(.k=qii]Y&./K;-bt+SfK>Rg_?fBmQ<62"BMuE1\Gpm54B^'</o3U"Zu]
%JqM9\KO[B@.o$&Toc(FAOu?91LEM!)lh>=`0:XX<?L1,tF4*-?q=:!1A&KuG7Y>RE%<;N$%<rnf?d/P0%#=ae&N_rZs1s#,o1[3a
%l1\O0hHAlk9A>)[eom3)h3]OF(YGBNN4`-[Fp;>=p*BSbUH[V**`BM"_-`%<'1HG^6Z53T,K\3M32,&Sei8Z\l&2ib&KKm^D=?9E
%mQ82=+Gd]O9>Y3L?Zf^,$eJYi'$gKSrOA$YWQj?m^&nmEWO%V3fbjAP]-J@5nZ1V6pqG=1h^`g.r,</hO/i:'Ef%8&7Ef<3Cu[\d
%#loRFWerII)>%2Ki@CqVI,@@<<"%gh[BAM9>A,&iYRPuW53PIsCo6D27uDVh^kn&D=KYspEKU!Dc]#d:9G<K!,$p@Z3q4l9fbdQJ
%fYB8gY'j>c<eIU,E4YgtblT^6.1&=*bC^[JOs'f##KqorJI?ssG(sue_f["!d'7`nr6ISC#o_^Q\DO*F$Qq1f928j_(,P7o!IY1!
%U;isu!VktHmu`O@\PC?[H[jjGJ8]0CHp;K-Km3=XcTdXf%Y)1hq<&j5^AjGA+oKLJRV=9A#/:4,dkm?ZLHfTJ;/Q*$F/BoO_,a:+
%`B+<O$8TH=^[SEiq",$LIV-AF*b7H`<\i2iiT;jk<ABF`do@p)b4(n=D2fL&#.@_uX4o\QG14O$>gYA)M0?k\g4j0pp;f5;c8&V/
%qqD#=U&AF;Eu*:We!P$ROi/H9cW*5*NkO)'NdMb^EaVilKk<'_ViRh@Q:2lH9k?j;CuC`#j"1JdC'T4Z9R_o#^jMs0]B_]]!+`C4
%DK&j]$KEk3$X+Y_(=NpV`7cFqLVqaKc^KTg``p?sn!XfFU$EU@X`BocOq]r5%F)g%L'#:Y;WtnRPse(!T^[JM)@R2H?NUn(Hj2nL
%(7(QR-K1g(J7TQ]DO.<U!b4m.,.p^1IA\L.L8cte9::!BKuX$(AHDGQXJMDr9#gKS1Nc\o^f5:G6ig64C,uXPI\L+(TO!hO&WVKA
%_G!m&[KkiRTRpV9biU.LYR#9Fd(bP>TtepqQ0Yf,T?:giiKD/,WW8CFK1K2XgW,G:[RZ/g*C^;)g0.ji5PgA8j&q#&JD4bcXo:]A
%#n.Lm@'e#"5[5"2RkGP7PSV6`.bp\/L<=26!&KNN&n.rsG"A7Dk]\:'rtOLHOo]>pk/GJOYo3mE6R$9tQ:ZmI=XLMp[]D$I"2MrX
%orQ,TdE3>K"J`>=K4aA:XU1HgO$$`;YsEIlLb%.p1TN!q*!._A@VTAGKTuif)TPIt5V=UBXXn7&N6M9oOiK$+s2][4cDHR`,Fm0*
%2C-mSPQg-Z$.bG^"q=E]NkRmB=iF4J:EQI.Je3>],G8UWg^-j\ltS#-.>Yf_;\q_K&5MCH[PATtU$4s0"/Z_Us881_74b@5J^7j@
%89#o1YadWH>np>2RLRUlYTl'Y4p*pB$lp0g)&n/_gOcu?NIcui6W$)eK<NiW+&oRs#rn_)B0tZ29?j+O2_AnM6UEblh(=^W['HFZ
%^omll=gEcsb))JpEc9\TN\Uln2H'in;M![_fKICh6Ht&uYWT,t5V'b5;UQ:!n/r*IU?tH\#ts9dM?<k$.f>tPY_E7tnhG`H7\,8;
%Z`0BSK`3qa=.%lYRikE/*!$2&=W/knK9%-=#]-2nM<R\F-]#I/dEY(c+\&\eT=-@BJE^lUPJA)+%((,/).H\_&/$4T.'S:[Fr#0H
%*'mS8])d3[p5^?;S7A=_jVfNN+`@IJ-,$hq%[cIQBitOD#YKZ6<E5cGL5&#>@)YMACLEp&27OqN;-=W<X?d(t)5MjBYZeMU!&.G3
%a4ZQ*>VV?S3\8Y/W(d:kVJ<EKMCshq:sC7(B[T^SS$!<6!<J:!C',olCaLS2la&hWBN-5_&jXW\NcrddB[Is:^bSRlV,6YtY&Gfn
%5UqLKK+1"@dr917[_l-b*fsV426f(B1.'WMD*T=O2oXQcE"/$u#lDE*l6rhiN+%j.!H_>jJ0k`iK2<m#1R91]rde*(/l#nk-p4.c
%ct"Qc_4[tY)GF'W(goCkRKK[bD:f-<[oHl6Ti!aFbRmfcW_#j7gK]hk1I06od>+ZPKGI<O\chrk-5ZR^%d=k,&Q4`n%GG`a*ZJ6Y
%%1uoSS-]S)LbRZ5A^gaRYXY@V+q+YYj-FTAM#B61E47iaapaP4aDI<[JdcoBPt[tS7LSZ%TGefF;':UFs&Xop_710.E+]P(+hqSW
%U/%DBg`l\NFBl<a_GDJ"e!05.NTP\q>m&!DL[E3'mQ*]Q1=C.)1O,_2q>>sj'd>h41@dk69nb=dcn(gqL`S7lii4&>BH/dZr"_)r
%-s+1a.COgd#DfISlgc8fKjb#cV@MsoaT_&ti_66(6J"3L%TILT\h@m+:^V[H#/MMNa%Qn+OeKg6ne>s!<MYla=Au04K'HR&p/kh9
%YS18CV<J0dAI<cnCBh1tVdd(]bRUN8_AH]':"h!d=O?UecpoBQe&6Q_Q$JE?$hqc1K/^X^AYLb!pc:t%Nu4C<T*Xt9d_3Cg3Mae8
%keE.G'uh]"A`<rN@<B-a:(=<=\0+m4KX7V(2T78`AQ+YC/]\aQ7TP%l#2;G$LS5Z?%EMufK02d0Hkt?gh+#8VQa10fN"HOD\8(=F
%LkBI=K`t\W<Xht3eL#W53<BTq`X4."Ta41&M?gXf"*5n2c-eV(6+@']J5&FWi8al'`&K]/8MmZTJuoG41jW=V<^8pM$:%5d,D9l$
%O/Pt?#skMeK9q7)!.1@IE!jQ@>)eQ;,9,%AQp:sG86<p$K);rUC;LM`QNq#.i`d!NW$]%hh%\hQN=cF)N;Npkk)^),i,3D/)+%"*
%U^d$Og_)p]C;m[k;TMBBaIS4b8SB6A'LSg^Y04?/^mL:Q!Z$GS`8DJX6NAB8%2C]&Rl!JI;*"C_M_I&OU#c%Y:anh!36Y\H-$Vsg
%E9?To9$&+*\fb,%W29ZuK>`R4D@Sr7atgGJ"YCT&KUPOgQN\LnDU@gB/KGi>K^'0>`^mq1AP>A?1.=N>@pEhbd:REoVB(p$9N;3P
%1+n<SeV(G,L3&I!1W>G1Yc4'.NF?g''hK\IH4-K&F@)?i@Nu#U(lHcB+9ALFkgFrHd"VXqm4f>\'LNNA'(DJ"&J20de2dlZQmf[H
%FTO=!Jn:VT##L1.X+=gs$H-ome"Ar>R*/4(r@nIb2,37CA.VX3#+uOh(_C\C!7VVf#KVp7!1#Gq9!9iq#)e8$"]k_H5\\7s'n[DJ
%/@H#!,(^OHN+'*sK-!Q_$lO!$BVmJSaAkZmKX;1+`'?FQh'%3n38dGa?59k-bfXA)+tV.r%M[/iAmur,960s^S]^4<3EHW$D2g#[
%&E,r"+@@1X_EM0\1U'R^F"U/HFA";!>S.'Z6;53,*s6a%7aMK7+<^M;8^iOL&00^12J*,WoV#B#L*?d==J\k=MGg7%aik<HC06ph
%2hc8UqueRI;'@QG30#O3r;e2%Z7a3u&9.CI+dirCgRO"0BI&um+YCsuEWd%b<`N*7dI'=n6(\iY^uBBW-3djg!3$R::!k&[AX&62
%NnH*G?*OISn/HMOn@p@/E+L.^cu'5!/oj6o1f1Q/8DJ=0SZ1:#BOHkJVJ$*VU$DWmn-@FA-k&EMm?2.E9=&<,(mn`PW?m'\NAZUk
%Yn7'e)Am]i;%^0efuG9r[$`V9i$N'"[N^s.@2NKo+.0)511NSE(`5f&BdC.QW,W[f7$p9*Y`S$'3ABY:2e!GPR$dZ6i2S&V@?\M1
%6*n(_C+T1J^;YbK0]SI0#T.Xld(oVGPSXsRF\Imj;9/%\0<_EYJ#LEt$r*#SL^2'/g.%H"BF@ogOBZ/H"t8(D4"Nph23X/(1*CV1
%3kL,G7/LBh2)\Bteq.?MRKO@H+9k.<-:(S*-39(0`Mco*4+N(CD#%t"BiM)dd5dDY`^WKMARoY?)%?FpAJ%Lb\2om)8?kRn"GkB;
%f)rDe(+$k.aAX6:N_;NUcS1(<!WR]cd\]9M/-H@K@kBs)!7GQf",(YXKQV:8"?r):Os\f"U`P%7i-cLEo5N/6jN'6W@Y]dMfXBnY
%Ced/16:8X%r:fls,(6>+WOg$.kp@4lfYS(/+^##(c6BBtji.K/NJ8-LE6GiF'g_uV2V#OWOYWUcW.J\FYY!4fS46p\i8H7=T3s_r
%H^XNqoZa`E=SJr<!63p$Zsp>d:`p4<a=4TSd"C""R4,(s.)<cg.4?$,J^U<H>'@9mM%X6r;1D4r:,%n\QD-F6JQ,H;&].(Rj'X8l
%9?%QO8jLBaq%0MsPohQFX/7M%$S&>Y)3>/gJWU4.WNO<56rm#I:;B-L66/=Q9^+DX5Y'DbC(6.q(4^Iikp$BGMKFST__S&>._6fB
%Ff`]JNW<Nf%3msYFC2[Gb91t'L1D&8g3mUKF'O<2AAt\_2Ars,+smYfOC^Y&UB2l'3"Zs$X2:gV#5".V@P#r:>tLj-i4TOr-c4k*
%Bkap`S0I"u)'Ze+M?jp#d59S`dU4C\2h=X&QAKVuU`)W*1*mU)S>[t(3Y4[RIBaB%d^$*1$W.Dr8jHkN%B2Ii7'm9m>Jj>bV+Zq_
%5JY1d9bASf;+ajZ;M,,?:,PE"d9s,!WaTng-r#>W&)'k"@]6Zp;GTP@<"/"jMWg;genKUT9USAS@:ip[!C@$MO%mP!dpL1V"23&0
%kCZ=YeeLQ*b`%sp-7h'4h*d?<DD4pk`2&U65ht(K"BQ<QH*/[s?9PAZokPHM(Z@M6"&?B!?ssHfMY(:#RIL';@-\/Nl6p,W@tRCr
%JkMKu0Tfc_(d#mY$-(S*/Rd4)`GHQp\MD3[+<NC<+:JKM78mb?N1o2G"m-q,0*Z?jE*\8oQp5(/!9k7m!Y_&&<&H-&(AW`'@u*hO
%.H2;>LdaYabR?9!+(><[9JS4)A=FH9UZc4IS^qZ!/5ero'kE%Kee"r!B(TL^1.l!1&7oU@cV2FCTW'+<9K;d>F\"ZRRNZC070);b
%0a_Hu>DMQW1.&rlNBAoG.W!Y0,$A:+:F:E^Pf.]tUnsh7du&6QPiA[nK/!KFKbK3+':WGJ:"!4sCmdFqJUs2?*hRFTH1.M4I1h`)
%TUX(mN<f2n%!hJuUDS'_5AjZchEZX6K@tiH#+i:!iS.q6SIj=&.YC&!"G%g3`D&lZR+s?)[NX?5dgoZeMCNEMSi38.+#g2N9gYk[
%@V2>L<*U<)D@*B,BV@t]9F-e:A@N).8HFCLSU?;!5(uU++:2<%AV?*.Q]9+PD*Wu>Jjq3!C!"MbME>)3rNcYW$)3G/Rq<"!ZuHar
%'bqbP&V>fPOEc=jdL;#n!`MZt1hi[Q%?.BCWKSVXKXQUR9Wa\hOC3[+;hKWY8Ki#^!eZ6&BN:lL;Hr7oBL8%:CR(bG9Scq0Nb?^.
%-8n.j.!ALbS>'l+7DOF86Hg"K:E3OMRm`]:qQ6I\Mb#NYcU\2(a^[,o4OJnHL<6YoI_\o>\JD?jC2-k+esXShO>&/Mc09J>V<_#l
%/KBi<Sr*\RJci'TM&(_ZZ9!UX(W^:h%OZ/o.Uj#2eQf6r$#GEcWJ1`C!P;(RU)>/OVJSqbWM1+5CWDA;k)6)ZX0'f6TT82hR.PDB
%A`XPE'!UJ<eLL1V9YtN/aSfKg>L6/9[[V"YC:,Trq>8"^47Po&!$b,/HVF$1H%6EE#@a+"<L=DmdR"3lXKm\R<$p*6I"k7Y@`T9d
%UsP&XCsAVV]8>m`C_=_@Qs#=J/VA$Mpc'X,1/M@8+WR]hgD4[-)?FZkXU66".[(f##"EsH7+>$)ok6"X`#FTg!/rFlk6`Wk_m9:l
%pd>CV9R.NZ#q7bp0F5*)Pr9(UCoX/ZW^9Y$m_2+W5[A1h5fg'0A>mAZ=MbZ)R!+&Fg_GN:no0C6XT`7g>-qd=`@P#bn\O?W=Ed2G
%"8]%=&iaa-)lT[GOG/cF53Kg(#E8%!-cA'Q9%ssqU8_V0Z-Z1^o2Z^:fsL(##96^rJjo^d"A8L=FHS-rHX)`2>@qQZBs35Q:Xc8N
%-O_aO>nUV-VaI\)O7I4X$8l8;_e:PgMPH(%/Wi4de3g'!W"rAb(&+ek=`ciX4MFFQ/J5j/=\9L"/#]*\g#"/)G8bGo0ZV;Cm]Zlq
%U&fXM;FrUfD8]Xq56J]l1>7^T2PN,30']ApUs,\e6=[6-0M=ls<!5UA!XmDP`>5`m2F68sb-"#T3)K[n3J,ZBbRKGZ3%ZP="bp)L
%:Tut24$7g(70;Z1nKs+[h&75kFm4jV$IP=)TA;Bo+0isI3AqpHA&K7KcL-8ojL9BX'bHd%'LWZPadJfe[%C31#4el&2:kCK_30D:
%jHAFp*8a)"K$9/[c@?[uPXpA\9$XB*`LBgV.8$_.N>1n"C*k\SOqQ*.7A^6#BtE*M$.h]F6CT&_9uAR+Ga$)>N]El6#0*kSjdNd>
%+.kCSoDj9S6g1%`/8[KQMQ?ib#HZ<(3`^+;Pt'qok1_3$n<HJO@ZY,q'`u@YUl)*aO7`4-1Se<jku5M)2PsT$b"Lg,'\oGQ`iYbE
%'*dNlJ/3!5,"IFtLRC*?^qm,96b$*`?u[*V<^]G!5n&\pL?/MV]i2qh%rU7'Bu@L`asY7.'q>)_PdKhJ$Xol"aIkYc6h"cg61A?@
%p_<XXMP\/jL?H6(4AlWa)rDG?ANHB<iO!IFUHo^:`t^/9AWPA_aq/M6"YCt]C'J6ZYX4(51s1r'9&HnhL-Dme$WN(:6B58maK$T+
%^Yt9s*>R1V\t$DcXIYBE8`h^Q'E_369VOPe<>:%*P[N8<RDV_@Dt"l"[qq4Qdh!.p+s/A.3EUnMg]8=No+^.D&<=YD(0NdnULQ]^
%.f%ja:n\8pK%2`L_B99qA[Fof0.oS29q2CJ=S>]'5D6=2b(QZo\-TJT8DeQ+n;eWq_1Ol@R5(RJ1ar*tn=ZXnpm\<&ijBkHa()'&
%mQX;TN.Rr4/5p&8Aq0<<H+M#4_mApd$#K]6(N#RC;>?2[*&^9c'-.*hFIHVbS,Io9o'lfm^,V4+897E7Sj%`O-BK@OrR.GF=JZX!
%F0K#+Gif3E_+c(j80V8#MD8N&$$lXrns$)cd+8QLQ2Em]-^Fl(G925eU$&a,VG].ffiW>Xr^/;_GY]%uJe'A_UEfrZ%'`BZD%M81
%hFLJ&lN*r%#uF(?oBBC*9l(XmB=cjX`rD8?\G[cs!<k8r1Ok5gDK@aId`HpM'rq0V,Z=j,s(CffH7_dMlbI]Fr"&J!1!FfiB;>c]
%cs."_!H$/8/].HSE(U7DJ5$D..1H7TlkQcLo%\<We<&0'kE`\NYdt^[^Wt](Oc^5+f"*cJ=?4+U"fdhm?kt;s6a<`PV^J_tq#3`9
%%=<&HTd^Y'&1IgG<c^2J)EKEcYLJXVX)8lFEG5Dt\Hs,sL?ZU5l=rd0oQ6k#I>G(a&j!qpA\B?;2utXpXGeorbdQ(:!0:"2dJR(O
%%[8KLWYN>Hb5ntBptfRdU+lE7Tr@SrGQo:MmTORRlh/0O9<'%scd""b\$"`>KDs%e7g3Y=BfFo0)&;tY8p2uj<,*)ag7c\7!N$4Y
%Yb).>$Ft(;?*]sKoeYr2K@Hh/=MWDA?g7W1K9D]gF&04@cdUU'=^/.$\S`KZU)^/@*fkM^7C)s)j.VN8]YF2VIiMiKbuQ^o+SB>2
%:((=WTor?Je$.Bd<k?.kM`06U9CoOOkl!AG52ajEjD)T8Weu:gAGADI>PP3`:EN#'dPP1m4toh?jqg$!H+N"kc!NTiY5#[KU:%7%
%MJMB4hL3(6L`H#Z^'M*9LnGU0:VV'Tf#7=Dd*j<0n,DmM\$GcQT!>ogcP,.6RsB.'(+HMsQc<[h-%\%>LA:@8LRp,DJ+jcZ]PC1T
%G4K.5H/t.tr+#J,^g4j$D6Q/A&l9]5$"qP=ShGA=pQpBCQBFI'#6L2umg?9>M_iM]='[YtD)P7(r>=nkl^\MK?1S!_0DG-V(%8l,
%\/.<O[EE8@93Scg2(aWRX`GpHkc1(J;0_]=Eu\>jW)3k=YT"JJj727bs)jllI>BmeaT7q_h=%BE<jh&N^UR)([)MJN`ID,GbC<'t
%-DVZ\GmS8BXYekiqSg2Y/_q3>!c(bMp"&;lVMEG!D-l+kO+(f2<SaT^?ic%mk2p\C:tP2Z[H&Uie9$34M]W0S6&?ZHS$u=s7,Y4E
%-uB_AETj\:?('A?JkXT3c[J"I\tD/jnF#-d+4dhF?dF9ooC+On?`0r[RRJbAL93(tM.PhR!@bm*I6."Bah+%Wpr?YZ\Megu:.Vh_
%b9b9u*Kq8G03c`]ql;Tn?@HM/!B/68B87gjod!u>TC2\5G1T"9#P\9!CY^#)@[<L]A]Nd@Dq>dPO4*"Nf?Ua[('*cVJbia&+/]UD
%0n?f94q=m&,^?lD%;Rq>P>K?DV?iI)<BnQKkj][JV_b\NiRr4D>o6=GpHPc9oC:bjU0R]YT-H9XWM><2T/d1K5SIUMMA:h;IsXBS
%A,Mq05L1'39lF\qSN3X*^p3[ER`IgCHT_(Ur1$;3:@G777mstPpC-edI-us4g<&=;f?S^7=I.T]AMj1.MN@[(0Va#j[[CV1Otl',
%CEm*Q(#N4N#`%is[EoA!=c#:9A!&CO*f&!S55t%F0?'tUc"g@Gplq?pUMK_\o?eXj;"^;GD;JF9!_b)Y@\f_q_db/PGpWl$BbA\@
%k.EhBWI7ZfH3@AC,]gQG#P%!9!(R&Rf"#@H04[UM8ogAlVAMi+@2Zfk2A"RIY9C$U/Lqn"Z7JOn(42D##65).XdQAbkKV4P`+&*N
%ZH.9cXX'N6ch(\^`H?OT6<h%8bS'l@-FML<,alaHq52^n5ui2!9NF%i)"uP+NFi9$;@;e(X3`DBA7_FUQFkaldn*aqIQF\9<\F^$
%9O)_urb>XqZ*V<US(`1n*V<q/e"A)rGV@Oj'q@p3,:+7E8U"tN`etpoj;?47A,*CrPZ=21YSdfWc^&+[A$?[L6suV:&(T+1g17^1
%@-(JEZ60f=FC+dOfpXKI<"u#!Xf%F+F25h$nQf=dpd,O,\U"&9Fa1!;`FJ]XfDF6Nihh=*QX9X_<g)j/9D&^3e&9OAdeE@J.cK`,
%fAXJWT\2bN3UT&4!UDJRq>"B_>P5>sCQgVm`88h,f=&44=k'019_"1+7uc')Tpo8MUY;ifjJZ[#*qQ>&*<[Qp0%E^hb"6'aa2L1+
%ZTMfY3u(28^a@#B1rJK>a]#58AuT]:BWP?[5gcZ2\eMli",bF=CV8?[V>:Gc)L6X8;<PP\M%RRhdXB.hRQL@4\mYA'Vkmmc0Bc:1
%_b5B?00!N`:2-6e/A"i9ZVk?ZS--YF$Y*AF(hUr,k+_f6YN7lJA^EZ9#oIX#bEhI5>)noSO^I3d,6>6Be+kMZ2F*ZT3l!+lUUH%c
%0r<uUkm/4"<s%\*ce1fE!;,CIrC-lW"3.V]ViODWn7A1CmPKJ-<#`<Z=hFZlb@8]`V[FC!e6K<:>t-c?[Zc7o,;)g8Mq.`B>cVmQ
%^8lDPCE$#-*f\mNpJ.Sg$uB6Cni"[E`KBo/hY![I_a]9-Df1P3mH3$R_egMUH99IH(N8Yk'4j?GjD#nHAY_06W`V%3F\+%I?U4%M
%C1>+ceM<nGL;n,u\H5=HCtB;6ClM0KP,#?QWm/T?:EO8S<8/g-V]1*,^7Tg!-[&a&bN^p.oLGoUVZ3<)>h[*=LsqiXl:CIrSFHid
%[Zi,CCAAOn19FAM7[+1:pi&g^E!4(IQ9!Cj4QpuIorf+[p7mM/*_uPg(^UmFO]oWE]"6*DR"4Q$8[)J>,BkQ,l-%7TC,'YX8mJYE
%_l!F3RsQdA(YC[0Z27P%p)h3DXlPhMkR17WI3P&5P@COB%5SoBe5hl"3tP&NJEt)pW!tsOV;`j]!M'oe5,j.M.K[I=?!*C-P@1Gs
%@L[)BNd@<uGFEX@YR.om-H@ZN(o"D__r!EacDYR6mOK?,%/&YjV-e58A_?21>(62;eZ'&tLTo<D=)@bF9_=D:oX`r#*6ZpZ6I$i&
%k,J&89"YV4hYVgdg$jnlT:H_+(5Ie%p']H3?WQ-E"@K;)F$"W#f*3sbr#*su`@(ZHT1*DW'i9lL["GDLkp<lqC'kP1YCgM<HBt@Z
%aZpeh;rgT@mR`M:X-&rhJC*lZ[4F"eg#8a+(;E_aSjR?N%a,VY:*mPoCW0,#Xc.MI/!;QX:'oB.:RJ"=<+3#"0HE5`.aR[^C6fY"
%<cl#XkNd.-:VKUF^HG:3>M"u@IkZ)"29M<0)5_Q!WAaKZb&T/\XXaer5[]dm86nkXR#9P<K2*FF13.-i>k;`kM'WfD&/($[7"::H
%M_K"3&/;M,/'QYIi;J4d)cN,YSU9`8rHcqV9/,P=,-\B,k2#&g62;-O+U/4\b^(oBm1MS[;?stSLn(].C8p^gIJV8*DJCn2AmA<i
%1j)o?21Z3UF#G0;"0G.fa(+Q51s92fNW7)dl]QC+"bg8lM,nK)cso]aZVqL'2/r'H>&V[CRb?;(>*Vr?9FBu\PAdU<HaEWnh@k!#
%=r"@g][0W5"'3;f?Hft(etfHQ)_]o<]_"4LQ234t:?oU[)eFMK8\3edKT*nh6Hi5kTU.VP4(a2]GD;EjnGu)gP.+m6%1gFWJrR=n
%kq1/(2P+4_"&Y.5.nq:VM=r7M%-k^J9tl)VBlCTO)tdWH=]UhmRt&h-F7s;H730bX1DWg>\q`MS't]Y::#+BGe\YGGc+Ie_IGJ6R
%n,&j\?3_R_o^nQi[P*-m_LYTQDN?Y+`ATP8NMU7j1OMg=6u_[JmCH`Y6jJ[ZLW!B;phZZBTnaM:N:p_X=SL1*TS3Q`6sk`&g3EkD
%;2.Wj3]X%U@h-lIW(j9VcN&50Dbg-`21o4+.5PTERprcjS]SAJ[U-na6]5l:)H&_(%kT:QBW>u?KGlB-p"?pKh,9-n<47#'iaiNp
%8t@F`Dbhl8qWd3)X.!5cZ'([QZS-YN\+-3Eg\0)0d`Q=*WJ=37M\M"FfS!ZPbdmN@f@<QaDeo$nT<P'T80FcF[bdcT2iCHR/V2Z4
%9>$uFrip;Q?h)[5_W9/Mb>5GX7pE^C?9a^/T$,@UR''c<F//WB34*E!qm*&HQc?*<R_bA@eHHO^`'@g[cu?1ITQjjSRf.=?%QEm"
%Q4YY9jIqDES@TVS#<p4REid8gqu1DQEi&P*U>AV`H`#+gZ$q$cZVt*Aco.IZk)MIobm?EMrC1ible?kQo3Vm3)!Ga?^'eW,2l^Wo
%#A!2IS%.mLZDRL?].Ik1T@gg`D&mQ5\<n/%![ksI@221d*BH=Lck&,/pIINbeslF<B4BKtZh+mmAc:^:7i"BLh6<$4*&cllGkTqe
%StKJA9cOA;D(04'h=p'[RCkrVHqJkYdd5D4/j]1Y?]seLf5NVse"u')k&AC52d`3f*n.lGBo?Ls!tfR@;(tleBl%41CPT%6oDtN%
%/"_o"MQrf,\pY"nNt570!4FqT:XG%1#+f*n7*F80rs.,g\0CdLe<Z#"18-pjV]2anR/r+uWV/#s*6/==gsWm"4I+mOULZM9i\'@g
%@+2e@3!=Z*?;[hL[J(#^@WP_X,J7jA_[^KmMpZ3sk/e%"_F`Bi\V&RrCjEt%h!11rUK5/*7.Gsi<t9>@ZPB;mZdRM*g\$_oa:Yct
%e-itcW>u!g9>rtYOkAFJDE+EBe\":6-$JQZPo3u1dkBAi)bTP]pPU&J-8%EUW[Wrm\eqS'KDVB6jc:J[9.f1RWSX82GQtP-\Euh3
%KWQmH5+1:oWtii)iZ$H^.&pGeJSdl;;Y?@6b(8-.%]B0f<An`"V''RW7B&^a]s.1h\%+]TnC(I")Mi-tBi1738+?%[D?aK$OT=fB
%7pEC$+)S@22C*+P#&W;+A+\59;K'd/<.f`Rl/][mM=ge1&e-mg]*j5YVCNVJ@<S5(NITI/R[5@kG#?M07c&S2?\ld\oR965#hpb&
%OZ,$]M(iT4i^+I[R?%I=[<pN!'ik,WB[IkUZA4RLC5K9Q(\24A?5%-X?/9(mdI`&V;GFmO9@b3\R:j_4.V%)/$o[YcU2ZNF3`0!5
%<UOOTlG.]4&c5!S/M:lg>B6gH*5uAYRk0.T=ugQc85bA[]@7,D8[E]Q/:iA9IOI:>:OsV+IEWYc7mGusGk9pUPYjOfc_7IL=b&].
%:35'US'"(N->i9[DG,eMH"bCS$`qd7'/YBafJHEsFu6uKDJha`P6*#V7Q'Iq]IX>@%?j>"&qcq[9Yf+u9n=ZWip/F]?91nW5tc8D
%g#*do@F^mK+1,;)PQUQS.@F0;K?5]paT7;b'ZWfs.0<CE%Ebmlc[\#ZIj8c`ZQ=e?/G$Y>im=!sWU)1(NeC5TB_2P-'^1@g;'<?j
%@bj;k^"AH+I=BmJJ694*T:`LQV=u2uruI2nCenn;(ViEqqQt>&Y/u7h\OUG*?KR/=r/W^D#Q<9:PB!hRgh-6=ZgP3N[['_/^+2!3
%1Lo"eZ;k<;'2?iFR+\W%M+,:O?+\$=GE'6X'r?4#;,,B=g:`4;7<KiUq:XAKdiIB3eS7ut42k3gI=ur4`S41K(o2)p>UHMgJeJU6
%;j\5N9t<SuoAp.-Ac>/RD8jb)JGt*OQ/V/19!a-E)XL$1Yf]Q$7aY^Pk-">&?itJ<$aFN[g>$%lXTL]!oB0Im;Mk')rHX]H)%T8g
%-_Q#,2c`%!FKj)d4+mjjSCX/e#glPYO8cLnb?DLZ-*k+VqZ/V``4ou+rm37ZAZc`LoAFDmcMQh;)VllZc[)icS3;PE\6:.oi2&R/
%@e&<W`?Qh`e"L6S<S^-E82V4>VSPas&8\Hfk?K4j%(9<oh^lKMeSui!C,2eAR_MeMQurXbqeSSS&Qq_;,6s^j$_dkMS4Y5Z5umMr
%3)blrXu=NnQs,Vi0N+K#n*fSnI)C_WT-q<<YAI"DYA6/1:edNa]I(%O^a?f*C`5C.QK&n&i7I!'K=Qj-p91TE[6l5QR+G5SoprKh
%OMrGuWNr+e(!,ZD;2)$n.g&p?ECpc_<KS8$W7E1BC&o61@QVJIKu6s0RQ5CE$_rmX1RX@a=c#PrNb(ZE6^(r>7G`)CQsW]mTS1uX
%.PRGlm/M,_TYur5O<sCco:g[$<5Bi/U:94J]d,()KrB8E.8gOE7b`d<gt39D;tW6:[f@Ts8,]P4M925KU&eC5St$XGX4G@tH`%X9
%O5eYai!ubaX=KCE<9/j'IclRoC$Un8XEau8AZe"uLc(@A<rGLq-_lqF'(8`-UqHM:SgLG#5a^N1Vq@rRLV;#)V_k2J!_;;FDFO0?
%.uIB3iVTRU6u>p3h`TY/?82-8gl#$jCm-e24n>Z]"68W)FkE:kP@mTS[$P7:kJ$rnG+R5;FrO4=@9-\uEMmu*cAo8WfW[^CQOD$]
%kI=Yd<D26M$lf[[3#slig"EAW6?C^M)6s]3.M>dom+4>T79h"1%U-X?VKe6iclP@u9V[P+gWS@m[J6\@$nW5^#;Zk>r5$n(-Yau!
%JJ0GoLm>H4%lJOf=.d76,D4L[)?[$\Wi`32VHaOlZ&<[<@R^0O,,.J&ZCO-hf1\"BLTS6Gna%m?P#<;YZL?7f_,a2K2H$'YCT(sG
%WubsDNB2r7_uWtCZejD\p9'<#-+95'E*p5]PO3#Ggi$pr_p;(6NE`aC9%8>63+8FLir.r^BN[26GI7`hrO<?*WWpML%pmtlc,YQ,
%@E@A>Ya#uje@6#6CSl,fj6=J2Rag,J9o@e/gmrN',KZYghD$];8$d*XC5^ijDO*?[\@$bIN2eV<Z6[`/^7Tf;BEOJV$>1Y2(;uZb
%o<@SqSe^[#l%T,HL+f?^]A/k*[\?ea;n&dlW%mU$R55S8I,g#VKVWV.Z@NI@Kh%d^#d9_jX"*5N8l1<(E'mQ4:F-X')sHet$$f]U
%\,4csCL4#%FFugqp7/hXIV\gsV^lr[ma,QD6>"^3YAu#2D5tK$:p>e7ee-5m-&SWil'b<i.rGJK$_*H4DJX^n=""gX=0+32,"QjQ
%2DJ\(3FfF_[.]ieqaG3C(Ub$<$iLY5g&"6\YXJWEP1JH?>lm$L%4m_gh<$WP]'Ulk#/&(i%h!"q4M@W#kN$L-5*",^*L-<]G$E*$
%!F+8:8+=]k?`V$:4(8Be[JbZe-`-.AnSU/@$E7nB\Em$<an%kUD0L'j`C6$3Eo?]Tb2KgA*]5i$BiQYsDe,V$]P&mCj/K2Bd(C?D
%"o>Lo=K/Vl*ls1R9GSDl"1M,=@BaEOH`:F[XLX5lAl7/$eE1O_Kk_K&ZL?XKW:39."+9:60M'(mN7]seY1SecQcJ[lGP2]NK8^1g
%.c"jG?>kHuo(<ZFAquZnn`gic=qNu?gS=8TDYI#-.GDdt,(:Ff%^iapM/mPX&af"Qbmi9ra%OiI08d7T!"LSZ97S,\**+<Yc5Qpj
%9)$eELCZVYX;8!SB-&N=QIC31AT^`/l)i"'VdZp+"o?k2>S2Q&`+tC888I(U$fn<U87-W5P,#,6$L@SW3AB95[!6bm,gi\SK*jVP
%JSqR,9&J5ZO1eD[?>*[3n$O1"Q+:HoRG367:d^2tj0a:I5C:CC0/BUM5%@r#`b`]lr/54c@u]sSF#i_oHg&l[Clk)&#,%";kQRnE
%>.),cIfJ-m"ti0H+'F0`iC/Ho'[5"lU/<jI)E[g%-19T0MK8ai5L1.Q_NCH_M11:FBY-WpY\l9ug3)ZHFl6,oQejCq@GHrm[ce2l
%NOHKohdAo&X4?;\Lt]/"XfD0<<?k/(C30\o>1Y9-/5a6R=?TGDL7g'PXZ@sWg*]d@N!R"!U>olXZ4c#%UEFB/jC)Q\7^Y4DrYX0h
%(MKtrb(ks&-J7\<nQPmq\bq4MU2TmjA+@WZC]L.THh?=PNjNeI0W,t(<@g/^TO1o/]dr]&*sFq`)3eh<)>o@u>\Hm>fi$<0<Js[j
%`TnVZa+s%>lB,Rsr:Jr*N1kZf2U8$C02qZT6]tRZmF9>?pgbT*Qoj^-Hfe)[>\YPDQhC_(KrJ^M<H%[9N8V3*_C-I@h_YksSU#se
%b2806^k^JZ=@tF3-&-D9n&S@ccOfT!Xg0<TPs!aW?:U!0_SR#@cjlb2]URIm?bHAhd_rGcI4;UK6jZ5jX&I+^YDQSIL+*o!3dlO7
%-3Rc#iq4;U.F(\pqWX0qR\.apR`t-?ZmaL_6Hb0"+d'1fl86%SEEJ+UW(C?o](Bc>KFWUA&FqBf65"1_>4VN!X6]l!1JbRtLOW<(
%pWX5WQ==)V(7.kiXMaN.4a!YNR+ffcI]7T-<I>;fEt9%qV-Tq%EFhQlqJ:>s_%\GhcF^i2[.6XYGF9qS!;Kp.Dcb1T5=-ss^$b4N
%AFZQYZo6rWP?./^HcEpW5l_km!un^VYdP5tqc[!NXgG=#cmDp^]coVlY`CFr`,F*\)=F=)2*cfC<a3gtl\ZDRB:eP4)CRHj*dTa^
%?Af]rdg7,%Ta\+(rqG=)dne-%UI^GfcM.$pWWNL2*3/<)]ULuJC_Je)HRRF)[)^dZKDthBrt/W1%UTo_B2Lq\;ga_Y$b4JTqjNiM
%+"eo2hqi868)4$7KUX&H)KKjJlN`U8qQY[2k.b^;f>"$-$*,%1G15:`jg6%o71GWr=QAZg;U&k=n_[M-^[,*+lBfZhV8NN)BV50a
%FMT!sT8RgM7rVYG#H(#/1%RGWdtie%X[E_rAW7dWM'BkiMOo7=9@SBJM1!282hp-OlR;8ZSN(Vc`Zr_%7r#^7nYu&m^4$=DI*2"=
%S;3Xt9!I^6ROAbO]A'^\i@fUQ2c#HW+g$JG)oul=78,o!YGcor[+TkD[@1r-99$ag3Z<_%p/$m>CEm[p%3jqMBf:?PTA^6%,HgZ(
%Xgp*c3Lot[iSg"_OF00>FuKY_j\NbZ#ud[&]3BM9Fh8Q!XOmkU>;%mPcJ3[&^K-A#r7'i;6]CuhdWYWJp=tg3ga67h=D+]9qAH0-
%K#37Z`b12l'/;9;ffE$/Ag>@nQ_n0e/cI+=a]AdU;EHflio).HI4dqD<$,(n&-ZnB;Y=!pX5*V!Aur$?\_HhbEMQY%a+lXk6.h\:
%L15l-W0Y(0'['n\@$9<L@Y^AL[rth2W`N$DC%4nb=_C8@h52@+jGZh9$-MAsfh-^,k(4PNNRY\//L@iALTMLBh+up?8X6+1,fqU^
%`-Y4@0Yi_OF.)hgOg:s$\fE7oU)>a#PBnZc$<JWXr:E"%L++',j'@T:2#+nl7Jk,/peUq<[;atb([np!X4Z)ip/p5G=DJ(c9s4T,
%=lp7,c5\d3D=qD0q6Q@)LA0,JDQ[06q4k>OJ(8\k]:.u`3r.2blE-*9^Kt,%]e?KO&r.#BQ8a`d(qtAYSdoi5>*XR!b@`N=N]DKd
%gkQ@lWK.H6+$l,7`/^)D-+XL$A.JDfAl&C.Q\LMCH<J)@.Vi2.E@-2*'KFB5@TBT.)nf4$f*HX[FjD2u%m2r5+[dZ+nXa@UB0<I'
%F:o1Q'uu]\;<FJ8`'<_Yo2<*@$\X]X^`$`R*E/HW;krar0JJ)n%;Y>u27n=Q[B`oc,ZmI(G/(lEU:IM]dKZ$SYIDajQ+EVd_s+8'
%8W.q.KB_5WqJ3o4J>B@3Gq24dH5%p$.pQMc<WucW[i2\cn)i=*lt4'TR,;\InQ/pVq3^U=oP/Q,J$gI.14@R2.#eQYW!/K[OIaOI
%#MZ,@SHsY"o(FW6;R!:gFi,>UdmgU[SR1Rf[F1HFZotZfo;AB'a>eJ&;@@mGW;DqB)]60T`_(3u%ae\CnNJ&4V-ahj<jG=\GW;n+
%\=D&h8bB86,;DOg;5;f>q+fgG&[LQ1\1PBWC,nGN?gVgm(Je@jcY[aoOtn-A*o"W`e+e#o-N$$-cS``X[*oH\o,c]0##oo]dDp4s
%2tC`u7j]^T66:%FUGh4E,I?M1GPR8ShH[mTiB;od9:!u8^X$[[lCiof5@hooY,:2pSke7IFKmafSksNhZC@Si7KiOTkRbq+_E?WP
%K7)p+,ID[PfZ$D"H,Ik,0XI``H+ONFTac$G7A@QFfMW<7D78<F,5@jcmZl]+YuQcJV:9b(4:GPXDOTIOXe'iL\S5A]#@!Huj.^A;
%HeM@6r6Et&XuJQ_'_>T$=\IQU(_s10N!^A0d2Z>,c2`:s,r$mNd2JjJbm`DBr:.,tZT!+-<li`_mUkY1XX@)jVU+sjJ>r/dgY<3*
%Yt%bqm[j?aZ,![PKD9r`VU8tGW*)"l[5#E\[%Y50fs:%l^;&&gpG@Br0UXXh*Z;c.Vn(>p#-$g;(&U-7>0@sabmn$>0(pIY85r=u
%8Lg3,h&&*ClofSWSY#Dk6fO66S?Ln+aLNFoVDRE[jTjN\[J=Gs4jX**+^8L,k%2:r0tQs$[lJfkh7W+$>1;V<=#,RVhtdQpApnGA
%GN<4WYB$oi$e0?'Nn%.,+a[,@:#\b73feC\)]5q$Xco:sj<jB_T2,-0nZ)7Qf2',D2Yu3@q]R3Q:K=:NX.G.O[/Hi'LE2b_]J!E[
%M?SB\YMX94r]R(\^OEd<BclEB\Go[gEW#/OC_H-cH8(`IYt/NtaBe>Y:]3iN_-aLJlsR1;,&Gj"$/+fH:RO3gmo[$()S/CcesrRa
%qB@F]*1;Tqdl?41G*(D5ZbP.L5-V^s3N,FjO]8FQ_!LW=40l"k$^/UP%1$4YhS`6F:T7W'hV6DNfI<b`mVSmhCQ>2I+(;n)NO&@#
%kmh(]/:4;V,@X3^8kI!AT9AVI8'^uV:KMohr-9kA>Y>\Z",X\b.^9X+l=uqd2HfkX6,;sV^_Ffu6S+J-'b4D*`81Ad?Ml<!<(AOr
%ebrQ#M8u*?[X4)Mim5,dglOcTYkSWKR3oq20u;]'k[TS&&c&4-`AfWI^/Kt8L<T29WYe79f"GN4Te^XUdb]i)g3iK4AMF@33G1l@
%VG@G?OdK1qc@5AmH.thLCYc[EO?Csp;8KO(_.a>K9"u-o]k<MUh:&P>ag5.VAb;CO;I;Yp)l4N*Etesc-r\nHoUjRM]iZ-G:0N^q
%\?uS@@Oen[;+C$K4OQmu5]9IMYgo9<7DBrF\4]iNFUHk/R)LUTNr"7/>olGh4/9Xr<Xggnb(us%6]CMRZq,tMT#fek6DGfKf2b;f
%.S<Md(IN\p%&M$VP-@^s#4EZ!=0J1uWpX9@#65_+^`5(<WrbNSkn?WSGYar&[.*0JU5!3GIVhd7/1C'Xrks7Ai)Ma;Bc_IUB1tDc
%mb(r007`]TeT5?8"SU'aMK6[lp=n/UhbgOBCkT6cNceE2W[19O\PK\+Fap$M08=[SJ_us)pYZ*N_-koqlme-;jU&;XA'Mrli*c6j
%NbXpaP5q:Wj-%O"lutC<nMemdT>Qr4_#VX!>68MM)XPEmiAR$#T(=reDh1U@`c"ijJ5;b@_lOiTDLR*0(]V-<WELq34b[)g!4s'p
%2H3JqV!VKgf&=TscdkdhSh0sH.%N]6#G'W\&DRCBj@"@<8_R)34_=">d$Y[Q]6U:L-/RC^_Qi1TmEgW6s"JFWT-*=:']Y6/)4,,Y
%C$gl1$<QbWQ)72W7hoAAaq!sr.Em.'&:X#M]8JB<j%<!D8IS$_iQ5#\i0a=%P'O_"h5t%uT%joGH[p*'&A?/j4F:aGV6nC3#bpJj
%Wje3PXA:RoI3dbP7N$4?<nX&'.DBU@MSld83'$M"!ptQ[$8K&j3)/%?BQ)FmcRdH"3)hdFFRM?j&DPu/&tdLro\u;:kaq%pCQ=N_
%.n(P;KMo4Loit)D0slgW2A,R")nT;&I'tfCo!^JT?*L.;N@eD%QUAVe,aCrerYd?do*J.kS"5"$kc_rh-2u51USZBG%l]".O*f5b
%ED`)."d^T/05PHVD%WD?LD#N&6hM,Y-!OVP]<*,lrpl09?K?X/Y4fYH:G&ZHCdPAZ%&H5*Vi/lpm#Cp`V^"u=]YF9ca5t#0`:lK9
%nHh_1)pbUC:GdQeBAsSCEHYHd];e:I-#TN_><un<o&J/%EI)WnPmkW>VoKA"Y-ufc^N^:EJAuQDq*IN/0?6"^0LJ\A[ZQ??b6:IH
%[E\-DGff=*I<+QK9A99W^\c3h]hfC_#le&egKu[0!<4p]-d?TtB%&@bBZaRQES*#c;N?O(06r'A(]V-cio`NP@@P;4d+_-Pg@*a`
%VKt>,Teg6,F=4QhAnQI_Xb$35d-Ik;aIe@'SGSejr7BaTqXE,03W6[m'iPS\[76birq^7iFS?lY1@3BE`mtXJNmPg.]m,ugXLR*g
%;BiNqd=EBO$WBnUmG8UVMs`tJ^@%l_OkfcRdhV=iro+GGck5S9;L*Oe"+eq\>p<A:/Y>]oC3c.:[Jo5WeL7S\W>>M1Fn4n_&Lkkm
%FL_(gIp=3^!50[lH/js$,D<K0=Q7h"BH(b'M4rj->mIQ/64'5'HG&=ph-^0Q.T[VrL1.@GcRTVXK?:Fj!8RGk9<-,1>VE/iOp\Op
%7;7;50*3tVT2%=pq6(`RF%9k=n_Z7W%%0D*;=0-t*j%ad9mbkS,pWo48c?bnV^oKnouhj<Ct3lud\;ti.&h9-F/@7<A-@NKVTC3O
%'\u081$,`/O-dMkqoaKG',=!!LkLPhn\[8#FB'bR$+<_/o\!<i3g"T,3Wng"4Z4CYS4+D\?9d[;*crRo+9'7&$/-3nnM7\m^8JC8
%PGG?t"4LB4@-^EoBsu;`!.fa"(!_,g-eZW9\,I3^_VHAh$LR2OV4/S/AGUWdXj<8k.;/>;%?NEj-7d0h[1DnhKk+8qdCtJ:l!.JB
%/.[4o5LYN:RNCcMhg8WU\GhtSBqR*=R?(s9Vl+*o-G'G[LfHW6Q(EW*enYX3X[\%fVYHm&73B<!YhHY/1$Iq2"2aNoGs151ah+$l
%O:a-q#b3DER.:f/3oiR+A?4?FC'5+OeaeGBWM]P+K\2n;j)qQ>`1JDmM`2N(k)B1`VYtTroQ83-p<s9Ar\k9STW&o^6L7qf?sXch
%m?liGNqa[>9=4!sEdYCXrS:iYr?&kgr-:ffn%&PpAk2'FEbf_Mn);VX"A8SX^Aiq/5"Ym]9-\ca*YU>6(Wi@lj1]_hXVZa;:DZ.7
%&\YUVj^.+!\nV"q)@u-B))jg'&nKk`4MCR4LK9pOD]m<E/T]:+H>Vi_SZ8%NK[atrV&/G(M:/KJE`l2Z]rIFnKWLXf8[`p.1:_>h
%GWS+;Mt&/*h&>/9Yo?QQXWs22l^ftQGcsWj;nPZo:6BOGai@/=O"cioG7<!2D1a4@/@/i,U]=c':<MAK,<B&+\9-DeCg.5ZhN=Od
%G'3BKNY:1'$g\.s]>)"&YhX=^G5aV21!56l2Y-.q*%`\`<:ltpQ&UoGAFr;SFB.0V7XdNcdYgKa-b>![MJT-01p(tCm%l24.O.P8
%4![CniPq"c?#`X5`_IPALNZ662dSFoNnnE0*>!LOnGT\C[(\RtXLB+HJA1]Ob(c'SPqlAUOJll/Oo1@2j6\4Doo'gM6m6Ts2Y*:1
%DA)/ch!F[=U7=:[TQ5;L(\_8qlsLh8cjP11Q&dHBS))_H^rKIRcmIF*Z0nEe524cNk"%().ih^,:0O)62Qeu#\[MQbejVJLV&T,4
%M`oAaPJ?nC4;)i-e\'r9U=)?!ieI^CfMfAca$Uq%H)(gpmE`Bh'Vg=VB-lJ!U"Hg8iNaWq#fYYFFp[A:Q#bk9Ha,K[;tc8DZ9j7P
%/u*][3FLLY2#E<mFf2:Sf&[tjC\ZO`GTAR-rn)L?9;FitP>DAU'ca.&[SJc7L:jrh6.grS^Na-pMp-1QVDHbQ.k&b7blfW\%CeF-
%'D2oBm>7Y&6tUO:7mpE/2*)+GcZZlmXoc.%\WHP]rSj/!0S]]Z-qlY$/4YeijJaDYBSm/G-oM4nDQLrCL%n/RJM/t?nB_fq`[T>X
%GOH@J\@GhPZoqkY4&P;Eb%a8jO",^p]#(s1l=M**L^oA4pNM,_casu.Fn2@HJ@ob>FV#8s*m7k<<:WFVoYf4#icD]o:\oHfW#'fZ
%7laKHlC9'CI=4ccKo%Pq#/iGmY*0pkr+>+plP-+Qau'@Md\6m25mm:mgd:ao6-m)qo&bKA7fW<5E;RY]j3<P6D/?@<gkSAH:\8L*
%$Vn$j]=jR^^l:]]-2[2eYH8ap'P^$Y65di>@KoE#[:j!0dNt2/;r>8))!5&5hNbjWWL,'g,uE$ua?ADS_em%.=Z4$mH'<?Ifc+W`
%F3n`l`pQcoc'h:`dgJ0"ffKYt)W_jWkA*LUn!Q02o2700Zuasm-"cs\;oIgbGX*>]ID"W<Dt5-#s38CS^`_q%II%><Y#,Y?P`dk>
%D&KCQ(XQQZgh&c2oQ82FqU,oDH?P/0cQ[7Oi$nWuI'8khI_Yd%?i@UoWUaO(]ftY:"mhA!77CpVDZ<-Dju?\p'a=N+reX^@Y?)FU
%Vn+4T#%>Go_(2mc<h<DnoLG65iX,GlhV!F\=<i&qh$fsQF8Rr5:Z.#M*pnQ\n2I=,?b)qiPBcco$HB[E7Fa;UR(k$.H>ZI_p6!K(
%E?h-=KO>%7TNg0qZ^Y+SrQLa(`p:.F]>$?MnJC;?$M6]KFiSjC'@J_*j=Qpl=5#iB^2qTjc>3XMO^baL5(9o+Y.+5Uh_HQE>0;df
%$s'RJ1/7<4N+@%B,=-523:$$M2t-K(?ZPV#I+GG*%qUrBaVDS&2@8pP%]hEZ8jLb$S+]XTG+I?g8M'VWB>iJ\gWed7N;sogn\OUD
%bk="SDTr)9D_;p2j6#e/ju>8Rh^Lisc<(]_[_b9R;6gW@qr2MR:R>Wq^c3$bJngkUEQQ+BHg0bhGQ4>;amW5?oq29ZPJ8$]V>NCp
%nMgK,^\M+3nUIOuauue'D8&L827SiJqKMO<k,hUXq$O^;aJB'>13N+)r[Yg7c*cBZ4l(.l*,tT,q\AdI01'mk,%Qb#nN&W;X..Hn
%.J_fAqTT3@?=3Dl!K_59@$G&WJ=iD5'-Eol_&K4jmJ)Hn&FshLBg;C[a^&-[4`5=Nnu"MGlIUK'X?$3CJ)Ydek085$,nd?qAF3W_
%`<.\C*ng>1Q-u2MKrUZug*!^ke\PIr(B7&Y4>$rgpdVMqhE>S:q"0u>p*XR<C1K['9\;aA!Y;12#>ATe\<DH<I?&MIFDJL6pfk*)
%cJ)"WqfmU7Is$&uk'cUAQP0$[E_V,llAFF-mVo^lG&)0&ZE(-OkYPS*H$@BJL\l.o3>F!K7=S?qZg251jEJ=HQ1%`Dq]+M+S"B21
%mH+l8R\p1;hH^b!X^X='IWoT!ag'ueW'sDq_gpt*lo-iO*a5O,S.6D5=RY\]*,<$2U0HC>n@14Mn%??0^Q4krqlAcH.$U;p_O:rO
%EOr8^$'=:nK>T8<h2<lJ4DZFEFRG'p:T%"^k?)Us$dA)5_G\`,SNrbUNh1&^b-fPqqA_$.ofI[3KTitol/2Fe%#W5"h(L1q(DK.%
%QkDrYmiDts@p`gL&=hI#e$=Q3d2kj`B!HGT)E(b)W>r#9?>l)G%S0"?OptVk/tfT,-7Qoc18ots<4e4.I[%B7kTUnAalLOfb?&7+
%69KZ.4I?gmBg\:<LC"Ej6A4R\-WTRO5'a?Met]lU9L`r&knXZY+A"uq+K$=_a'n2K)]4[]o\!KF1Ln2!*Yu/k(rVcMgZiaAC+C\s
%M\5r!-=ZL%S__AF?'kD@A@g0CjPmpE<'F,Xh50n;H=M#u93$L%V&,3I8r=40Kma0.XR'$7.U6R=dK,'39r0<]_UISle24m=&]rG\
%"]NrLAYg:$ot1I7-t\a[+0G#R5bdWdj%rIkK$0)upXgY6'$?i3AU'0.Z>?mZp)5<SHc7\TKA2fI%(F_,^5/tE[8.`YpQOSoA>JhG
%J,&nJs7XoKs4<nAh9Z,e5Q0T6J,.uNs3JHmb6VLQ,P;'+6c2kni&KY:FN.\R=2W>Y$J?(&63MQC-_9aY$%Kq:Le;Q.^mM"[IS@ZO
%@>R6EClNsj<bodZ`/NZA41WdI>?90J&@)4,eZW..-9rM^%OV9H,pd>7[raqI6OG-[7[;@(TRJ]Ea6IR&MNA'G*U:;FIC@gl.!<67
%759,`o5rK1Dmq1IEA^c*/K=KS#S)I:_s8S7,?-q<fkR!":,aUpRoC-8PKCZ>;bp0V^s4mkVRI=n#@dHsVaB/2k0p4nBmngl.Oq7,
%q2KY,$+o>Ya];I>P+-ah8-d1XEc;7RGk@>8c['cNpQ#*,90[_%djjm06$Z^^:2AA.jm95@*L=`mT0Xm;l5'8MU/L?Rn:Am*BtsRp
%NkQj[pqp?3dd?8k[6R"Z2HhNABrD"dO,e^5m!cHGmF_DC^Ztjo:V#!p:BP3dh#*r>m\CbRi=i(]>3+!H^Ah8l#U=I(+()FO=P5gO
%NN"'MF(Lh)EX]FNHF(lZ77u'F!f:,2^5t/b)+H?YpaAf1j=9XiksS5Fjl4KtB!g9869Le)oL3d:N%u*)^S<kbbL`H@W2lE?KUmiJ
%Y(IdjqroPdKOuMfS)Me]*P!A'<F(=52-liPa%K$@Q[p$=2`e(]N(8X2f'fr&+#d'NVGG=P)']QmN)L?f]h,:+nF?,L`J3S@gh/rK
%_=F3Y;HE.%Gf;4"Kt`AR]$(meYJs'!*jqEMF#>gB#%#2=Y:!0Q=\DP6DPDAc<g=u:<\JH^j;FK@_LO%%9:9'2QS2RWQ_OJ+l-,f#
%[!-[0$Z1g43m]PO:_,OT3G0YdD2--Bp2!>d9:oD>n><Re(fch-mu\3d9V2I&A4G>!MLa0p4Ytr1B)>K%S6BXoI0^3?:_"\a<0G"W
%L;ck7bK,//=O!;4UaNpfaGcUP"q?VbmlQ>md'pIId/3<<WRSTs'f$G.mq>>$Kd1Xb"#Gbt?YeBEg[RmHchk-<"><?7K=rkYaF(6E
%:=e,skOc5i3^n1Vs-fouBS:,"NJHgp<AJW>?%DA#EOs";1?l\@Dmh'$qlBX]kLIebf)@YX:VK<$B7,VPOrgL=<uiZ`s)7[1Z\Ie]
%W._B.(UGC1-If>f'k>jt^d1E)`n\X7D0eE%X3rj"b%%PVM]Y(K]NqCL2l84(`&0/(MY9NnP,&/JB(KO<-IL&O1!0X',\kelm+T>u
%l.dgIc6b)j<VA]PPB33%fGO#7Jobm@cEW:S-f7a,jq@-aCH5""cLaPTC?%?keBWRRE&0sXNNJf)ri)D:p8GMi(1pFZ3B"B!;%;/K
%V0k?S-BP?Vd)sbj=-oi1jlD1lmcoX=48H[UYC,>1%hAC$Vk:Kk#NpS?,G$M8Vj6GP662DuLF)Dr1-U#C2k+9/RrE0^C9c6#lM_Zb
%<p1&MoIGl`0cjM_ZplFL%oV-B&AseC]GhchNoaSk(hjo`Y`#FX(M4aZ?6`0&5%!<(aP4Qe#jJ4MKt":G;VbPJjYd\4AaJr.77B:B
%it_:WbtBt*8Ru84nJ3u\D,SDnSB4:#f\gJq"B^-LR-q#j74.QoecjS*8t:I_(F(no3Vsc[Q%OJH8=n@7.3DEE^Z6+#F8#iG"Sl6E
%DC-C%4k'^aS74_.P@lB(E+ZEMd8Ds]l)ad6Xroi4>7iZfAA)h6k@Qa$jbO7#M0-)[O,kA\TWP=kO\:hRSnXF/Uq:oK`3(>7chdYs
%\P9;_B$X63;g!TW]m$MR.WHY&a2lhC;k+O,l=_VAmsV*7AXH4n"F"#d<)Y0j@oa9^k67#6!TE7C>@Zf+jpVn_(Maje;&7lY]uG>[
%;i_f`4nQfZ@Z2lP6&*k=+g:%e6Nb>F`4RLW4^-L\BU3L03Dqc!46HelAUd-+`+94R`I1oF;&**,G.0=Qm[6(u8<S*=CoEE`f4JgG
%njPNBX-rF8SBM&!T[eMdkRmKG`=G5:Y(4BFLB-"H/MtdfheWn#K&tim\56@42-t4'Iejdg"hnAJMd!=%f?lDh:l8q*H;Lk=%hqBB
%Ns=0/R3mk`:bH??BV9GQf(b95#Q!KW\3>YN!2+a$9o,u5bVf`ga.$SK:,9*q&cel<fIT!EhbZ04Je(/C\)mQtQ;2VP+^S0oA2HQX
%#6oa]o#G/#egMa'lH*khlp_DR=1/u0k46,7\6l/:`8*f3)mbm,qao8/e3hEso.NP$D%UgYe;pmZqd?U)XL,oC%2(/87f2u,@B5sq
%&!N)(5%a'qU0Y$&PY/1UZqtX.MRkf".jtU2Qd?PFQWbH%YnQMbQq@YJhUb]bR/Cc)_?Rs]ejL(Pm[%[6mU7/BdFi(O^"^X@*rP+5
%c['WKB4q1]Y<T)gVhO-CVEA"1*gWeg/)&7RG?Pgo0&qpalWe>!8eRk)/FA==2)3k_.JbpAfhafb>OSrno5j\m1MLq(F^ul<%7>;X
%.+Jc/!XX]:aE1#KE^mA9"Ng-d#9m$Y7u7fFEhUtV3Gk%[k\<a*7T-<Fg*EIW^hq&.W\?l#!Cl']%;CUn\<<VC!j%fJHTIf%=TY;[
%]\Zpf@8dP%k-qp_Rk8K$)"j1lkY+JRa(Zend#L\Hne,#0acPqIoS/0;A7kS*^"P"%qf-q*8$6krIWeoup@K?8Ojsk+GlMW1822kF
%!a*:_m#rc#ooS7&L28ET"UPkJh%ZFOU>!naIAe8edQ2oAXSD&.LZ(p>%t`lRPg^::^rU^,W\uuQH7!Zam#o#p'&^WB\J6mg0'D:7
%e#TcV@A]5d?<9&Qei&9;C+kioY\q$!7mPS""YF1*jMsob_UUEHOig8"lV1O2&Se9lkDu*eM$>09"b0bq`mEj'@,RGGc5AXIhYN?]
%U3->hcOUI7^L+E%6!h#sX`eqo#o^RkaAFo7Vs&I`o[F^Qm+6sT$)O?VY:_rDd`6u=FD5To,=1^)]?;.M^[Y(4?C6N#gV)0gbU[Fh
%Y'u(0CV3lK_SPq/KAa(M_?aY%I-F8=Rr&<%dXs/o0\"Y4I.C]"22@'/*R,K?\6g8,`L6-@;A_MVPp"&X`dIf.RM9+MS;c(>.Pm6=
%Bk<psZP64'cUs_FjX;p%?&K>i/4pE6DLp?=k_f#5f!0$T0*gDm&@.BQgR6:eeF.rAY>.39;8ERlS1F5X,1RIJd+Xo3O]p!!24*2L
%)hTk'ODMNpG<6\$YN=$<>9.8f+7-6=j#e8'S+3+W[$YXiV(5l-:NF6MOrlaMl==n:rd/6#FKrrrXgI=]8N1d[J`YH#SZ1f\LKb3(
%>I[MHhg3M$\PIC_bM4WH_48naPA89Jnh;G(o]W[-md9'@:Cd!_>0ft=jK,!KouAB:ZrB.j<R)!!Bq[SjC$4UHZqT=<O#J\u1D%gN
%Y$ES^iOg/$[_'*H'aDl!&imuO/=Y0O-[u:W0@Brh+<,I#h*dDE<&RsAA\!SX65<sV>sD$+V.+E52Ih-d5'dcS[iA'$CrY;&=7`]G
%V:jK=m_LUF*>XKp7h3KC6P`ab%f2u"Crpm+bZar>[5^d:K,?\]ODO,dcQ4C$`=.:>#"U_/6-Y#HoX>ZLeRfYtC3$fS&C2CLN`:]u
%?*es'$s"3lEFl8N4nfuno[1SC1r.('de[_GMKb]e#8K",KBiE"8Ib6pMD>CTDP^;'E2DN_Mq"5=_^.W['q1GH]9d;dq9EuE<=-^(
%`'j$P9lfuFj!_80g"4+-V4<e&B%&"4**JCh(uF'^N=B.K*8M5Z"1(n?703US`it003Vb?92S&[WBqCIj;9NKK(]eSHC1OTWFQT.N
%7EUrIMQ@eci2LB!#h(EPe'sM>k'6%0HkqNc8&1YSF;87S`7tGaHnBNMR"dF$@*u+O@Tpg.#HcgH>b#gf/")G]I-Z>l<jE)sI%HI+
%?CbX"flP>P0n^^D#>?qm->/J(%V>hmlB-,:cDh0e+PkW.p%j:k#@>ojb07Tj'Ljs;ohb1[Q(gf.=(o8ommOr,]bsYI7Fb4fj*+Di
%'5r)jkbF7TM7Gf?s)a\E?ZjS_JaD4Ng(on-1\I2ci+l,Np8XQT&Z&4q_[8^SO$JSIT#7oBCQ'CsB5O_Ni#a-H4_bCm1#bYKM^dt*
%=NTaRPauP:7F&$3&PGKl`H/:5q8/:WgKZ#Yda2%Q=]M\^,MbqH1pu+5;Ic!Vfc=Y6\m;r`dS/.Cb[dB`1GoLIBE6.e0@Rdh;S-Sq
%]?K37D^e0taT?@aPQr\lZ;?@O;rBBo,<ohJ0*>"6/,.rLU6u_:c7c\p7rNM?>#--naVUOrjqIK8E5Y7jIJ2uf/&5kq33Odoe`Uq;
%HEs37f"U_oH1*`Llu_,\_5q<,f[u^G8_M)0mIq:elO9.b#u&"S:,-3QCgPTOA>;C^M^51,6CFGah)HiT%)"!M-!#hUL43+*fA(;M
%QoRUK+bu^=3;_hZ\D17VhAPY;YYEJ%aC<qO09:8S8)qmb*X>J:E*rLci?<9.%<G@o@>m#J-j(^Vc8%nepEj*(W&gY1"q/\`+2Z'$
%0jhsd!Q20'i#0aebOaI[q_pC>Q>lCN;s,Uul5%04I)ELLX1gLP(*,'rOgUEbhrk"1rfA=9?rLt,-_uXo#!1B@<RX_j<P1GaRXL:#
%T=VH8;@6Z:m*jn?3kI9UMc&Q<\CSRgSC$q/UH^F)iR$E6Zcf^;4RVe>"r5?4q:;OK/VRJ$PGk]f+[Y(=:8A+M&c*a+<'0<+(d?1Z
%=l,[&SN$O()epD;Nk:BN#Gc6+kiXrei:NnkbA.RX]B;k%Z6GE/.`k+EYj7:>j0e]k#aN>0f]/62@Z;nW^9=HUeFjKhEX]rPSV/56
%A?ej(NCOu5qf?\maT5.V;mX`/"IUU<E@Yas]Bp6gI'R`?CM/T73B_G+h5E!Uk7I*4`36/bc`UT(7:CH[[X*5m#a/kRGj?]j0<^bk
%`2+3sL`p>C'&`p]\kQk#D8>g$I;*%uKBc>a:>d>Q`cs^"^?1M[_<V\dPirTF]GJ>qBHo>t&TMXn9NJG*<*KJP\-o4gX?H$1>168M
%IUMQb)G3KQ^'$k;T4nec6(+=H.rutkoOnME3kEl1Z6mC-(pDW-NtcN0A&t_p<O[5/8NQMsU^4sK)W?\j+)-"r&e,):iP$gS!fg6:
%r_[a,/uhj%jYm?J2jqJOAS]0g@1noPW[7gbk,aN4U')O/p7A-cg@.fVDlEdu^0?[!$^]H2cn<H3Q)ZG/eB+6YdFiFY?/3O@*k^VK
%#Q)FUT7$>Gp\qB.SCWTG9?V#a3iuFY(Uhd2GdgL5HB'qeZSSZe8.`[l8&47m-LW>If,-8q!OtSmNJ(X7o"gh1UlHFCN]_+.[S(F]
%<n+;C*d+ch4dU5sFZH8Ug,FkF%\Hcp;J^Mk&dQXaRA`7)jlTD*/\YJkO0+X=paO60@2r1YR_UG<a-q-tL/qU!-8%=eHO=i:K47Vd
%gHa-+cGDJ`-7\Ve/%8WJ7^6YRrbA-5^*;sn8EpM:-GsG,GTT1,Cn<E%7uN#dc9eGcai^)emrmcZ'q&b]-aSR[nl;?+Ng>8L<oJ1<
%H`cX3'Dq`qpcq^M5<O:Qs7"qGo=+bhpOE))5CWIpDh%<S?iK3Njlc$os4aIOrR5-Rc/7^VoBVA$Dg=8]qd9?c5Q6gYShB\i^V2>r
%s*XjI?XF'9oG>9UIe!I:]ANVYJ,,B0ju:'N`T(s1s65%2l5tNI97IV/Do2MmJ,FK)%/U'tb0:m=4n;s/nZ1QdU&X],cbKFN^\ROU
%Y!;pGYAi3Fq8N*CHue5Morn?XTC'ags8Fl?0n9!HrW0bB_rST2e,T2Ms6$S7q>DsrrS'R#2a*[P:[[uo-Zi3PfB=,BW9?@L4h?QZ
%'*J0:%fD"X.7n_Rfu+0Q5`]]H!.U`($4+I`C[CrrU.IaDS5f%.hJC$51J7#7Zgro#a5(Y11+(G'6@L'C$8^h%VN05f`d;odb[,5;
%9W=WT&81_LK@k/E0$B'P>rG&1<JFAp>t_ZigJVYP2n8'u7$l"+D*=&,R4Rk[qBB]rr`,1J,>;dN!3C"r3RW>5ap$[!DUH`2bs1&h
%2ZA+MneXC8$1=%TnQp!P*Gqjq#KnoPq(QhnA6U?b^5DUakLmeiXdob.Kq3PFK@lfgC]mCa&qB,u_`u&HgtlFCUEEFP:t&0:$Q0[6
%7?lnj)$hTOFq?ejJMNaZ\A]u`#jbqijG[b@CjFL"ot$@FeHq8nc%driep`JoL];bKh&9nm8<,1G_=e4^OrT-'<N3&bVQk_K7C)Gm
%:Zp7/q`E3L9'%*63XsVgjT:dnTjqVl'0C.<Yg52eFG75nf`^AUHJ:]3'7E.65PP?1`kgNcHa=&23!:8WmUAKbX[M&_9dPGsdYoZn
%FA7?QGdbK>]@j&\+*+3iIo:t'0/JhMW)JeqB3"=fJ1\j#)Z&LNm-H`aaeF\KX5i?[I9+d*id4lF<d3Di0<^];SBY\R)W[rGiaj1e
%dE-)CrS,F/Sm:F"[6ATHO.Q3):HuDidkYoL:`bsp_[?'Y/NYS3O/q<3gN_a6\q8recXtXBeDSitVUkE"9>;=l^=qncBWhX.eS+AI
%L`a#\Ud_hs;#Fd?d[suS99:-,;4\Ugk%]aiI4f)M>q8)l(BAI?O@G(AaWQ#Z5Yl_"RY?T'@Z9uLi^C+mQW*O;V`\JEV7PD"$:dk7
%;$mk6,eg$@NIp:p_`i1q6t>rX!S6#,0fa^CLi`/uf[3:JWU.p1la58bI@:o"Z:Zr:N@$";i0[:jUtRmP]3$fr]40\2;ToWu'iZ2i
%M>9'9?1RF<roHW5+'I?CkmD`Dj(QHa_77K2/@!<@0:4WLZ1]UWkh+gPnuX8N[I["#)"%3]"CdqQ@'WZe?-fZZ<[dPt:JEd4l$7Sm
%OciPLAT2RtCMd0MfR2'JLF\tac5>+B6X-#ZK5F#b>_a;82t6(?<q(Wsk<?IS1mtC?rg702TSbK$-GGicL<c3oJLlWYLH(EQVDRl@
%5Z[Io4`k>BkN-`Qk!RiRd8dmtKCg$!dcMg[R#2C-7C2fs\NPWEVKd$E/&_o@n(K_nFBU++U;.bK(NDJ>@.+nsr1"(&TL?()Aobu8
%.g$a/>?_DmC.X<mAj,E5ik>*JRi9)T2A[7:*UB?_AEUV7rBpUq7??n20fCY.@1@:S(Onkp<0"a0WNIf/8d;M/V"C"Y90CFT^Kej]
%c$hr20jTDGTW9!\#dkL,`Ro>$>&6[ih6NOUJL"nXEl_9J%G@UXS[%C7G9eV+!ftM\\q-\IX']%qijC9TpmPa^'\ogKh1l2@@8Op6
%@V]]7TH6ZED,R,nEt.hV?sl%A*EYju`C8;`m;UX^QG&G*:9-6j2YeKHW,((>:(gjbh*UG8)3n$^Tb?rS=es%F*E*&eq1aI27]3DL
%ZWSdKoI`W6qQd`WOXMJT9A^;L;8;0&*aQh.`LNLHa_`'RgCmBX`+bg5lcBU.*;74P5@":bMoBC-3A3UX$e8ZKH^Nl42Z(XUTPYR7
%'\Y#<9mBA948\t-r@5]h&:g"t<)FN$>B\',b-1u_eDairRU"''NVH,ZDtsU2N2D%d942^kM%k9F[btgq!EGIJMRkNP1UDS@;/B17
%<_W=sO[f_dPp1?+[Y'p:9Lq3]ZEai+`:hfM6BYj23)QDVQ(lJ["f4m]M"MdTWu_s/7<NW)5%bEXjgn.K\^_WCVB5/I`R]#U[\6IL
%L#p7@e[uB]%6)DX>E-Kid2f5Fs)3l&,<<WUP`VX'/)J]3'Op*+L@$+^l)f<h@fGk7BRJIrps4Wk8OIl`2jSM*NbB;.^t1>2Z"l0"
%,1B_nahMW"243_1(1W'M0GQXq$'!"8MD=RnbH#tfZcj#/B$.g4jWkA34)?oX*p!Z*MB@\drW7FtSdsl?."ddVij?@VomI_ZJLg%q
%[Ls8SQ3=,H_>Ia:&OX!.11%NJ%c@p3Mnps,\':6<7,]]>`Q<KWJDL>(>G/3Fj'!Xhi_@)3[8qs=a(fHJ#Fh\#Do+lb*Z>X(1DEM3
%#5g;8C=HN6_'G&Z^pIE"l?\(VqR$KV@WMSha$,,f/;i]m#?3?if#b=5j^<V%7_8&O[Qj,3Z79!dI#:5l]0]LZ`Uaeao7WUuil'cJ
%;&X=q5-0u9<T&14nmSBABSnYaRK^ND>TG&25:aJ5>Vb/?$P9/_GPNf)iA"T4E^g:V<REi]4pB[i/Rp_eR\h(SIla=s6]Rg6=e1d"
%PrK0]CfC"F?=p!SEa#!1Ri8&^9$X.[IX7CpgEG/``gu\+!60GG_YOL_nTG%AEHNAl,8)T1;9>i[%%;f<qLL[Pm9<&@aK9?oNgdJA
%/&[sq-?L;_lb@%=(iCk77(g+.p_cogD%,\Eh/lOBm._Za3mREX?(Ml5SiYN?gU2h5U8'aEUm(7.H+B,'I.Wk?ms8rjB5daeYs5Al
%VmYOKZ>s-":+OkY7I@J]4g(!0c@acA<+@&1`lYYi-t`/&9k!F<Y'u?R2b&J="AoeWk1_Xk8<oHY(c,9"EsHj0k0g3%0;bQe?_-N^
%JkXEpmkC,0Pgph!=j([)Hc\Fsc+*5-4NKO.lm]q3g-L'";dh[r-`"J?n$#4e%s6V7YWd#2hf1O>anJhQOc6R-l!A2/@Q0o>g9a?=
%(=j*9m;ALa'30)a1\*c.+Bd6c#i4LoK^3+>=:I9kW+Zp"XC7G,rA@43^sd@b"L;Y*eL`gq#Q1*G>f:iYpBMEl&%)-jcfB68=gVXi
%CdI`)6=2)=2l!_SEY,*_2`ANW'#"-T-H$<KJfd_G+DVcVnP``dAa;-mL=of27roRn1eW&2H4[Z.Th;+oVMSY;Vg"^DfOPa$i6U\*
%r^DGsfGluQFY<T^ZB;sO:q54(12:]tar*?5k@Z_g\eqJ%D0=igS@B_CI5C$q851t^'<68JIU.)`m;b/r3u9_@^=h2k7ufqa"]/tI
%^LYX3PT?e=^NlebUVuS>`H,dF';S7$`d?/a%$6%rhn$%PU=rh"pcE5n!SO#`%#[;YVubm^f#'0HF1h3?3>%X@p4Y)@P-mR=\!fpd
%B);:S]q,]t\`MCN>4do9FBY!8[-@sdK2@84Z4f+hlBEpC[+0^1%^(Oe3E?r1<&Hu/_P[8N8#Qpi#$EDRIS,"<5r7@9eK9kiFLC8>
%;g'0IOhL</dkco]GC+8Y-SCnj$NLaF/A]j\SXP=%.k!-oU-`.BCuZRQfS)c&;&4juCC6Dl7l=LZBi&"_]UfU$AmeZ[C,R\GME@ZQ
%n[g'pT7J0d\u>k.Mf>C!B>DHl,8E(XC%_4d81CJ!P(Q$=-&J+PFJW9Ie$ULQCo,C<\\:E1+AQ%'AQ@p8&N@XU`8!I,USX@=D)],/
%Wp#EV9\.,<lPD\-aVd8:X=)llj9Q:qnqh!B3T7<NIcAs$Q[ltGnT7Jc/O-.ElH+p,=Sj.?a@F9:^eLtOc).;!R$2((eC'^JqSPGo
%)WPB;Lu8H)BM/'VX>S%oR>1FXf&"JfX,2r>WMpMA8T1]M6se9e2:8Rb9BJ-a_TX>9H9$<lQ^gGV>W4[oK9.,HINL+nh8WCaHIt(k
%(,N03AtDuAek8k5=KtI\r8g;[j#XX%>O(,p.spVbm0_8@VE/-(!X$2+4'Bi#M8"H)+L;=!SknX@ZO#\Ed@d@gQrpD9FJ9L#!h`b@
%DR(X0O'8JAWiJF`:Ft%7/lM(oG@1*"'eQHj_G4rI7`ufp5<"L8PRU>0`<K2/#SCms^;4As?m#/%Tk2l@:0/T]_6Udi[F8=h1iAjI
%&:#uBPVlq8W4S@;caQNc<X5ChfJI+TQNMHZjI\T#Tj;#?PGicPX@in`W0+Dc:190Q\d>?;d\RIB[_WNT$`f#VZ?C_'Mo@Z@5l)5_
%CECi9LpTZ)^;fj)l&gX69n^a8IqM4Y]8"A<%8c;?Z"g.\*R-+Z^b9R/>>9bZ1u4B;0<T:@&(QXB<X1h!U9)R$d\?X(%fY[lBfUc1
%)5c9MV,+"7;;DUa$qF'a-r,VnnuMErDqC[-T\*rJ/S9mj-i3.$1&Q4cN`jVb[6RuVk^BucXD*G^F>+2AUf.8-]_#)A/dBWAn:I["
%B8;oFFU-.nED9uN`)4\uT%d2=brdIf2(`AcmN?%og7&I@+p_>6!)Au[*npT1WEKD=6%C>IFcsZmPj7Cl<In!UO.:E[A(o_/Oef-o
%`ILlN'&L[*Q!4^:S>)Yq9P=BVRUt?.]l0qBenhRoZ?];:HbY"K1c[I\F10.<,6_WL-Os.QA$sip3c:-17nc/SSnUpr%+P,@QpS,U
%#\8hrZ*;E)@.)>ZW6S^d=.NECQq."YLO!u2-`?XU^R\Wga^m[+Y%L9&kcg]Sp<td9=tZDL/>kr#ZrfIof1nusj&5^:45RL"DXijo
%1e*3eo>*TT1na[C9`7TDAd?^5P\Y@OS7d\&F)@.YW6+3%;,'msbVkPV&b3Rr]8f%g@'V6LrQ3Y9R^,:8BlkDNIdK'5I>Ko7_:re%
%A`rBtC8dW;p5SDR=*A%bCFgt<R0CJ/j;M-J^Z0>m6dJ55%<S+WeQ=PN,:H^t!]S-USN1Rl.h+*M05DAoVV1*,+3WARnW7-"?d(Ik
%)Up]?kr+;PeqS*X.jk%!jK*68RVS+0;q>.-RbW>K+'.S6*]]9V16M^rF+d-'6&a^:?.X\p_HJ1AAHHOd'iBqET%r*0oNk7(ctp$?
%)tMun[-3sEa<OF"3ME%./MC@LA;<dS_nM_pF%`pm\@_?GTeOm]7O\sF_ZIVioea!Le3USiQ6,dgZWk0/jutd]!Bb\L*A3\A5jZ'$
%Y?,J1(JYI7'pZ5C8iHg7W*p3<[61A%&AdG61fCJr-_[XOLL[0F,7@M"&)'P]W!TLaZt+NV3J1d_a!/IdnL\<F6ESgd;k#T7"/?*o
%0uqt3`,Kd1-pfLjj:b2FViVN?^$/re4CU.e:K<5l.R"_,%ZPi-4<l(1k"Qi'ii4SCLA7f=RPAC"I0Tkojb^o=C1GpnU#;?hM>&gd
%l].Jc8CE,/Tb4)V(ZPAFTW<oP*I&C*>c:O:L&u*9,le]4LXlOnfBppG2?p'kZP>t;+c_Fk0UFb'Eb?k3"Q/>+4?KC!lV/VP:X_2B
%0iU-7Kjm&-)VPf)oP3ue\$BY)XKBeSW%1fJ&_N@W;gjY>?cS$(G5489$S15qms^arrZZpR>`ce^<0n:u"j%BR#uhD^\^5Wr2?N<9
%pWX*3UVK5_TgbN-:SA->ne_8KaX*K_f?qd4*9,Xk*e!Ck)]sM%'CUBR#YkcIEG[]h6]]F@e!9<?&NhY2&'ffF-D:$sn7d#Y/&oD9
%b2IfPI[./oC+=Al,I?\h@sbM89rj8e21o0"MVB[cb?b^ZnFVj2.P2.$b/8r":`MJOGJ)0l`&/ptI*4QK-k,/fFA9s#r&#LtDQUo7
%Y$*#'\[eU&C?iAF?[>tLf0X,C-2ko`Ceo85g,G5_lkKUH78kc434o2[V<1i`)LIS!)d4JtF%TDa`e`Eu;B8<(oJbUiK)>K_IYf$_
%=%eDIi;anNLtop&gYI)O@>2c&gBBg.G/@0i0!M\$\>>E._:piOdWFe)&IE$bhL4KbM6**)ik-'`!3nDd4.pnP1f//*p-H[.\J$Q(
%/M4r,?5hKod:;2q8$TF<>)/U$=5gJ9-,8,f4V6=G,M$'d,1ALl,!6-Fd*B"sSCMH/mZGJlfOX>"Bo8'E;cMJt^8ra;[6Z'0YL2Bb
%lis"opF`Ip4^PSA7BBEaUTeQ.BK.Pu+)-!_6j1qGi[#29UkdYF[jA4M-7AAt9tLmF6;f.jO[<?O%!u^J*=QVU+1klb[Y01m`k]Mm
%i_E+tO"M[a8jfR&H6TP#`C'05R]hMKie\B5Te-]0i6RcpJQIY.@_=*2K:_MBb/d=QCEAtYm0n4M`NW5ae8!Fam;P!;^?u8P)9FU^
%:GtKC11EYS&#n)qF/<g1]Vn^IHIl?)[&mZ/;12"!P,eMn;Hdlh/5qQr1].YHC[euHWmu@aFY4VTZNToCF>NS2:1huqN#!%R?Z!'<
%4Z;+t=\SjSc/CNCb!Rmo=",ojpsiM5&Zml??r\"VXi@<tj]Nc?XhE:@;C/7K].e5)@Kd`:&&!8V.,+9onIuXd#.C@-0,Ng(h)\Ub
%iiKC.06R*1EC>A#0P1."_`TuTPLFj;hbL?Di%^l!erq%:]B^i9rG`E/X;+N4Q,a'lZqrnkdiOjjdk^a_3Sq9mk-:gQpLb#=?KO*e
%-gFbN*quVtkVjW<+XUlUSthKg-DfY']S:<*Rn=OF2HDA,e$VjMR`T`a/FhuOD+jq1QTaVNX2W5aRi7`lRqF3\g`1&s&D,(ba7\d)
%0\(W50j-$EMW$L$#!W2aGFX)0=Rk>pV<qQ=&cJf"@hXAbl$)8hQa;0,/:mcpf-]C->_TYLrPJlok`1N'/j=IXZPG;/Pt85-j[N2Z
%SCk!H&O1;R0321jPSGZXa`')(]od&%9;6Z0gRN7\Z-&fr5i7f+r@g8r;UkZcYSl"6faN@@1]79@bn*LWe(eN6k#8Wo"OpJ\KGWtl
%VGT,4Zo$M;9ouC8&pd[l(=21fY12bg8>MQj*b+`V"oQ,685a(t<rqu11b_#G=[@VqmQI&AQ3A[T.ZI6/,'$!LEo,7:Q&gbDQg?H?
%PZG/@fm>h5a=4pZ3,L5-lnY[L3bHs!@Be(P$J!_IO_g^EJD6l5N[$(keh5O825eBT_JZu#^!AB<+gJGs!&E@.pF)/t[ZrE66^:PD
%)+@XX/1SI'[iR(m(@=,OA0p_P\<P$,)bA1E(OV;cmC/&fJgD;2X>\8l0f(#8B"dTR!VRc2c->6/US&o?:>:kN>d2oe)h_)C)u$ZH
%jTeF6VD#CH`t]Qh2\nb:r0fK%UCL^^(`Ado_<Jq%63W'T2YE,KqnJj[==AU0IX".cD)7aQq`42c%3/EqCTB<Wkl,F6mbV7iW1'p#
%bUHlNPuSO7A+RVhgBCfEADE?l(r3M1:e*BebZZf,)-rZ-:s`12.pMVOZZo.$'j\0ZAd,$Keh-D&QW%Q2DWtO:,)&X61J[@SQ!1U(
%.DY<uG$<G\L\4>m1sDP'\T`IBS'6lQo0jsY)K!Te?$CQoR)eb&C9!2kXkC?2!3k-;iB"SO$JJF*FMa"Q,7F%?oono%'^I,FS%f:F
%kG3;fre3_QR$s/GX`6:&:fV?)\UQVaU8,IaHFAG:4F#!r55!ucT=F-l7mB$6LGe)(R%0J5e+3-Q,s*])O,N%ncZirGa[aA!)TL8u
%lnc]I>DF*m`L-A<%d.u:Vj!\1"Y<"rS6Dri.nGZk/Q(D*58;4d-DBqoZ@,_?*[AC51:eJ#C"j-XF;)qbj^>TBa2[?qge<^t>tNVU
%L/3i0.Y_nh"N]Qg&MZuE^5-l<eWt\5UmS<-krUtKZ-\*uWaZr(7fu:ZJN@R(cXRK_[6os</;74@o/"&^4WI0B"3'WG03K=O0GRLO
%YILNe.c(aNW45b=qT'6i:%l^ol\]+(CuaUm$U:Ppao;;"rl'WU#@]Jg'"m:25m:-:pL]__U=HH0*qaiUDNdYHbM&?8<e[.'dI*S`
%5jtuFg/eTCq9(3*K51oNq3ChhMTm^9/dMtkG"A-f?t"O\qD7\&i/0sT'If@Sb.;,q;($Or-ohf`q0MdX62CrGgmPsqeBsj\fOVL1
%Y)5HZ'OgF6O:oCiLpYE%[#t_>a3(&O3\W3`g^R[BOp7H7XmSQIBVePf&Vl5WWl/'s>7Ti%=OY/`pN=5t3110_WsbgQOn#`hpj-,W
%3t;%8Q*/B2dQm2s'N<AjRF*TIk%;Ko3BG*EOO$4M-XN-dJiTRs0kBA7Q?l)<f2?Ho\t6]12YoLp1p;W:HL'PG9!6S<P?9^LrKD+=
%1<LM/7VQt8Q*q?p_Zcomd_$_"aRB8uD&0J$m\^2+oo/EI\U^]gH*Z4,:u&l6NN(ju9hu-\nr8j[+i,Yg_MT?'QW\E/FIK7;j/Rtr
%WCLGQ)q;*$Gu8-MMU,s'p398i^KpG(N24d$*;9tQZ*@%YM4psM&<66pW0u:a,s5>uf8Aj<:MhopRo'pY\E<N6WQ/ILdh\fVN;MmP
%pIrj7RRmj=+Vr.J!,8d/Q]<gae47U\<TJAdfM\p0Qt]D9EqVA9pN8&SYM,<BbglHIArG>J[=K!XUgM?-Tj\;'1@W1c#>Btl[<_)k
%!pPYtIUc.Ib%ilHU_(rUJ!2-U+IPqd"YKE@H(./X'Ofc]*<sPS?'P@?!!H]-V@Ot=UP617f<CET5',`edk$eT0&?D\`Q;F`-:fY5
%FCeW!]]\Y,DKStff*od7krlod;4!WsHQg:Ec7uaR1]8Ab@0=^EVXsEaiF/b7XG2G?QZNHcF?`ON5i!m4mP$5W.-N0p"LK3'.Si2S
%qTbiMf8r6W@MtN`MYgNc.!/Y&TTbO2'e`F<TH#AMZCN%U>4k$0UGHh=[1GobQu$bg<TY(!E6W'tDTu8cMg'b=BHb@$f9Z@3Aes?<
%h<U@MVa*'[m%e^jb$Y^Y[9eU`M'Pra9KfX58`^A^Nm$/]n1E7H8LtMa.2#O8l>a28<2,M_U,@Z-Y0T)@>:Vm`B;Z9M@b_`4`f6ZL
%<f0B:d:7a8:&&.#I*Ln+r#CmhBOKbh-LI:)Dt:8E;3]"`=j6%,LnJ/2BL5ZgM'Fc7D_P(b0\,i2nOg[Wk#nDmQuXm/AEbE@&StP\
%fNs3l_%il7FjnPObTeIf4`o*CO>RP'SVcH"%n$pg\F5:F/'?1K[D:(.43k;)2n`8'!0%L(&S4J03KYdr.(Fe-AQ"oV])@SQVCgs\
%cDeef@YCsQ?JB(BO6NhajN3kkh!qA2S&m"V<aEu$HMO:f3VfD%b<#I-P8??.bG/Q1q;AT_IcAp#=+JalEF)ShX3YLF3j31W/)TC`
%pujF<2OWD14JB,rTU&`<Hf3EfD0If..h&fT7GEcPLDRk1I@Vfr^/SnlW?*a.$,m[BLpMHdN!(2>a.(mXpTZ<t'GDj1ls@W`_'*I%
%4L/fnG(QBt`#pk?mD,1$ab$7U+..JHA8nJJkT_8(dKgd/+=?XIJ%[9M:KNA:O-s$]K/N7tmsaAK.SFT(ZTh?Kdmk`KlWVp<`JkIj
%3?20PPYP8lKXa)rUY6I7#kq9Fe*F>U7dd'D-KND(m,92QeF#Qi%k1P6"D[Z3<oC,IBftjtgb_aVb#4ndR]3-,B57^5MB1^'aE1+`
%9!"J!VJeFA<O>b82CNnV7h%:iC[e;/H6aVf=XD/'1:EUN!EoSJWg`T?*R_kdF<XE?P't^La`bY9V*0s?TO1YabTP>3cN]*J>(+>$
%c+SoG[.q8#bO;QI-QfWEA'BehBRJ3,(oe]URUQXRe(.B`^"5j][iHo=`sP^X90TDBlmIk5=bUqha<hK^(Xr9JCp[900c+j6nO#;.
%QDh*Z8gK!LSeoGD'Kp4TEsdLJ%q$c8Ah*8\+h]?BVI)XeKpPQ],ei:-/6(2B-;5^.H-</<[8k`j@"$9:BX.]$a>>&Vad:1gb`8pH
%%ns-k%91jVfr,Q(k/5dj,FcKRO4/hO(oMSXGrseNc"'nFf!j?mjWf/t/T1euQh=J=_;cJ0!=BZEK2gEWa>Oj4qM"8&@BLs6gWBj]
%^8<c#0ILDG@NWmr%C4RHV8Ta@X4iK`&QQhGO>LYPH]UDEa>a]dKP?+?p[eh'bt>%NH#];dF1Q:`kTe<:o#?MqMuY\JPspe2Bms;)
%/hrBhnf69eCc'\SYYPh=^<F#Xo:JqgPqh3=8mjA/R%e#1hADM;q3#eZ\=o+q3]a^U%m7AEUJj>Ohh.DIlHgW#s(RI;ZC2c!Sb).=
%A0F%:H&lb$K@bA>[C,f<Xsj.FD%o3=(%2WroIC?6"UWA.[M%]@;:Y,!lC.Q^//L*cRi.A%3cJh%J1;kcJQ#4S^bIA&<o<55k#t2n
%5>c#[E6J'C*R1TeTkaGY&ppl6qJ/!X7ebrCpINUFZ?+Ym)1+@R%8supc7fTZpSd.`Q`D2kQKb!=l%CGADeaVknJg"Q3a)rgJh'<^
%=>aqpAirSZX%_M8?$m^29_XlgpV:2grq,!b4i<d=Ht"+YcsDR/ih^SN]7sV^r<N=QKuo=9\HK(hA1?V#UUshY."rr+F1S5[eq=]]
%aXLu#MQeZ\bZbBR=6iH_Xa(3VbN6/p6?+\,@b56',"iIh=lpecnp$moMLbqr1WPMKV$CU(3tZ_fR4<bP.0u*"Y]a/Aga3"Xg5Oa2
%-SZ/?0^$s0JmW-G25dZ-kmC2s8_Sa39[\9.OeqJt8(q-MC"%%H/%gda#FB#28lan0'W7FP!Fk!RQ]-r@>W#YtJqmO_m^.Y3i(2<R
%X)t>%i"*tGK0c%09Ci.,pWcN[]]E]>?8$@HYpdNUb:C,8l;CpLWL\53hU`n"C^Wl/@,2(_4ljb?MHRj*Jn8Q>BuK\$]mHd8i6i\1
%HlBi926.bOX8$`SE@YiO#)tOf11p4q+B9C6[\hkVNrQ<&[bfB8qf/Cn3i7u)KKM:CHY#iiid=c35W2`'R7:VV`>i1cO_kSRNpF=P
%n1+.onD^bbma\7EE36G*UKElnJI`kD/^-ga$YK=bIDE$4L)UOJGl2=f)Z+:bn3^F.!KVLrs3\Q#Y5L[I]$tnuP,_$6$*IEn_?<(S
%p:P49)ak+f@]L9Ikj2`8LbMN>F`Z*F;fT.or+@?_Z+/d_2r5/+.1uYRH8ZMj3]ko3,HGl9'8\qaClI=d>YZ4s@SM3ZVDRk=H%!f^
%4Skk;ms=9]:*/rQF$=TLB7G="gIE'0=q+6-`fgSg]G@'hX=)3Gj%=Q"0d$?!_rnTt*836AVeYjY[!Ed:qYbO7@VG=Ip[]k"#?\g*
%:Paj\,o&JD\`Im&A@T8[F`fD,WR.n@H4K[I7][@cEM<l:nC;gH;E^sU'OmV]<C,1]#;E]mE=nh?9nPS\G@Y0u#F3TuU!Gmb?>OWl
%M=**UaU_*TZZH=Te!)$s689@F'8;Gn=U2-c=p>hmnl^m+hm&8aV!IZZ:rjM"OiO>j;'4c"bOe7-FKO[ZRqrMK;pucL9Z1;)'`N8d
%$'C6:&T7BpaVG8^-cD_@Zl[!O?Z)NcKHM2;U$4jEl`U,PTpG(Q\QA7C=aoGQe"g1QW<8<H@RlnYLsf'W_<MbR_D=f?f&_p%HIMNr
%?:o@YZQXN4>m=roZRJHUnlgW@FDU3^?6YOOM%Z$.SKXYT`B$LERCc`EMl"a#L,8Y%8Vh!83a)l8e5jh#guki+"5)SFVf;'pi6iB*
%;n>?SS;e4_:7$&-1/;^^Ve@n;_6>MC(;r)G!.UY_2]/Uqo[;FT4P1m/\"n>b.KuC@Vmk'JGBN$3=-_;EEKs/;lASsSX_JoZp:R5M
%Hgu&Vl(/<%-)!Fc\oBh,CfaNg5lRtc6t.k4r(R^(YAUAW$:4EmBA-NrD5L^1<S7OEVD`q?p,L.PFaoV2aWtl7^\#^E("Wf+Rhf?>
%T@$U=5Oq[HB-;N,LVILTo1AAGPlp$Uf%r*.K/:lY@uu%UIn"+Z,iHV$T7sg7S!.oJMd?$&JCfbt4Y8QG"*N5,?T"lR_@8a`%;RIM
%Jro>sQ]4hg!Qp>#_A^#2>/\nAjQm!e,[ZkXPSi\\`"mGiG'OI(cZl*P,*P$Bhn5d(T\/N.A3ebsb0&0\g9<1T^!2LK<uD==1O>,T
%Z5["(*/jS<"aj!EP'2aCGn_M-_Sp'GM8hkgI8)(\`Y0/0njZ-IF`_OL:O)Ar:Rp_a5CE%R:L*eW.WAQCSh;RL-0V^64^$90lefT8
%q<0iKAP"H-CWol4Ts>l);,ulCEMe1>*-ngHH(C7CEI#<M!B$BaWlJWmm4L0;3<jA="r.Jck.-r^LJje#RF:O9+A_8_!d're&*E<N
%kpne$Fhq&98;nncd8VZ2PAdos1R1eMY9O6N;tUTmJQls/as=(kb^8N:A_;6d]U$A<or,r%oFqEu4ibT]NDFi%:,2)r_9&O/qjBAm
%n(Q+KV\d&WhZU`<4ib;kb,O?I>>pD90j71u2%)5^^Z8a<4FW7QGi\)5;9crGc+H[,N-&$6Y$jf5J=:uu,"55F^G.b_LY&B"dcbB4
%,1*g0ZV->SLs2NRB?r<-4PgDYNAG+2RaS$GP/3ihV/:5!_R,5%o=F67(<7,J8t/AEi'qqL6hQNAB+j%I9ba)1I$+gEG:c>.88g(P
%eADkr&8u;a-,//D^l]=q0XYgHC7rJ.4q$'*34*e.&iF;/6;5Qqef"gPhRnhNd>##oTeff$"PkX[fke4?Y#!S=YtAmDE6`0"g*E>5
%jHJ3?FcE7@M:Tb.ZD)R/bXK@jRqA:-c1'*Rh>D$G*:g+[A&c<s`-fIE+g#Y)of?@0nk59FPQflVeCURACCdU&+k8C8oYpN.?jM+=
%T#KV,(=sUUS/>Tj-3J+QJYMOg1nTt"P<WWtN`rGO\sH#XC@cB&N?QE;m`6JFLHB$8jl&inqH).LR]+k%I2.1YSg>Y_-L_44/@A_&
%.A9s"9CgREd,Wn%KVJTd[#W#AZk/1PL2CKi`f+M6*4l.Sd>/Y,`7CY!2c\&$pDM4/b&O45TEHO8V]$DDl0Yicr_5:RKQmUrktQ#1
%j$>0-cl8*$ADr8'CZc01*K+F,Etp5%$R*1:eBS7mP__i.8;cdbY^m5LZ>pUApG.d>l/]@GppcML4Lr]a*qnrZ:JUfJhG4NqBu,&&
%[/@]+I7qmsfl>eR!<5E)"DH8:o6r7#ON+S6?iV.S(?Wa^`WO=J[j4cc"oir,Ls3q=?/PTm881Q4!Qe?f@=>WMSnFY9aG@GqkjG[d
%5LuEe^Ull(mC(uinW6iH2L6%'A.FoTCY`a2T9nfgOHkCm:u]_(6khinfH2W4LLp"#W-N%)#RXM3a%<_g3MFk0@^k)@Y9!h?3LV,!
%I0Ld>XHQWILNYMOVp(SZE#-l8e_<t9Bh4R(B2+V>Y3!4q9A\eE26-qrp7V-HSg#,[EdWr",;s@A5q%:7jfeS%o\1akUZ[%pMpdSG
%4E9+\FU)24;f%>jXOt*e!($RC.*`g@hR`gX50_(S34nS5UUcj)HM0E'99:/;Y:`br/Qp3s\4ahR=UGIa\B'=m:\TD)H$9)dOZIq5
%agCUdag=9(VS-(e%2B]i1)A:d<@=Mmh1FFn+mNOP6+g_cP>`H=f`8^WOe[eB\ihR<UH&a!bE>983$O5](=$='L=mK^m0N(,FR61V
%SXqoi=^uWJr/mr$ig&G\Z3]58+JVbSRtiO3.l4-AH(<%)(?&!Bh,'>9UB^'GD]GT\TjP(o\dhOfR<bJ-c,EWP.4a/P=K\U##a0Cp
%"9bs?fW2,tL&+!D`I@!=5@r?N!RF$h;N'"#+AA&<!")HOE-,W_U;),pa81YP"<d@O/Al1J*"..N#iY=]%HMr+\Z=Im`!JN:f+<k$
%b`;-hH91?M%N;j9<9f90N[cdOpftuk.M9!,+]48;_Od??AaF8F1T=?me#NiA7d3bu7np!5]j2F=kNa(R<70^%(76cH^6[@GohVcb
%PfOa7(7Il04(5)7Kd2meCS='R?(]Ym4D5TrKp!r)i(Nc8,E`AlbqRPR>_LV/9(Sq.649b^3LC3=q-R'>Mjc>&RQq(,TWC!7ATg'P
%J#,PWbi4JIj`Q^\o&0sf\\C<$[lht\DkYUg`cgU!<O<K9C1\]'Qa@2sf:Bo"okRP.$L\m<=,<]tZ#j@40!9j*EX'`Knq[Ur;IO<*
%j\T"im/G<(nocClgTg0*\%@(XG/&E;CVAVZmrn#@2YOUm^s,aHm\+ZFrnO&Cmi6%cVr,`Bq6Xp^d^ne,\t^N0.kt7!%5jHHgoSqr
%j6\FlkXI^@@HI5dq8cYp:!(bn6O7BOL[K4iBA6ad@'Wg@7BJ,YhC0i9+"a)Dm/>!J5rIkAm5DfF?bAIh8<4P.XK=LL+:269Zc;JF
%a13VnjL,OU9kgdWXP[AF^EJ;c@7f9%e]sTuBi[;`H]&2q+1B\Tb)q-/0#I;cMVY.DT2\)fX`1YB$<>5lQ!tQ?L,QcW\CnqA+c<d0
%&]]nBICVM2<RT^/M<_/pBDOa)ImEb3T0?XPoFla9m-<@j@Oc>l0Sf=BW_kE4[MSb_%r@Xd7RUSQa\k7+1urY2/^:7<`H1l@\l-^!
%kj1XDY7oK@:8<,L0:0;I&^s6?\U/".N?/UA75_((2<glmdd$nP>(!L6&lQDkKY'h5eKEcTonmJsR8=9^VrE!AT9EO<OfVG:1Vg/)
%8Rlur`)=o)6/#%,_O;,i`R*1'Q>VuK'Y8IfpS;>\k,;4T^B[T'?=JGrBW=.S\2$^=P>d8L<$hme=-c)P#TqUm_1ElIc7>SffNg<L
%oqF@Wn7$,fMjSQI^L%`H='M7n$;cu.+B-V%^G6nLjHn+.iOTK8U(QY9h=[8?5g.$O)254c'[Jdm[8Ni(">6O=OAcqHlcV`eZ]:>;
%q)ZL;31G>UGNirF_KA)1ktG)Nh`esa.r*g!`?HsA2-d*M<BM'>=t+m0nnUj;f(:Pj1/.Sd"lLBomJ2Ea22b/8:<MND,HfN_H^jGK
%fM4Puc?!](jJ_oI'+,0M=nW1Z#l>AR!%mUe_fMVWgMjVFMf*$_=ZT"JEa?U`+s-'h2;`Q`V8``<]rrG:cWrcK-WaDU4%+Y%WW?Z&
%p_N:-OW*#Koc"d$'^;Q1P1oBm0Q/nFRm$).h<fY9]\>,YpXZrnpjTihh:Z_lJ@hT9r`$EiJDN;bhDs'AS:5[;jI;_#CE9]*<(U9a
%4f6N"7d3e"o1JsA7a+<.+4b;,XkYD6'Dul<fi+I\mEA%($+1"%hmO3fOG$5'%%/DX\As4+P\7pIh5UP4>;[8-k&679T"\`jF:05T
%>5Z^As663<J%\33F"L1(V0Z&+D>RjC[UP]F\o1T[)F4G0k^#CTIV-Rmj]nP$n\\4@3p.qVB\`AO5*ZEH8(Cfj.k^>\U&(?Ac]*%t
%l2'2<<D6M4Kq*<i8(`='1i.=!:2JD.&\MFKkZk5)Who$[ZgQr:5dJ>fPpT"\hW+8'UPcOs$oqnI#c2()PQS#Rbq8nF5p1M-B%jRY
%bHn1V$R"F9R3'qE(kQuXCo^2;N?/Dd)Qrc)+nQ/p@IBMic)BSP1l2dKjs(_4j3LG2QlB@url5p0_mE0mG:EjoH6B*7UcirD\[YYA
%D5@p&8u.jKn5)k46Y+[[Z&nKJgfRD!`,GS-(JG9<ej6)$#QC925k`gsW2A,%o3$!+5:K<6Y1lUUQn`IGNmUmd>&[]0n/pqAq=irk
%FA96qW06QP^GKg#qV#0=$RIg,D]\l-aWrEuPSM+='a8S.6dP*[3$g-m,)XX0Ig5u#O<*10i9A\Mc\jfqU6m;r@<Zk7XW8'e*`'p^
%6PjaJo]]sjr2`8'38T?Q`Rngg[i)*mg/9lRO_#k`SL_I/(bM!R][tV@%.rt"Sn/(a\;KG`q?Vp0<M*Ioi(*uofBl0f'%4tDEOV]\
%SouA9E]^q19ItRY)n!)Y*0/ZL)+#M<5'8V)Lmr4kCSa)PJ:I!(XT^C:+rc/O+<5M"1*ERB".*.["@:X!&6dD;^ZGkLoA5qdpf-LV
%Z`T*lHupB1+Aia+@tc7&7$W!@*Bi9:A"GWS]05KYmHnd=I(Nn&Zanr]_fu"NmFH`1$JZU:mi3kP-d^V3lMaJh5Q1"Falf5TCYrZG
%LrjaeOT9+$9TlkJXjitOaDD)$1&"/1GcA^mJ#m+bSuK\XdCS,)GJr9FmD<%oT[0F09!TFi+F!,5OprFQS3XgPH3f%5$L[tT?KH]2
%g#phSOcmu^fJVjg&9Q[XErD?%6q,nm`es"3Ol7XCl%fAbBf`E1LHegr.K`WsP]Pa/:T?QGi63VdPlIMfocQJ&G3Hoqk0*nsl>Z7)
%H1#A)]ou%rp!M;#L,*:F>2rYi=BGEDGlO-tB$`8J9KAbmY+N-l5$,=0Eb3jS3c3,dTCf8[[X;2PUW$5ogDAQ)?DITK5]V:k>sj(+
%r,;Kn"FCWId&SE%a,tZ/^'s\1S9--k?GfMPkV)=b`+m9aQ_kR+@pc*5n:Hcj4eRK2^!IR:(CkgSp$X=[)#NF5Nb\EA>mF)f=OA;o
%V+KE#DJE6W4nAE,-;k5+VCCqsTPAjkInj]g9lO@-d5L+n)M!OG/[u]d<MsMJ6#EQ>e`/<Gn1sFkahBq,=P%NeotN+0&=0[OU/o$t
%7q%o<AeCaF'+F+m6SC#m7EqsG*b4J$U;-]V7+C?)'soHI`f*&2'[OdBQ,U*E+Ib_>7%WJVi'FVD\_pqk/h#J=lSIZnRAu%07AEM=
%b.#(nN]^Jd_Zd3W>T,iiW0q[3LWEE5b(lC+5$MrHWP^b`*/jK[>l=\0?YfX3Lt0S>Vjq&YE.nfs0a\V<eu#mEH3f/*8AJ9'A>j8\
%@;eV)hh8\'Y$gk2(&LB*"3!:$NVR`\@V-UH4`ZD^T1s!#1X<rU8BmO9V&Z#:C_pV$,uU[5qR^G/1R_$&oU=Js@ba+O.rgh^i*Z(h
%8@r`"GUM4#A!]c\B27DU$C;g!a!=+%C*A5E3IT?mXO[IUCcp5)hdl0KUUts?G)Nue%I\McgC<jo0>?>Mhq?lDScgu"`]Jt!46OuH
%H1fJ1p@]354"]?+*ae6?%88$M/I8LZEJL5-rnV&^)$\C9bmhfi(0F;u]o`%`-qEIRd:4,)FVq#PNi91C()k,bd0mSm]+a9fc`ot_
%(@-$2>ZVL*qRX:^,i)D?8M_C+\=jAMgRM.n"SG\XRYeC-oK*ge\bp+THVEYns2qdJU9echN+%p5WiA7eHeRhU1Z!P15ju<hl2cEP
%Q6#LX&\h*,VM';eRN=jcHOa*.Uh`*d6!rX(DJ(_!dK__Rf$fLFeqTVTN,uO>M-L+)fATo":IG%M'g4pLWeM>CP4KnJMMdkI!k;SR
%ntIse,:a&]Ao>A@[P3T5I[.AXH)5]7l800:2>Oj6($X:IaJ`+T?qp24fOh&83m:i&<3#8f2/Q/7UXT\DbDQ8k'djH/9?es-ZJ977
%elEK]L.$6lq.Eo<YRe<:LLTP("[u!3[cXl"Lh^R\)g[?]Y?nikUeZ1C%'pK>g1,t#UYKY[`\%u5r-@Vb-L7T\9[,Xe7]6/L+;WP1
%d]KVGm9]+(Xl,Fe]T<'%f!*RoaYd.2U2kC=M0rg6pV2F>V6=tj;`jP:M)Pf+P?dN*,U9CZ`J:-RH_G/lWY_;fREJ%rMX[bmLHXGH
%LV>jnAV2e>Wk!#=B4-QU\&A;f'THiB.2SChk;6f)BUJ;?o6U17a3:I_*,"]j0#b-PNZbtLF*/bg1]t1?&6.<1N6M04efE)Gl\]:9
%_4:Ig.TWU)8uL$U*m(s.g4Xg2&Lk_p)#\Shf^@*s[K-M.=d<F9Rpn%"Y_98\f7M<n>VUD#$M0^8?XAg:l4>sY?;Xj[l82]JEap+9
%qO.#tAic%3<"?lubrd'aWZ[!hea5]DEs3Y?+'l=B<XN_A1Zrq3D*>VHW.5[LmuI7T[XESL!)R_Xlhbjk]1qL$YI`Q?mP_lXNUh6g
%^"Ii&2sL5,r9_LRG<if^QJ<KB\#7\:kLeUQpZ?"6]4ZNYCTf$!s#77h#NMuOMgB(:5-<5)@Ao,^4r-['dWJ"00$5"dM;@<B)u79#
%gOp>W:1rkZ303Y\H>:U:7$?hG+=ad9d4S"9GIn02m>JERB1j^$:Kd7k1!d5W\-N]WJtA#[@T)Mq[\NL4d5i7UVVYq/P$2]YmB/SU
%grHQc,H,L)Q^sjU[\a%l.da2(`"cG2]USl@l*k0pOJGgC@uE`nGBqoE<#u[Z?J;$p!N5"V`j7UIdo;4tDdK,*Z*G1J5EG4S<KpbI
%Q5YVjZJ^9sG9g#YFQ(m&UKH0-g;&X4+WeDhd=\A\<8ECYn<#fNlW<aB,Kl#JX=t6$Yg!>=//P5Woc>"34Jhr._R4NQUBiSXd#MkM
%0PLcr=O"&j\`/Cg?Rob^n'O6uo4=>b^>-t%FpQN_R'MZB]sToX2NP[Z@jYq:M`7_spqkX+/'JN?7-n&mbE8HtFLT0D1EXI4&lJ'h
%d?V<QqqX=;cnWai)(0LPq-"HVN!W%g[eWiHKmH9)bG1KeYT3ALfd#tmS)f,o^MPC\R(T9SU""r*+K#eY+D%.Sa/fahJe%0dHT8)&
%6rH)r25,aGj4K`cV7$$e@Q%r#C]6b3XOeARLpKREB'IG!N4rO05O1<)]!_/B7Z;,S(#G:-SiXKapj+Q`/7tfnCEVh=SjJWfp0\*+
%l""%3+9HU1Jq<70@4P\H8jq>Vh?#\p3\>_O6T&6eh2>IhgT5^SI>99aObH?^c]tH`gEp]!6_b7+BVd=i[kbNSd)f@6nO&VljCX09
%<,oaWVa`S=WV.$$43=&7EmU2;.In\kh"8\RRu3s%3=]`8Vo>^=Q;F*FbP9j9cAq<0.AGq[,&ta]&\-9qSiOd4hqMW.G,*eTlZR>r
%]*mK_Q1&Oi2]M8b5(12@^YSeUcA6\)PP^R,mY&/7bjNfj]CYQ,g\BM%qRSCN&nY+tMPNcbBp>)uqD/SG[A>_9a?e@579nTOX(35:
%adUE5jAa%']W[)Peu<e/3E]&2:Q9X8bng3,Oc_1642SdR$3k9i@@96qMl)eR$T4*9PXE>['3lM9.Hn(o]VanMCXQY+=5>L`UTf[j
%XZJGB5f<3$Q<f%=>%])Bj0UVHQH6K\WrqYLL>e]V;ol,dFG`N.l(Y'NiLMX2I)mm_RaP4b[cA;-;m)0Ci!gG@s7Un;2)9ldQ;HYA
%?=qDLR%oaS`W8s&Z4"ekZf;QEcMi7Q?Lj`L?N)5Eni_"Hf3I&+GP^g$FG%L1H7eK!Zb^stp6r&l(1hudQad+OXG7fS@>CE@@>F6>
%)H.`gk_]Ud*=>lX-L=0nNbeSNS93@8[5Z04f7jA^e:t8mYSCh"f\%#!&E32:$TIdSek\jqH!,A;-sn#NDFBBU9`LiWC,V%<3^c7I
%kl/UZ9\[6"_\$bTU2^rPLO#KsN<#>J]$In-5FGV/KF0VuHAF"0KoNBjeXK(#h5Re7reJ?c004s\3WpH\b,Uo"D<%UD>(MMmpBk\(
%6*tI,2"fJGWoG&oM"2]Fa=eopSo#3n>b5sk?HWD.>+mD(1tlXu5Qu,Q^1:&X_*USjU>(u.m:uOYC?7f.Ci9:510\]MHIH56KKP;i
%YjcXjdc;^)(%BM/+DYL,h$OY*ZnqY]=NQ]op-&oIMLW"&fE8-JrIYCW_f+q]]0i)'BUMKr_c;;*gWX[8!+]@TRZ[HU'56a+VM5r^
%[habM[FMqSg!2FV^ZPh$ePOk[D&tPNl1Xjf*dTXS3O5Xa<QDuq"WN3pVM?O0X;nuQ=HmfRE[,?!XeTlBr6ShK1nPiC9`Dn9oNDk(
%Z2'=8`&cad:W535DBKBIk@%G*%9(0Hr.BiEqQIR.Ia,A=$`@c*lanl.Rg8*coIfJ+^4HZ;rLs^-lYgTJ[r+Kt`Y?Z4`MQ*Y]=*a=
%d&f!&d":FuJ_sh7BeuNp>u;7:(m[A]NNdk#P/UoElG3=to?a"oEL!`.cW?Zk(#lsqNbu+t!>W6_c?-qP".NhqY/nKbM>B(jBti7k
%^Gd(1cq<N6ra7Pq+nbO*!E%bs"bJNUbN&ST4$F6^6s:=n'o:p"a=`u&f+Dt=GCT5-CBM'VJGL*lGGYY3F[6]$\JGt'TFm]7lsu(Y
%hJ#-:E0]F#%<nE!XD=tpoBM-hP5q#F]s]Y;2`;E1d!KE+i'FhQ<!+>?gDdXd$8*eBIkXCd-J/01_$IULHU1Mic,PK>$YP0FPU2'%
%H/1_0L>]Zi8sjTO,aW6?rpNQnp10*LTbY^2fE^8VcED]@;11R[s5b&HQ?g"?<64FG/J0p.FAuJn#'tnA$LiX'T/rBA;^+R99p:A/
%0$r]_f!H]OF1!X#$11L(&,p:6_cm=J,PV<A.@=%:Q/D?HB"H@C_=tjr$KXe)FBsOcCTh4Qe"KiBoQ5Lu-=D\]7YhM'$Tf(]9lAoO
%46[e\>OK0Dpt+X5iQm8MCZ@8?b<D:qD7QSe3UNa2lLh'5.f@7iN<=t=]Oh,fe6lE)<(9fkiYAi;B%4O?Ofo!l2-u:QH<;lK<0FGK
%"Y$;(r-ch5(*oU?0@qu:Qhu;W6$M"LNUR%:?+b'\QQ7o25f9I#2ERpae!LV[Tgr8`NE5m)U++KMKF\0(LaFmIfZ3j#6$bba"q;HR
%Z0niHZU]SHENStgGa0AN,!'V#aD0:I',1iP.4)=QF9Sp-4.4U<%,66/h^GD3)%0CT3Vp4kr<I.Pb-g-WoEP`7DOBe`@W,1BkN$D;
%fjWG$<Pqk]@MKBAo(8ep:/,Y)Jfj#WW`fc?rf%2jHW)+MA:kBHoF8]`O]Q=rAhecE*Fq'M)<T@*@Sa>j(+ifKhORncR1CPQ^F>&"
%_/!T"g$H-VW8V(@\cZ`;rM9C$U6;Im?N.0(V/J1:s3.W%rc6"cDC"SY_L'[h+^0jPK!&e0!:dht78N%H=pomNXO:rk#P[Cu^EcZ%
%K);/+]!:I?oa.0%H$']YF:8O;_tP+ic-C@As4hEi2`oaL^3@=XhX%&IqsF@%r+62Kg#q6S&DiosDi^7^A*E'f\inT82MA:4CM@_0
%<eumEM1p4kU/g()jnHI)h2f4:r('rT:?Df"mVJgRr+rK&l_*5Si'C6uo*SJtn>E7aC&,;mBi^PGa,4(TT17oHIW3(AJLfT;+S'u@
%nZg1Dp3!V5S:6c'T<pFd`ECWUG5kN:e<.49$]:8&FR7hP!!W;CB-VD*/lTtp5&b?\a%?&kLRKe'g_DZB_"Vb2/]a\u;dEOq#d3@C
%oSRL3fa.9M[uK#h>Ka6LGI?hmkX$:=RO4&8CMHW6gUQ`cs5(/\`?Nn[X_;/$HMM_0s21_omt?)V085;TLVNbb09E68a(]!N[A-+i
%CI,8@g%gHPr:PX;4$_M>Zn56,nUSiNh:Jq-=2,a89^\EO;N`JIB\RNMk6/puAg4CRN"^EpdWr5:j;Wl(]OR7UoB#/=#mF_1>5R'p
%J+EbSQ\kb>?#Kf?\fQ92VUq6J4+Xp-h^E7eMtFU$JaCk\HST'Crp\lbSj(r.B""i?c(fdDhu8"]8UEuX(;I2@k(Bp%k@uY;eOSq1
%UcTV^rQWfh&I&6;pu\-Fs6*s49bh:(1<BULjKQJa.](C?2?@NsIiF$#00]E\oB0!=PPk#j+9,ic5_W;nfp\=(,o/1@m3mc5UFu_k
%K:*7"&R`i-N(\QtS#=T]qg&)%Dk?tR^V[CuY>-9Eq23-V2Xs)cU&BA0&MO^9p63"[IdurHSj!Y&'#L3s]^tojDH.t:!C8K?*F%9@
%iW6\]a?a<1*5\cJS;.YufoQ.]+9(H,T5X>144r`RBeb%@oR=RRn])VW`\/&B/F8-%ecehRD"S>=.#)r=$f9_$n$du-s/ge9?2i_?
%"!3eCWN6TP[O-HYjnn.[#K_8GF,J?`^No#<IfQ78/&]ANJDk.GhXL.6]?p$Hg,I@XYrCa5?0h+ZgX('DK/G0c)V87$h"^=)O;fS8
%R2=?WpO9Hn4m\&U5Z;k/Nl_3k*=0LUmH3lNB7\s9;2!:LUZk$iqtM7[iaN/m[nYaH.pS,)l;ePmg"XP"[bG=[n[JsLYc=_j>*-_i
%mBgd=[,_E\I+PBHqu!'seRgl/-0@kp,]K#f&UX:C-)C3dYJ%"SqMWrX"g5tU&l<)2Q%5ClA-j[8Dh0J7J)jh#7H[LGaHLLtZjVRE
%E?h(U:n^lag"#D;;K;N8bd+/EE'<1'=`lUY+ot8^Sca4qm-FRh%U<N"!#\p1$)&Nc0`r2o4u_o$s3lZX:BA5)RlZAP!h?n!A(r:A
%-I(`ogp[Xk/R4m`90d\e"9<[Z+l<#AFcdm#!Q7?=o'-]iB?Q0b^JAJ$UYWM<2:_VPC.P/e\06"$T$=6dE7@*+*)G_r`l;d<?Yr4H
%FEg&T<`!VK&@9Ni:`3n71qCi9mJV2^.=B73I=(!@0qB<fH"m<e2F9<.]A<2#L@4rm%mI=ccP6=l3l_HI"1Pa`0XS"&.j-TOh$d3c
%TQ30bRZRU>ajH)Ab'q'Jp[6f+:Au;J0.,&$G(RI?DYVB>Y;0#-gY/ZT&^f7eRIJB#o_.$:[Ii1f&1"1f,_ndu"n&iK2h8@A&f>d5
%BsGpqQi`#k57LSO)M`0O-iE9$LJMa#%N]XDdFtb2A3I[dCSDCTFbhY)<nu1']KsbpOS5#^"io3%'7KFe?HfHtSJp+mq/QZ@"64>_
%:0.^u9EK%sTOA&o37]SWdQXq,*\,Xn(G`X>>UEj6hONu%CL7Q"5h*+,2a:%;-lHrMne\V9eMpVHHo\AkL''+"[ZA0>K_h)"/&1fh
%DE*.9Z"e@VnGY'55Q:Yo?iT7K7(IJU(g&!HL#C'2TOoaR6pJ7<#qTf*L9JG$!B"IadfWdrQhI]j$tS,'H,S->p,m`6/.fQ\GpMG4
%kF>#gF_)fbmVEf$ae$,90W`h4NHpoL_t>km!*L"\9`o&VDkBN^l1j<BUqnsk$&eH@NRX?0)W?on$S"M\_&j*7E5s,*j":(j2^_On
%_\mOo?hhSHVf9i9\<AdF9B;jfTI.N';2&^Qo.D4U<g.3d8/L!:rpil=hEP*%"tk5Vafh:)c\EIp3T3(mZLs/Z`BY7HGb/T'<!&`*
%h@T1'j,*KkKL57\G9?B_r"anoeXKDOcl==2?M'&Y"RW0:mcfP5CeEYud"[&LmGi[E!r/b,d\`Lj9P#VI+@Bi2$uJY,l,\>L]E(C@
%MU0\/7E`-nD:?c%[)[Ve!YXa#fpl>b4uSq>[X"Qk4g4+rL#S/A)Q'ZkcUD_aW%DR%Pn63d4mi+C]W1,iOBDnj]2`sF]Qq-@GBke2
%jMF$Hh*WIk&Co>Wre3Q5j8ipirXQ/XRb4;nJaBm:j0c(<YeXkILeta9KX8+"s"KsFX)BYg-)qD/iDd(2C*':IUq$$<):GS9&(^!1
%=T"3cC2l`+*;B-h=+#/*1GA=&^\E8Y`ZHp#cI\BpkfCrA'O^rdq5rZ1$\mQ=#B&^Mpr;*N@U$S&-<('#D6(W.Sd&7uV3L39-VS_D
%]@oVO&`7g:B%<N4\d+P[,++e.J?uMJ+pT#BG(2],Ls/@qB&jVDk\Tp9@<&K"1[&Am*^[.aB$Bol,Z].7'$u#Aj.S5.@T'u-UI=e^
%^Mgqsd%3nTl/k3j,W9Gn9>>_f7,bS@J#LfRlEB)r"nqCfjcD#ad48#orp8[,X_7uY$P6"LEue</l/;)O$f!`\.?qcaZ?r['#Aj!^
%jBbp:.fP-$o`+">/prWOc>_`WZgs(aP*)2Ro>,,f*;lpWbqj].fQ/?^lr7eqJd[7e4'uG9m?rsTT%_+e9@.TlIDg6mgHXI)?0@SM
%HcL5#amM^8(i49[W%]e"_eg4)I+TBGb9$Vfr+<j1a>>^B[L=@]+/-YMUYG<a$fQL#J2#cYSZ$6S2&<ZSB524MPl\U<+J[6fK,S/E
%:M?rYPH[O$"f/XXT+!!_<tB17_h6B,mgpcq2cu^GP;.$bo/,C5K*ORjp9HWc`N)r_K?`.OR1TR4]8RmnhK0XQ]Ui-jpuuT6br76L
%mkq3?RkB0gYYVS5nijUE&PksG&]=G\=5`Ln-9+_27@t+I(r/EU1O99""<Z,s]J5CTSVZP<O1N]qD0[dX\lTVb#OD8>XU^s2%FIS5
%el[)r@no'M5kc*27=]<*Kc0mNK&iHU/#6ePPB)Z&1@3,mk:Kt/"u[c%.!KOH2j34nakO.i#4Ug7_Ig.#4>usYK:R#2bqC/bjKk0.
%+OMie604hb[V<l#T-Zs?U`03g\1T5!XJQ0.J7fqf/H#CqWZRQ5!G^$V'r4J*ArP_*!rN!GL7IoX-mb39j+TAgQU)$J-V-`6XY4q5
%eFHt*T>-%2-%);fi<>$R[!?g`#f8t[C,UIYK0u+#b?4D1))[=hl4"mHK30sJ42u6Q7CV+Hna"5d.'@kB6T+nMO$hYc7iV5)^4$:;
%O8!*NV)-/iI`5IkD]F`1#/VWm_qb7q@q"L&p6T0ZB2=8tQsJ8]G)J?hI`T7@2!umIi.omRIfccN'!Ta`)VGch,G"\UePNN3*h]<D
%aD4pYR+HqBS^"n1CE>G*Zsuk5>m5//&-'c+M`D7:49/$6NHJ8&QF$&h\EW1CO$*ig4Sac"-Ws/uJ\>5ifuhl&6F.K9cbq%AW6meg
%aHR9GWlm/p/b9%fDPW1p;4h3FjpqY(^b!%Dc7n#lXhuUqI9*hcjLZ!rX1AVpoDACT2o2&*knd8HhqFc+`__[>m\^Z^\2O6.RgP.e
%QQC4JRE(3@./Jra[:[t8gW@fi!)h!IUO1bM:4E#Sds028=nKL-U)S5rVN6Ft8m=q%-"4M:=5$n&QpmFP6b)?JR^4m>i?Q!%%Y/ir
%g&8h0V,Z?:;&%X\o;KUfdUWg\</Q]"'RW7A%1*SQoek(4Eh=]"[.n,MaSXXp.0.>rBJg^/c`pJ%)hJF;W_4PKI[[B_?<a<lGAq^@
%rNa]6-RPIo(\m1_f=pY2f8k65P[dRgJDL+Ua.Qs]7tFX=0fIcFA:ggT+]-7tE#eLDB#k5N6hU-,N+p:LUaEI_OMo=<hX"6tKQ].i
%^Pd+Ip2)4niY@&#o=]EZauVn_3ib[Qe!]Q"$&CGc8!'k0YM2iJFt2!PH3&E&QL4*BWG7o43fUfEKt/TS7@C'n(mUE>kL$a:bCEF\
%?@1/C0->EGOS`Pkh*r9&aRF+T4!5_KO(9&-Nt8/?i\56)ZO^6E_M"s%Toq'9aHS&Zm\i-<;r<t)_QkP!>:c)'huS?s\0r=?a=pt"
%irbo-SQg^Tr78Xo'rM+rX8&bZ)"OCiagJf"+YI"g9B>%mn)0R\b7gNs%+dWSHHkR_N\B1\#&?hVntKr!l<rA6Q;'#3KB7aCp@@N>
%T%1-a?P])6T7%RAnB;H=ARFu#jS,B45Rs%6M6r72MRMi$\&Mi'pB5Z1c@3/GLL&Egft22Jo/DrZmZU2W-7WJc^r;?2nSY5VDiK21
%pcusJZBH#2m8X"kZftbF,]YsU<<br@d+h42@.B[CrU84*1T$Ah7PJ\f@iGH$1M0Rc4kj4cW>":;Q'(Oi%Y"5@UZ3?Y_Teh_Q_1Dd
%K8U;kCkTumRYAZ(`q`o=@p7BlGbr6P5(IB`OlC4c)%6=E;k;"i@0l/_f^S8NC"Z;nSc[SAf'@,hhUlTVUl$0PJ@LOKIr_KqR5-iY
%((2$1pbC7P`o7Jf`L6)8##q<HTuc$?%+$UU%P:DD4bb?pFp:d_TapIL$,sBEr:4j2Wf"*KD'Eh']fYpgQT$>Z`V;"Q"P@i1l_:]%
%d"hSr?!W66a/:@EY0>QMn+0h<I3Ric(8ahX)hnFGl<f=r6T7il-PZ42Pt#B*hd-GQa\pbfR@^bn-2c_Hf`H!)*Cmo-d=">e[s"Gt
%Bdk+>K^sp'oeoC(:5*lFe.5=!hASVl#dPAn-jjlSq=Oh#&"TQb3ZNMaA1iFV,:OYjk_c*Phg7C(J&Q%`H6>ptgn%Zd'81u<"?'Ho
%leOT'"KnWW?phc7*I*Q"'*&A>?4RuT'b"NeVGl'^<*NaO<C\aGOM^Rmg59MX>00*5(1t)6j=Q#<W8fjI8u:ep`pGF&&hka3o*a'[
%@;DMD7K@ALE_LC4q;pX3`5/sakUr*f$Dd.HgMuW/kt[(qK?lh&cFR]nR[H*1[75;.kcLq;a0AGCZdTqtLQJ-f"G?,;]D-pC4?KlD
%9]`$8G'gZJ<0NrlJF'_)pI=bjipCGUa65rc5\%:9!d<uY:oWl^)$NMMrt3jOUW%ndUBP2[\S5H;eK'U5DR=r'IJiq]T:iN%J(K_7
%_p:M/D:og3$C>7E'[,E?dr<+7A.)eqSSVO[GeXQM7L">3Lof"5MRbgeHDYZ0`4uq$*f!+FV@d%C*mgqe0\e&H_<=h_@Zh1Nk=R7l
%P7V08:<ithRC3NcQI`G=1d#OVToNHD9nI=]TS==h/^5ZL[j=$gEQc/%HFa0n>h](mD&9s7fQ"j4.Mh%]b/ncUSSn*QUa]eu;V'U2
%Oc*`(Jkj\s>W`#&9r?(E95kn2KJi!5HXQju"^cjk_5lM0h8-f8-Vk?_Z&U4o-qVPO:;:5LP>@Ct=&u#^71@mSigG]=:U2i[+kOhO
%#ps5l#cuH05a+&M-IFd'U:_IX]Vtu(k7-iLBQWqo!Fs;^]^=n6O$.AZ(4i0oE4o-%Ai6D/p@!.MM%N?+LmoVF![I#?`sABiaq4$h
%K)-?M#]NT&rNUi@m/Sli@s&1aN46Lie%]e9XN9+Q1X7Lr(4p9eP4D[gn0gATT006a$MORjY*`q2lbbk!GiZ6=ZP\8Md.)d'gq"W`
%"qI1N<S$V@R2ZCn=n+.dmt]XmIegbiQ5Fc;ekCP4UN]^m#ji`d+H/]qHJ<.%cp99NN\97T(`I&!$3b>[h*"$tkhWDT';"ErV/dge
%G+gM`[oINVZc5o@Vh)`;ef75UgY8Fo;"TsFl!K-29qSIleprFN-Fn5Z=?OqqAW\^&SQ8Tj4Z[%E?0@X&h*&:p@@m-10/<hChfSJU
%LE>*d(>tKYh2M?XHOG!"W29#eCW+C3VD9N0]Y#^/,2$5'1K1G,\uQ.4#P_d&0m7K(!N,=U"nE*,&6+\_D&1l`)KYLe!'BB;F+2Q-
%:Gfff6]t7%T'?EbA<V/"k,LmU7Vu%LBfR<QWJ`l[M8%*AB;+HeZ:[3aWesp%C&.VNk1jq1b:at5X'`k12&_S5r9ONJMh(-pD%hoT
%apsT@'YqP!Ns42;N:il%hAu&Z-H]fX"6$/Tn&n';-XEit'Ta/)NNScEj?i]q+SN>Kb>MrmSkNoB+g;Ct(7`*oXZ$5rV>9c:^2X,b
%>W`$8-JX<deIk,qNWPUT$DB53OQ/'-3e#oE^+nG9e)+YTS%@kFf+0ugX[DktX2=;O]mU/t>f,_['WnD#Vc8<0PBe3o,P`pAVPg[=
%fNZlfEAadrpWeJ)U_3[ZF_ke<-Lm0$*2s8rXb7-a1VKKC<iRq,%PYRl05IQV>M&tR0@R]^e(1G^L2)Q/S1CjkbXn;Q:h'q3T2TtB
%2,7@l/kgK\JjoQZVk:C%G$Rrs<Co`ll/S+k44qMd#=nn!_]TqP5CnJb61U5KY;1gICnAV2G-bp%9VE\222Z@W;7_;.%N-oC*9dL/
%FiAS<kD*`_F&#"Kac6q2]PbIu'.F^02L8W;b?,"Q]f,?A(Xk7Jj0cLj7cQucH/Gi(AEon6ohTKPaBX9%,0A3%8cka.(9+t1pWgW)
%G148\+*@-U9#;MsDV1S0'N.ZbS^#Xp6$_TA=9gUW+$A=B4j\NTi.6/qf2>KVN0\X5G:C#C.^#MOSV<9CY<G8:.BPU:]2oWf_O>_c
%CSKbYf&-+`;7I>$S]35`PH7/VZKHh65BSKQmqGa^3=?g<JjWL!bk3G&M8mk"aZQ=kY-@T;gHL)b\:a4>`,fZlW\9W@Ms=NF.;Ero
%>$<:bEa]o^<#nem+][r7_nH0[qccShOpH<Og^Ac>N`n;PWFSM7]3cW[LD?`%ElhK(l-]WK`PNhK*;D9%_,Y^*;@N@'\NbUp]^4D:
%&u<-P%u(q`Dt2O80Jcdel%Bs(rOS9-ZthZ>)"4_e(C`S&n]Srn^$g(G]RGcQL]5P$Dj>W"bPmd[M",&gJ6=OI5hkF-gurr&^"(l2
%<:=jR[qV2tXAXnKf[Jg5AraVOo2m4ceK]uh<DkksX]p3p8@Ebd3"/uK.qN0rY0fj3_DkV5<^&LW\90$mVS)%ja\DE$RKEi@cqG/.
%C353uBQWN&.mT&/rO/&"5P"EH@RcWQX[oo.Yal9*U495P:!g#o((G'/m#WeVcb4<VVjXE&qQ&`\fe+pI63$(m+PW4.?k?-&:c6m7
%>Kp:kZG!CA@U%AC%V/d+'kg\6"53D%F9V,S3+gogE+->sVr5qj/U1[JLE&QS%eXpJ]p_n`-W.%LaOWulY2L/Se7s'Op:6Z"54k)2
%FFm12%7uq(ha+AZ_1;d>\^&AFLS\`GD*;N?<F#a8Sj\fnSjPQP]A%mQCH=i1N<5T.EG'LQh,>#J=#H.aD,5n[Bb;PQnR8,,Xn9,T
%pZdiW?!U":bfM$_\Pq9^]9748>^%"UCBSL@eH8C!`cZpg^'nVd#ao%D^&7_XT2EG?\usTdZ#-3U?er?VL]PXSW>"u?:.Hr4oK\fs
%,I(JW%c+O7*eS-p:A7N6A;tKh%mCa=W$"m"7A.h8#[aW4&h)3L(//rqH2BpBc,&#%3eCRI1$1,pgm^7*AI(Kj1g.Jc;?O+.?7u\\
%7]WH^_[WU?gQq5)^lV"ORu=!$9cq,tgei.\eKO.W&0SR\p=aDjqK<!>"e[YeFD,jdOD+8O8_)e#YtoS'FNXF65+UF0>si1PN5W/X
%$lY\*!WJUSV#alnZ?tB*,4Pp<NuaSPSs9#&B8/EV;-4r$@%0ZnV*S]8'H:YM/3uq&A-#9[WP[@g@QJ'JO%n)K[2%$tPJg+egMZo`
%jl9[9I/KAKY/9PHK.Ess=A>agoen$@?,hcl,"T`-b+ogUWXAECFK_[$lN,D!Xh5s2Ytqr3QDW%'$5(;`hoV(">muf70rPF!2i8O?
%[S9u@8GauMc&;1/XSl=?6T=<P'bcRG@)5tX&g7^3=;>"@f3UeF^/[-'SmFu<UUWW]hV#_?N>uaif#LKD^OGD@<rsth794:9h<V["
%?8chF\CBs<ZBjreHup8Y2cj.KY,b9Wg`-Y88l@:S7rAggn9i6mEc\_tSSMEtEsO[[4'I[**"'/DF!bC(^\Kp*SL;;h/EoHf<;SLU
%EXpPRAQ<2u8BqsIIj8'Vj;b%EcDo,,QC^J(3XKCkcb8`.Q]F9,7RlI3EI7`Pj"pDH%4_^#n=.VDf(R@&?Ki%8*FNUrE#=b,.)j8L
%VaGVh.;qDI&2qb#FG?N1BsPT4X0uKgQA$<s*K=a%\9q'26ip'H7,.t=L9P;E%d/NFPk)$&W',sHGE0%=SVJ5Sp<[*MJK^[(ePcV:
%'`-;/5oj,f9.8\@o#o':6"?r%!6qi0Y<##UZjT.d1!)4,DFGu02PD$[om.gP+=oFr>d%^#7>r0Aqrg;[f828]N7G4e?qZu@\#*/6
%d`K!)KuFmXhucrE!30#LY\2NukR`T^q!80/IYdIpR^9A#TRS^WRkcdE.\A8;qE.KRqUF+KPtEA=M!F_Hj-!c/1J`"Qjs1i1VMAMB
%l5<'jVmE%mrn.NhQEDH]G+k-;Lj\'f&YFU*Et:<4hDX^.2/<dKLqEqqb'&*?WeS'7W>6_`.7sV.i=SM6Ab1LT:oDZo(TjgO>Xk5#
%#=[CY.R<g,0C?#Y1BbT@b>Ar;eKC6@V<W`;]B,DU\Ld9cW+;h5eIUA94&Z-HALX:oh&36Jo^_<<T&n0WD^,pVmZj_!ps4$#ps_RH
%X(C:aU!t8)W.TB+;F:>8(p#L_=0Of&oPP&52eG>$:`'jo-rG`Iah\r5U@f,=7uB\sdqdt`cFPJ>;Y>.5'MHASQDL\o(V;WSkIHI0
%dj#Hc)4\0rpDf$79_SWIp;6"qNI0o7p[%h45(<=3K3@@@m;Vb&_s+K[Y1q;Npr4qO%s3UNAk?gdoUXOJ_q>ghdDCeRoj,6"KIQe>
%dE_Gg#epm)G6\n@/%0;"gj*\QP-T"Ya)A6:<Y/E&UogqL?lSIji^k"9\jAlBkS-*E1+&?M3%#%]e6!,la(=!030/ho,#g[0pb-^;
%QZ*2ZXt1$;?Y<H.mPR')*m=1"hY-O+7imu>[NhQZ\mftj>l>L.pP.DF-unD/D7^)gJGjT$@/GpCVpeoo)=+;>cJ%X@VTL?dms-&Y
%7UfS14k>jI=Z6tGnQ<FJ1*b8ESEsX8bdndETH_AVnBA1pRA$"o-tdO13:JJ)[[1d.<KtrPEiAdoiqo1#*??fudV?!q?*44%BEFC!
%Dc&lo](kC)%TZm$;JW%#k%>d,0tZ;B<f*9))2Bj$[MCNPDs;A[A0USZoGS_A<`Rs:Qr3a&DO/G^`$PA@`,&cX?<pAN1BMW8M^+i3
%F&2lS8RhZGfO+acL2`"RAiZ93RSB_hHS6<)p&OU&$f!P^`7?)dMH#?uI;@mK`%C=JRHY=F_@YNrm4le!pPSb/?@M^kj3[An!NTU/
%M?ZL7mI2[7D^*2AD[ktj)'-Cg]\4<+AirG/gW3>&V9G@]5PLuqR4d!bWgREHf(P2I0u/dJ^ijCWoi1+iG*VFp%76Ef#(H0j/9rg4
%-o.Q;9U5QM07:("CU$>E.VB::;W/*@:V-bOd-2RoJe<JEfB.J8b:at5X1sg!1SMQeUh*+@em%e_=7(9R%?Poj[_srY-uVND$le@n
%rRDV<d3e/NDcNYB=c@J-A+?k\Mg73a@p1*tJc=D#R,oQR4f/J/EiI+dd["SONGkf5To9__^*MX!bbMr!>Jc;k,Kuuh!BgQCUPbC>
%"+E1C=KI';om<V0cJ't#rNO1k3J>UlM/!CQUP>eYB@4_U9PY0)E\<mC:kIH"#J>MY6:3*2X/&*YGPNCk@?Qj?>W'hmN9X#-.30%n
%QTTem2[#3qeDbrCU"47k%#hV<:)nrT>b$PcR$;C&I-QJ#=*V^%N#Yh(J3%:9-s++fp:et;:X)YDAie!=*k5*#rSh*Vj6UV1^O4te
%>@g>pZu&CR,4";iF%hpVrJXG98N%9\9;"LE#(fq_6D#./[8i<?,hY;.]7R#S9dmmaU0;f/+#>OODD0C6r<lLR;(^J#f.>e>W+']=
%Aa3=IDRt1^:sB7H\--\u)eNV>/.a@,>Yd5N7e[G2S8?2m8u"gpINn318`j#on-2EG6#QPop#Ed#Em<E,_q5tAIJ-S.6CEFhN*7^t
%mteb15$mi&5W1>HWdI3Ibn)iRJh7@aQW<0g"U7-2XsLEm*5VMedTR^DQWmr4k8gpsXTqoqe(JZ3$Tit.+=b6ZqJG(hWNr<1f-r_f
%._[jIo-&(-X%Ul"ef"m.'BP<Y5L1VH(=GuV?79m+o$pY\^O4\]hmJ:pggSa5.Z,u*jV\,sW'9DkP)s4U9F>^=BdF;%q`5V=Wkp[@
%eHGtq5TcnW@`AbH9_P1)CDW)_1:1H+_;)Z6J^%6@7D\"\%`&qL)<r2bT>W"[)`<ekrA9rX"4G,_BQ3jK-crF4)5K.`kV5r`N1\_8
%A14pd^<A0S!QB*b^O4C0L/ki$g$BXL<T/P(EM-,^hfUdq=+:J8W%D7i[t^&&;X/\+XMnMW'&)j+9sMAEj0f319=RQOV!RJX,h6Tf
%(sC1i0FW:Klc%RN,"Y%B`8a(`p8rn$*)CRNP[k-h-J[V_K@g5d\^(gfg0SQGn?![jIWD(rp`H:mm)aLB=%g@/JYS1Dfla/kP?>Q`
%k*HU,#*U=UZ?"l4p=UV7id2=jb!iK;"RCrK"JT#&I(ddJD-0tuB2:[;jT2/qLGGab]@\[.Q)^JXKRVcdoVKhcTsBjQVkKl^`iLut
%\5uCNk<Ruu<9=G(@erPd-;D+&'NV;*c+ds.UJ/S-&<L=89#G;knMf]Ue09'D7MX7s:mm'YmkAM?m)/MT[[1>bnds]"7;:mIie3*:
%VP\F';AL<D&d$P>BTHYS346+bB&9s#i2`R30=u9g($V0nYk*7D79P^u'RWO)5CRkSd`g?59hZ"_IA&t`b1BM;j_-;@L%[MpY&u.B
%J_a%=$u4?b#guKA>Zfm*)%;b4-%C'bCk3h'"+DB[(qB/kp*N0j'u?!]jc.TWr:5Cl6oL8QAkfnm$COQaB[B2*oF-fpA`9[i+J?S^
%L3-q5Gd$&"PE_M38U^]e^(l'Q4WRs/nM1pI2O;_oD,Nn([AK+en9[pQ$'_53O.Bu2iSuF;=l(U>Ye@^rEIY%H826LLDPW]^f@DiY
%&8s$$a[?<R6PX,kIsR>QpG>$52/?+LLN)p'-bk&e@@lGcRgfOq>4K[9mOdOiWI%Ks&pQrjB2c%X,W&-gVUXS8W*Q]NK%<u(AA1c9
%"6j;9104gbl!i2%AQYY^8#*lS2%7U<eq;m\"P4E>^QJ/!rM56H+b'm;;&]k,3NU;`)H@K^,qnG!?rJMNPei,,''2^;$EQ$kj"_pX
%<4BPb[Ao+F%ONouGgjhh+8Hf'S.S_)Va/gAF%">Y.ioYplk+!%6Hu=3[6EBJTQ,!`[YT['f7jj5Z]B'd)A3sBKOPC+Q=RO4KUMCo
%J[Q^&P(i4)dN2%6n$`Y5>j*lZX[Y[=WlSLW85i3Spc;SZY53*D9ld49a&"G\j;.Uc!tOTkH7j(kI[[ME[bGpOc(k_\ft?=XmGo(E
%qbLpoZs<@0ZUd1qHoYbPk)Cga.Z<%K1N2%CP35#>ku#,h1>@!Ad?@s8.7l08F#jEN6EqQ@:+gGk`kG;$WCUF_IGeRQN`NZ\KQ0U*
%Z6b%dmdPH:J5hcm?!m'r>Pu-s*2N$Y:4[&7l22](ZjFU&[Zkr4BAbO@<7IjUEe3YJA88CI(RJE<RhG^N:OW03?)1AC<1tn;fAQ,B
%:bHQI*s&t=JEYk8b0948^Veqd\#lr0C$rf=7Ze^jO43u69bFBKL)gIIGmpmD]>d=(N/D+]gqLr>QP;hPS)aijQfNR1[R^+2ZWf_j
%MSSel(nE\KL4kS)5qEW_h_7--V'Dtk:<D^u?1"C)T,=[%.Chpn[bEupq7*d-9\%SoFG\>dl1HUD5MAMSnkN:Ig.?_"7]4n3I\g61
%%-]TUmO4<W;FtEo6M5A@Z"#1GjqfZ2P,9W#ZBK[_3#U+J\020u));IWOn4aQ,qNR)ak)L:>JGG8AeeEd(>^=][J4p0LEJ']7m_!K
%o`\tC<U_6Ka[mfCj<="U>0F5AW$[H$[[1>bn@4=%7\d5)8]kc=a9F9?GUh<Hf9$:X<d"a8FdA!Cbh:HZ]C!s5<9al,E%W5fJ(B.u
%;ols&67o'!PU1R8[ZN\n^D<JA1OE#7"pKH[2u=W.!S6gA"`P0!@Ukg79L<S;gV>ok_/GB*'_?K0;/[<IjHJcGXt;,f's/_b;NX^a
%&khi)P@$QD33]\F!t27gTD`6LS?3:djpkmjns.6dR)R=U-.O8rXKcUU3.h9.;],h*EcjfE*]bFmR`!GW\#c]Lmp6idMk_h(bh<E0
%]/a\+b#1Yj!e@&RW-Xs:)(#[a25>(8kYg`%>miAkj0aTAQMe6s+Ia4WN&"D!!MSH0!3`PpX4+^QfsLD1gYRASLkD\gpH#;i/G[t(
%bJgGCZt_W^ZX+/@f$"OnAdYfUi[)(co(I/*'_KC+Gs4fk1r>$']9bXhKDPP;PtC6a<_uG3pP?+BLEVY*1.g_,8)$obpDC`V_9XX\
%iV6H>32pt%'c"FJ<5MF(A)T]d"@^HUE`D,g#ks^P3$&c3%.B51S8S,WbHE"5e?rl<3)]lQ'mO"$#[AaQ.KE(I:,99qk%K97[m6o,
%h^R,9]S;Iid2%"G@fD--o%]!A2WQ3>$^MO^U#':Zgcq_!NGD4Q>cjUC*H(X$N6lQ,(oF)Mm3sVWrDEtqP&;mQ'B?3pnM9^pLF%02
%!EH*J`!&A!X<qsop_L2))+jS`jP*FYq7snl@h.alFT@l&rPk=tT7>ZsEob@$K=lM4=Vr2:TW&V`,Ki^?iT;;42!cGUl$u2sM6`U7
%,_7\lf(\=m/"1&C"N8e=ASq4,\F^+6fal/Ep-Z?1nI*CQB<"S?k9<%h`[EW*8ZM#ScY9b)CJ8$(Jb`,eNfZIP'Tg@CP?"[FL$_MS
%iggAjGh^EF+*i/5nL$UgW-CQ<0928B>doXLeCi)Ip7q/?X:/Z,Y5VCo>Ktis=H0>gGEs?`Chm"=%Z%j?.#3(5D]VAlS00[bePNN`
%h2Ft=kbV1lebAooN8%8'r@7d(9Z9XN:j-Iu-30n?'VT]@Bmnr(-K2Eam[#.'5_>srj-C1t,fqCqTm2R5>ASFp1<#Zj?2X7jL\OsX
%-YaX5T&n4q09h&2IE[u/>dXf*WH4c+dJ93/HaTqeh+QlO"%=nq!1-1cA:SAk13m+n!c+3sklPe#Lb@gNaN3%lp]ge&%gIYW`3>@<
%.`)34pgVdZ4c=E1;6R-qDd-_n+k&rd=*nh?Y*0\sGq$7/W&K`Wn$O#O,'Bt4f<FQ2gE(hBW2#E<LgF<0qupD$&iZ_B7c"2W+0#3A
%$)=.jr[.e_7*QYE&]8B_f!3<THe^kqQt@#!,!gIs7a9i#bY8tU\=F@.8e/+B9!racPnr)0UjM^Ln3H6cDIT_]91<ZmZ$C3=e`nK`
%Ym06)6^D/<f!V9qB-[;d77eDpHj\&`VX>F)^AYKu?U!`hLe*,%kQ[q)?Rq8(Y?UlMe-OY\T/BT.m("IA0(%YdoA5CaL$OmD:cSY+
%@!,VH(\G>-_G%/KOi\Xi&r-loE[)n2SVItUdqe3*NO%t9p"O4[e,Z*4Sc[kEi>c]pXE5(J]HYqKTh#SM<Hl9`_AS;_Up=NM_&J^=
%/?8rc_:;GP+Wn8jCHV@^b=A/caC-3r6g^K-luK@E$G"8=DPCXnaj*6NGZFL)WZ]uN!n#R:)V+Q^!XMO0"R:/PH*Jn^6F.9&??$Nu
%6sVU?YTE,2^$ZQ(Mr=,uk1aIQ$,=T5H5s,QBpiLnk;Ce0Jqll<N"*Z?A^@=.+()S.';2"0"kM%@MU!2bW8.%7lUMstEf5h<&A(G!
%>2H>/-B<'f[\6hcS\h`!`Tb@A\[J2tZ%hu6B^(o;bcKYq;tOG\&"HU<*H_[C:P/'#FpF;p=n>B3N._'9aB=8]$^r.`:rK[,)%\tR
%rY!DSa8cD9K+<l]U]C6`1?6H`*,c5A1d;WJ\H7t05?JZ"OHl:-_eg4)I+SbBKtKn^/Ifimk"no8,m^;GKI:\^A:F/!MSBq%(V4-A
%nU[1sn:epA:c*)_l,V.59@4A3h/XsVSRm`-48I3E"]8LWioJRrHE5)!&fO/mf2h]kl__c("eY9VTiA9K7@3K=U11kL5uaSn#ch_c
%F>j3Dfk$Jl1*n'UOhD[n\W:)^mZ<p\6D>qbXX_1bd[Xo;lR359)L=<\eEA=g(NLtBiql2W<lj5VJSH#-(XNBg(F0SFrhWfr@5U$C
%_k."mVE:>ZFM>cXM@]rgic&3BLc(Dc67-\AZ2:cc*K;4sRKrS#,^j\H6FisO&uKKB.\tfJ\V/!"(3YqsEY.)GmM+=om_8;JaY+`\
%$dRi#ED#O/Id@d^._-Oi60HPoJMTB$`%PHO9Lgj:bsOXB&LNiC43EB(\Nu4DKh$ELC'EJ[7FI"`5sM&]=!D]1&ahh[#e^daCNr_e
%U\&E?=!&GV[8J($kX),OAlX_l(<!RZFAXaVZ_1VRX@$U5YL%Yg`Vk#/g(0JH50KNZq=OiNobW&i,;eg#.@2^q/he,CihZEk6\o<Z
%o-e#:)_Nt0L/J_t-NS(\9/$_U;7sXT&;AlcFci_VL%iaX/O*0-WK\\jFtIiNUe\FO$:S<b\XZKu(;AEt.]a_YM9_df<<A5oA9sO-
%4MmA/Kt@BPBpqkqf`g*ff<)!RCjim^A+DkeNMT:lnYqj^54ZMJA`j/KW]nq`pFZ^a)IT2M=X$>F[(;AoF[]cpV/heqc)o!OO!f<t
%!BK)K9rsT\Nc!8/j=40J;8^L9O6+>@$E,EU!6M#;ZPPNU*0,C]=]nW[C2"H-[4''EAX):mj6:Z)J?H;PP)LS"Xpi8-BEc]:UHgYK
%pY"4O]!K`MNR*%NqJkEO!X@uur`i<*mg6:g9`I]KXeOn]jGmF^)J+@!R'1d@b&[AKFMSNr%\<#JCS8.`*oMOJC_O=e),2BD%`Mh/
%EC>\mUdEgm@YY'RX`S62q;?UrOA:ML)HOq#abp"b"1"P:CS,uMmTF46lFPhGfV:mKiA?9#*+'b+:/f0Gl/e7m4ItK48f]\p(dCN6
%9/T\T7eS)HakkbGl>Bd(MQAG!&LKb>X<Tj%99D.==EIP!-[0DRP>8N:JV,+ALqi>]D/Q5,!,e`n.fq+JK'+KkN[4OFKQ6S$h)srb
%eO;)K>W_#2!nRn47o*@kVpN6,[%#8Oe8LG%Q&hDR5q[aH[rF@(?\,<K3lp)>jggR^5Od%&.mb3`KYftNbB?Z1_Hf*^kt0]0_4912
%enFDYdbK6OTk^^/P)IQ'D`&*neF04F6UdRkI)C_2P:s-hQP<=f2'<n7f;2?F;abA^HIE?HGs-DK,\R+\rf**K-KD`&_o\/B<rL0L
%3;<pN,nFa,1:A"'Ztc.R7JH.KJ\=0=n6l&iUZ<o4l38`ah>Hi;8!_6L_i7d"!*aE4AT#nn[U^^56LSbk"&Q2jXX.+qPh@?Bg(#*s
%?K<m/_2&_h!F)]3@;VJWSK/=lbKSKEfQ#=\%U5C]8C0Q2W3WETV>?QO%Sa]9**u9ZL3:NlEsmLZ><#:1'(IO3X5:pjQ'qml7s*?&
%e%sb'HX&gOpVuA;If62iZT?Bc2N2Ip;'s9@.9-On_@5Zkk:ltiQ0fj][uT(#)Y`e?[;6Za8]lX:(A2mQ\PT17do.88UP[+U`kIgX
%n]B4tY_-36WhP6-/r(l\mYW6K%>e&^^@(Koh(FbGK%hRL>1V=5YGGcsohh\tf\([<pO7FGo/1,@&p)_XYFdoPjTA;lfl?;Tj@*l;
%T"9Z?-EEKh_qVN)K]t:aL%Yp2B]G(00'm!;4+Mrj32-bW9/6mfBu)1<R$`jd^mZ0O0o)6sbS#n7AeQNDB"2Y.0V&@"mTd`dkpnbV
%]8gA.$+P^<oe9-H@7*aO-Z8_'q?t<EU[,LZNLZ%Gg#6J1eoDT"kC.mYfQZr\Z!1/Ql[_h`l.6*,n-;.bkG^_b)VK7I]i_+_6dZm\
%D/qf?lV:D@Gt2*5p9G1!\fF#o<O+EYF*r0(l>7c$`G=?ATO?<H&D-o/f[SMKdP%3[@=n,XG`pQ-GDjo/4]2UTV.#h]hFA)elE6-t
%<c3VX3']tg(=u7s^OFgdRk1gs"qV?.WC+Z2,3JQ+[aWL4C0/*6q,<,f[=(b89ff9hH-+P)9F4OhaLN>8eha_!at!tJ-<CrC5]#%H
%l7'qm$1/$5P_B;1Q['_.Z,;`8Ri2DJjZ_GdlGgj1>)YG&p,LV=_aWuinh\:*,JIJi(X".i\VeE2?=rn&p>!bC+8AUC2Yg1P.6AJ6
%Y#>J'ecSdq?O72kclM_/(c%_+a^_*;VlY)Z4WU^&QqK\;n0CiXZ3&_$VNKJ-#N%?L`=8V_mY?_im`-h([fDr^;_:8=H`8oP>RjsP
%%n^M5@U_r[Bo@dXfA:uaKY*b1Y>_WY5U_;7VS#fo]ek&LRk:A^E5J).If6c$6b:6]8RR;\ZJ@,T#Qdpf0ABb>(q]q1XJ!tCgW1V?
%Xu@i(f`YTk1Hl/9&LV`*8jGF+W'_#9'&UA+IBTg55[b8BZWL4e5f)Ns6"TlREDLK32M*#Z`+PaB=l-Kc)*aL2n7q<P<Z4NWF9)F#
%iZ*ii_\]C3Z!X#4AI2f:lJC+<IJiYU#OV=`W!Y"R"kYHL7"HL+SfRYMLL?/.NhLGN?)r<I;CD$3\BkHZ=P:(LN&J1QLh[0rF+e1A
%0@SaZ!sO:m_30Gn%'pWtTF/'^,%s\$fG#T5K;6uP]`aakGR_h(+?"6(1QVudJ3[V=$iq.jl:A)8[[a0l:)/MMP^G<VdS)jJSicc0
%"-6*#$b9u?`Rl1P9WNGL`>'_ND'l7aFoFR,*HhounnqPElE*])X/!1YasKb_X/k\Xk(;MVUr%n`q.Xa$FA#%#Y;OTVYEX?*=#9W#
%qI+FqbAZUUY%$5>DZJ"P8P#&.l0bQOR9IsoPYS#b?\Fqll3m\#fY%Ot5!6Jmi]YkTmr"/*4SSBha.95pU&<^j2b-liF_&IVS"kLE
%ZrbGqOe5fQhNPK1:i(35DMd-gqL""#@AN%iPPZ)N`@N>[>!_8+r4(kN&0/fH"uJ:?lEhNN\lnFAc*9Mm'[im"\nGng`F13'f)-:`
%L[<+,+e3Vi*P%eko(F9T&S)uCC'0$TX]0/BgtYUW^OG8&/@1VR)I3N08@-R;$tX)dTG-UVI#.Ys<mjk\]l.7W,d8bR?,W^SmDr?!
%FbJ[55-p8kMci+cNpf>ZX).k@FCo_Rc4FI&NSgRMl82O00SYfR*G1CGNQ3KER6+_rP.0<U]##*Xck`3$Zfh\2*OdZ/[q\l:PgDjS
%[Ns&Ek?`W5aAXBGa\F=:&'0l/'FW"9AqTcJ:rAI'='rElCiF)Xi>>1V9dCHS*j(=U1pUl>Tdj?B!];iH3HMY,Nj[K]8X0ZUhus;9
%RH,Ge_[niO[L<f)5']Bn'6PRqQ=G[Cb%0^-L$muL>WJ];,4b6`kZ)oClhdj^Vl3Z7$._o/:B,Q'c8)Hri;&OYmS1%H]'8;-%t$<G
%A_WA@%PJc?_bqKF.6Kp(b.Vn_-=a8GO'Dk<`<8EM>GbGd:X8oHB!ZNJdNuO3nh;DLGC(\-!G*jto:rRQ]I]TeJ&2sKOucT9k;aD"
%T=fSuU5//?k*Q2bO*[=pj_p8e&?/MQgGc/!DG/hZ93P\!@8WR1$6TX2_"]40cdV=2BA.Dk^O5CA#O'ZGH;c7=%rVPMpOQ5DP^K@'
%=-Or\jGl,S#Jk,A/3V2d>kj!)\6N>p&kT<GNJou"YeoaO(sZDp)o'=uR`riOWGk9PlWA0ckokBT%ToOfWSA?X_c$'$r'-QGf-h-U
%8[KZd?]$.tr035#4@GQ+&sVIG*I*ParL#/HQ^^a!n\G/4DqFc8Y"&U5<RksCfoR<#e>;<&-GA`2`C9<;E991B5r+?Y4+M]V,XOs9
%SktQ_6Ar;FEcfd!$YEmp=I&P?^5j\Ajb<gCSNS5^f1S7hWTLdfGo;rS(X_@AF[k@SqaGVWE9/KK&-PIb4-!r%3OD0=>8#.!`\RJQ
%mF@2Ci6/rP?)Jd)]K5W;?H<*$b:d5qK6H_]8MC1uK's9A-96mHoM?I@S3.;M$6p.Xd?,/[Cl)<`:3eP,Cu/sHpafL5U;YS21Tqj!
%U=64\+[t%\'WuU<;G2_tY(gSdFGNiFCN8it3?OCF3MiddD#Zq.$!WFURode"h"8]ndXtAjbC-(F_"I`gmDWipE4VH^(<g,T<eo77
%-5US]q=WbX(8;1j5o+C/_Kbq&IcNLqQR;O$/#V*V"_-OB%QSj2,n?AZ%\NpdK;m*8G0S@+X?>.4Pd*)kdM<]QeJPZ0B+'UY23R?h
%k!:ne/4:nI+mRDkG+6LTX&aL?RZVtrqG(?5T9E(/&tB8W,86-h8^oQmjR$*PI9NWF7+tMH.G]lqDE@U4"95<gB!GT4LD_M>Z[M,X
%OUIGd2_I27XWVW;r6@0#i9=XR=LpSP<!WE!Us9m,7?e9C8cq>7k#.d$]7kSlA4@+aLMTuO2[KOt;$Ike2@fgE`2Uad_0'cs';3b3
%cnWbh$q1i?.H>@NX/`FT=,m&i-ZMTfZ^37M-?Tl]iuCWi5h=oOp$p5W538:9`(insP=AUb<N^7GC!ZtMaBL)ai<.J=M*brtZWq]X
%d91l\(u4cRi81Wt080_,b:WHM+g_g19-Z<f.SA8KfP$LQ\ZSb<E?gr#dU6]E(u3:m>b@tV+r]>o$Z+<c,[pU6.F;kRoJO=;VJ,ZO
%-d,`VkB$.pd\upQbX4IgDYj.ij,QN33ebjfDR1HV-9BqP]$?r^EYbK.q'r)'O)blXf+[QU9pO"F4IFk[QT>6CEjq8&gdc%N\Ucj7
%1\B@l\(dgjU_H]\i(ngfftQj&@piVPI4NK?q[t-[Pq'+b):hT)7Bg52\&>#J[ZD]_d#&"JI(]$.\B7<1q&[M)EGAWe`*JR&Z_pQI
%rO;ri.h\Y]3/&Z'28,(]\VJOt7OP!VYEGp?gBba;4j*%;iU&@g)X3b'<@X#jP;en))K7hn0?q<REgj.;M8nB--8+tf!GYIt3?IJ:
%&^IA_+5+=Cm<rn3N6aRJ3m:k+HGEXS+Th%<#7)q"8]8df'pP74VV:9P@[EE"*La*`ntqa\54Z5+/.'j5I3m33d$6tgqWaObd='m!
%?K_$E-r)]M5^'/_r3Q.]JLjc:j<udZ;1rb`:s\+?j61W0M^VH9LrNS&>&)6N#&1:Q4/76tOBlW)pUP0E@EdtJF_S7&:GDMA!-``[
%^c']S#>CW(-\[8!\rQER-08?PQ_1-r`!UK+Dg^j0f8oblA79_6V]!GgZY^RV:nUIP=LG]UNj!]olLLehL,GQ=!1BpQfDq)0?6Dm@
%C^#bG8oP/HA4RB=d)iZ/aR-<W&'L.u`8M"q!TShKp='kc*n9Y:-Pm.>3%h41Ne^6`h.;M!-Qqp(kuamK4=0%FVBV0088?<R+OB.)
%:g9,"WQa<-iTEsbq7qVsmV8G_bs_`L:dd%G,"ba*D']i]nTPi#3U\GRJKI?"d_YI2@Tc0W#X9V/K7VCjY@`_"T.+pr02uMlaE@50
%B,(jel=mTCO(_0<*]l,fraakE@QSU7'5V>j;pmFHSdW$7,%^`nd*q7m77&A=i<3!AWF;W&2q(IIo+@Ms(&pXSrhjX_q9W(4,n_M>
%kUm,%s*f(XM\Ksb&s/m%)IWu4DIeTmgMlm@`<2J<MK"K5[G.ATe]X8>LVOW=9,hA@o-8f0=d:n"\JBc(0_Mu=,tV,c0.W%3g*6hn
%-se)*fgRUaYAd;US[]eU++As$_.c\7<iCd%7&Uo/gW`9O9X9HWObKmHVo4L3HMHTs5"dT.16$*tUPE]:,j075a-F&YAt:0[S\3I@
%`CLh\>H*7@,+@IM4TiW:1A]-a^s"c([U7_qZsjFTRAnB[HC5i9$Be\gQsl4@D<L`r=G?RDD8t$-ENHjNm:(7jg(SS;$t,R?pnh;X
%qikM%lC`NZ^ptTQ85ZbWP6=puc&/B;UT_^fQeVGm*e*pX6[a0>nAm5u_uXUmC/_aWi34Ok0Wc%*DO*@]2)-@d(s3ujm6ePIh3@!_
%jeaN0?KXFD8)hQSJYmZD-#I5ZB.DaT7H__lY@E3Q`LMRmXHkr8JSne_!?5Xif/!ico5m!&k1QgjQ)O&Ih6m_-^oZ#0-968h/&2T$
%;0^Kr/BS7sjekk&q7pL^eZ<M?hF,H+/HT8F9MOpbR7=NG]LaG#6O8%^8ZF_@q(N"n\h;?[.VKRrj"$(har&/^-1@Ts4Y6364WT>*
%DODC1f/]XHl9#Bajje97h.g&iN8PCI5hT%I+PjQe/L2o"?e[lV$Us(k.7Gq.QEp'+KGSSfE+=mIK&3JsifP_I<bM-7P@$NCP6ir)
%6#,]r27&1\8Kq60-uNJ@hGWnU]<%jBHSmg<Mu$C$)1S^qbH)&?46i(FGgDXtKikc=;3rcC4ie]ZQdFMLKtpq.B"+F8=i8f=`dRq)
%X?).5i^"!FP[g;JRlS_JCN!"A>Hp)5E4Wn3V.JIG-Yfi4d8/,6G[`@TW%Le+HTge<5Q:cCohUSq7+nUS<H5]@AJ(e.8[,fui;q`)
%P_Aau"\i9LoX295GS$l>5uqQ2`#"CU?b!jV8Z5\KfmE*FfN\9a&'[WR@oAgM9,L&ddgnYO+07VQo,u,>jA*VP.l"ej!):TXq/b#,
%MJUEFdpmlD"Se^9nt@'id0e%R6T_FJ4I%Y70G,M^WOVl[F!lJ+SG:09FPltN-cNi?:&nn!4=<g2C,k$SgE&u6YoPJW^bF`#:&QaE
%q_,dWrL7/GK_nic/Eog>RiOTNka'2p8]4MOTlRQP_@Qo54)5KD>q@rn%bW5'CqIri7Q`]'=let;7;J20:O[!'oU:1&\jXfnqVgtB
%iI_<Gos[`#,3,CnhG3XTc^6nd5WEd,=Ob1_Z4Tm(a6d4#"6(gS"o-H)FLZ_crS)j*R9KA[0>D`I4mafhr/ULnq=HK@WB^=%k7<%5
%='*:Hrg3W!rq[`9pG]kdJ)C4ej2\4Zci;b's6dM6rQVPGc_p5\o8>j1]79hQDnl2=l[S[7I-5_RFT#PgrpD`&rU^'fa5;:=iLg/L
%+9*'-pnRV:5QC>iric@t(Ou/Y!II#563~>
%AI9_PrivateDataEnd
